{
	"id": "8542a81c1f35af70a5298bcf19bc2705",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"fury/contracts/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.19;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        address owner = ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        // Decrease balance with checked arithmetic, because an `ownerOf` override may\n        // invalidate the assumption that `_balances[from] >= 1`.\n        _balances[owner] -= 1;\n\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        // Decrease balance with checked arithmetic, because an `ownerOf` override may\n        // invalidate the assumption that `_balances[from] >= 1`.\n        _balances[from] -= 1;\n\n        unchecked {\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"
			},
			"fury/contracts/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.19;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"fury/contracts/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.19;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"fury/contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"fury/contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.19;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"fury/contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"fury/contracts/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.19;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"fury/contracts/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"fury/contracts/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"fury/contracts/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"fury/contracts/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":595:16656  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1326:1439  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1400:1405  name_ */\n  dup2\n    /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1392:1397  _name */\n  0x00\n    /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1392:1405  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1425:1432  symbol_ */\n  dup1\n    /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1415:1422  _symbol */\n  0x01\n    /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1415:1432  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1326:1439  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":595:16656  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":595:16656  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":595:16656  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1506:1806  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2389:2478  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3810:3968  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3359:3749  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4460:4747  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4813:4953  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2117:2327  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1865:2060  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2542:2635  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4035:4179  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5019:5286  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2701:2968  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4245:4398  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1506:1806  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1608:1612  bool */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1658:1683  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1643:1683  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1643:1654  interfaceId */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1643:1683  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1643:1747  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_76\n      jumpi\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1714:1747  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1699:1747  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1699:1710  interfaceId */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1699:1747  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1643:1747  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1643:1799  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1763:1799  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1787:1798  interfaceId */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1763:1786  super.supportsInterface */\n      tag_79\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1763:1799  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_78:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1643:1799  interfaceId == type(IERC721).interfaceId ||... */\n    tag_77:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1624:1799  return... */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1506:1806  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2389:2478  function name() public view virtual returns (string memory) {... */\n    tag_25:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2434:2447  string memory */\n      0x60\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2466:2471  _name */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2459:2471  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2389:2478  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3810:3968  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_31:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3877:3884  address */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3896:3919  _requireMinted(tokenId) */\n      tag_88\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3911:3918  tokenId */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3896:3910  _requireMinted */\n      tag_89\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3896:3919  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3937:3952  _tokenApprovals */\n      0x04\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3937:3961  _tokenApprovals[tokenId] */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3953:3960  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3937:3961  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3930:3961  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3810:3968  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3359:3749  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_37:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3430:3443  address owner */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3446:3462  ownerOf(tokenId) */\n      tag_91\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3454:3461  tokenId */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3446:3453  ownerOf */\n      tag_47\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3446:3462  ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3430:3462  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3486:3491  owner */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3480:3491  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3480:3482  to */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3480:3491  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3472:3529  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3577:3582  owner */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3561:3582  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3561:3573  _msgSender() */\n      tag_95\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3561:3571  _msgSender */\n      tag_96\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3561:3573  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3561:3582  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3561:3623  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3586:3623  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3603:3608  owner */\n      dup2\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3610:3622  _msgSender() */\n      tag_99\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3610:3620  _msgSender */\n      tag_96\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3610:3622  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3586:3602  isApprovedForAll */\n      tag_73\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3586:3623  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_98:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3561:3623  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_97:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3540:3710  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3721:3742  _approve(to, tokenId) */\n      tag_103\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3730:3732  to */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3734:3741  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3721:3729  _approve */\n      tag_104\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3721:3742  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3420:3749  {... */\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3359:3749  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4460:4747  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_41:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4610:4651  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4629:4641  _msgSender() */\n      tag_107\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4629:4639  _msgSender */\n      tag_96\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4629:4641  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4643:4650  tokenId */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4610:4628  _isApprovedOrOwner */\n      tag_108\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4610:4651  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4602:4701  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4712:4740  _transfer(from, to, tokenId) */\n      tag_112\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4722:4726  from */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4728:4730  to */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4732:4739  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4712:4721  _transfer */\n      tag_113\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4712:4740  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4460:4747  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4813:4953  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_44:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4907:4946  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_115\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4924:4928  from */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4930:4932  to */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4934:4941  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4907:4946  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4907:4923  safeTransferFrom */\n      tag_65\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4907:4946  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_115:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4813:4953  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2117:2327  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_47:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2180:2187  address */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2199:2212  address owner */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2215:2232  _ownerOf(tokenId) */\n      tag_117\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2224:2231  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2215:2223  _ownerOf */\n      tag_118\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2215:2232  _ownerOf(tokenId) */\n      jump\t// in\n    tag_117:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2199:2232  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2267:2268  0 */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2250:2269  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2250:2255  owner */\n      dup2\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2250:2269  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2242:2298  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2315:2320  owner */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2308:2320  return owner */\n      swap2\n      pop\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2117:2327  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1865:2060  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1928:1935  uint256 */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1972:1973  0 */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1955:1974  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1955:1960  owner */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1955:1974  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1947:2020  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2037:2046  _balances */\n      0x03\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2037:2053  _balances[owner] */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2047:2052  owner */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2037:2053  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2030:2053  return _balances[owner] */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":1865:2060  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2542:2635  function symbol() public view virtual returns (string memory) {... */\n    tag_56:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2589:2602  string memory */\n      0x60\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2621:2628  _symbol */\n      0x01\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2614:2628  return _symbol */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_82\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_82\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2542:2635  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4035:4179  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_61:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4120:4172  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4139:4151  _msgSender() */\n      tag_134\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4139:4149  _msgSender */\n      tag_96\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4139:4151  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4153:4161  operator */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4163:4171  approved */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4120:4138  _setApprovalForAll */\n      tag_135\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4120:4172  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_133:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4035:4179  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5019:5286  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_65:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5140:5181  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_137\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5159:5171  _msgSender() */\n      tag_138\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5159:5169  _msgSender */\n      tag_96\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5159:5171  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5173:5180  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5140:5158  _isApprovedOrOwner */\n      tag_108\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5140:5181  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5132:5231  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_111\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5241:5279  _safeTransfer(from, to, tokenId, data) */\n      tag_141\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5255:5259  from */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5261:5263  to */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5265:5272  tokenId */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5274:5278  data */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5241:5254  _safeTransfer */\n      tag_142\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5241:5279  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_141:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":5019:5286  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2701:2968  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_68:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2765:2778  string memory */\n      0x60\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2790:2813  _requireMinted(tokenId) */\n      tag_144\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2805:2812  tokenId */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2790:2804  _requireMinted */\n      tag_89\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2790:2813  _requireMinted(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2824:2845  string memory baseURI */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2848:2858  _baseURI() */\n      tag_145\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2848:2856  _baseURI */\n      tag_146\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2848:2858  _baseURI() */\n      jump\t// in\n    tag_145:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2824:2858  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2899:2900  0 */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2881:2888  baseURI */\n      dup2\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2875:2896  bytes(baseURI).length */\n      mload\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2875:2900  bytes(baseURI).length > 0 */\n      gt\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2875:2961  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_147\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_148)\n    tag_147:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2927:2934  baseURI */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2936:2954  tokenId.toString() */\n      tag_149\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2936:2943  tokenId */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2936:2952  tokenId.toString */\n      tag_150\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2936:2954  tokenId.toString() */\n      jump\t// in\n    tag_149:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2910:2955  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2875:2961  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_148:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2868:2961  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":2701:2968  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4245:4398  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_73:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4333:4337  bool */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4356:4374  _operatorApprovals */\n      0x05\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4356:4381  _operatorApprovals[owner] */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4375:4380  owner */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4356:4381  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4356:4391  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4382:4390  operator */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4356:4391  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4349:4391  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":4245:4398  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/utils/introspection/ERC165.sol\":732:878  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_79:\n        /* \"fury/contracts/contracts/utils/introspection/ERC165.sol\":808:812  bool */\n      0x00\n        /* \"fury/contracts/contracts/utils/introspection/ERC165.sol\":846:871  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"fury/contracts/contracts/utils/introspection/ERC165.sol\":831:871  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"fury/contracts/contracts/utils/introspection/ERC165.sol\":831:842  interfaceId */\n      dup3\n        /* \"fury/contracts/contracts/utils/introspection/ERC165.sol\":831:871  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"fury/contracts/contracts/utils/introspection/ERC165.sol\":824:871  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/introspection/ERC165.sol\":732:878  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12888:13021  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12969:12985  _exists(tokenId) */\n      tag_156\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12977:12984  tokenId */\n      dup2\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12969:12976  _exists */\n      tag_157\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12969:12985  _exists(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12961:13014  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_121\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12888:13021  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/utils/Context.sol\":641:737  function _msgSender() internal view virtual returns (address) {... */\n    tag_96:\n        /* \"fury/contracts/contracts/utils/Context.sol\":694:701  address */\n      0x00\n        /* \"fury/contracts/contracts/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"fury/contracts/contracts/utils/Context.sol\":713:730  return msg.sender */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/Context.sol\":641:737  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12227:12391  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12328:12330  to */\n      dup2\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12301:12316  _tokenApprovals */\n      0x04\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12301:12325  _tokenApprovals[tokenId] */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12317:12324  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12301:12325  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12301:12330  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12376:12383  tokenId */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12372:12374  to */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12345:12384  Approval(ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12354:12370  ownerOf(tokenId) */\n      tag_162\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12362:12369  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12354:12361  ownerOf */\n      tag_47\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12354:12370  ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12345:12384  Approval(ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12227:12391  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7225:7479  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7318:7322  bool */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7334:7347  address owner */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7350:7366  ownerOf(tokenId) */\n      tag_164\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7358:7365  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7350:7357  ownerOf */\n      tag_47\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7350:7366  ownerOf(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7334:7366  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7395:7400  owner */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7384:7400  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7384:7391  spender */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7384:7400  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7384:7436  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_165\n      jumpi\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7404:7436  isApprovedForAll(owner, spender) */\n      tag_166\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7421:7426  owner */\n      dup2\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7428:7435  spender */\n      dup6\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7404:7420  isApprovedForAll */\n      tag_73\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7404:7436  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7384:7436  spender == owner || isApprovedForAll(owner, spender) */\n    tag_165:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7384:7471  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7464:7471  spender */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7440:7471  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7440:7460  getApproved(tokenId) */\n      tag_168\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7452:7459  tokenId */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7440:7451  getApproved */\n      tag_31\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7440:7460  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7440:7471  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7384:7471  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_167:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7376:7472  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap2\n      pop\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7225:7479  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":10996:12115  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n    tag_113:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11113:11117  from */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11093:11117  ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11093:11109  ownerOf(tokenId) */\n      tag_170\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11101:11108  tokenId */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11093:11100  ownerOf */\n      tag_47\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11093:11109  ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11093:11117  ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11085:11159  require(ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11191:11192  0 */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11177:11193  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11177:11179  to */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11177:11193  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11169:11234  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11245:11287  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_177\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11266:11270  from */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11272:11274  to */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11276:11283  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11285:11286  1 */\n      0x01\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11245:11265  _beforeTokenTransfer */\n      tag_178\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11245:11287  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_177:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11407:11411  from */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11387:11411  ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11387:11403  ownerOf(tokenId) */\n      tag_179\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11395:11402  tokenId */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11387:11394  ownerOf */\n      tag_47\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11387:11403  ownerOf(tokenId) */\n      jump\t// in\n    tag_179:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11387:11411  ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11379:11453  require(ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_173\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11522:11537  _tokenApprovals */\n      0x04\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11522:11546  _tokenApprovals[tokenId] */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11538:11545  tokenId */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11522:11546  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11515:11546  delete _tokenApprovals[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11729:11730  1 */\n      0x01\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11710:11719  _balances */\n      0x03\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11710:11725  _balances[from] */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11720:11724  from */\n      dup6\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11710:11725  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11710:11730  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11970:11971  1 */\n      0x01\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11953:11962  _balances */\n      0x03\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11953:11966  _balances[to] */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11963:11965  to */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11953:11966  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11953:11971  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12011:12013  to */\n      dup2\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11992:11999  _owners */\n      0x02\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11992:12008  _owners[tokenId] */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12000:12007  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11992:12008  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":11992:12013  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12048:12055  tokenId */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12044:12046  to */\n      dup3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12029:12056  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12038:12042  from */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12029:12056  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12067:12108  _afterTokenTransfer(from, to, tokenId, 1) */\n      tag_184\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12087:12091  from */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12093:12095  to */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12097:12104  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12106:12107  1 */\n      0x01\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12067:12086  _afterTokenTransfer */\n      tag_185\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12067:12108  _afterTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_184:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":10996:12115  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6523:6638  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_118:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6589:6596  address */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6615:6622  _owners */\n      0x02\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6615:6631  _owners[tokenId] */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6623:6630  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6615:6631  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6608:6631  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6523:6638  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12527:12804  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_135:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12647:12655  operator */\n      dup2\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12638:12655  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12638:12643  owner */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12638:12655  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12630:12685  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12733:12741  approved */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12695:12713  _operatorApprovals */\n      0x05\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12695:12720  _operatorApprovals[owner] */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12714:12719  owner */\n      dup6\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12695:12720  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12695:12730  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12721:12729  operator */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12695:12730  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12695:12741  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12778:12786  operator */\n      dup2\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12756:12797  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12771:12776  owner */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12756:12797  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12788:12796  approved */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12756:12797  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_191\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":12527:12804  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6147:6414  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_142:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6259:6287  _transfer(from, to, tokenId) */\n      tag_193\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6269:6273  from */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6275:6277  to */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6279:6286  tokenId */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6259:6268  _transfer */\n      tag_113\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6259:6287  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_193:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6305:6352  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_194\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6328:6332  from */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6334:6336  to */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6338:6345  tokenId */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6347:6351  data */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6305:6327  _checkOnERC721Received */\n      tag_195\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6305:6352  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_194:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6297:6407  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6147:6414  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3210:3302  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_146:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3261:3274  string memory */\n      0x60\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3286:3295  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":3210:3302  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"fury/contracts/contracts/utils/Strings.sol\":448:1144  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_150:\n        /* \"fury/contracts/contracts/utils/Strings.sol\":504:517  string memory */\n      0x60\n        /* \"fury/contracts/contracts/utils/Strings.sol\":553:567  uint256 length */\n      0x00\n        /* \"fury/contracts/contracts/utils/Strings.sol\":590:591  1 */\n      0x01\n        /* \"fury/contracts/contracts/utils/Strings.sol\":570:587  Math.log10(value) */\n      tag_201\n        /* \"fury/contracts/contracts/utils/Strings.sol\":581:586  value */\n      dup5\n        /* \"fury/contracts/contracts/utils/Strings.sol\":570:580  Math.log10 */\n      tag_202\n        /* \"fury/contracts/contracts/utils/Strings.sol\":570:587  Math.log10(value) */\n      jump\t// in\n    tag_201:\n        /* \"fury/contracts/contracts/utils/Strings.sol\":570:591  Math.log10(value) + 1 */\n      add\n        /* \"fury/contracts/contracts/utils/Strings.sol\":553:591  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/Strings.sol\":605:625  string memory buffer */\n      0x00\n        /* \"fury/contracts/contracts/utils/Strings.sol\":639:645  length */\n      dup2\n        /* \"fury/contracts/contracts/utils/Strings.sol\":628:646  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_203\n      jumpi\n      tag_204\n      tag_205\n      jump\t// in\n    tag_204:\n    tag_203:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_206\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_206:\n      pop\n        /* \"fury/contracts/contracts/utils/Strings.sol\":605:646  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/Strings.sol\":660:671  uint256 ptr */\n      0x00\n        /* \"fury/contracts/contracts/utils/Strings.sol\":786:792  length */\n      dup3\n        /* \"fury/contracts/contracts/utils/Strings.sol\":782:784  32 */\n      0x20\n        /* \"fury/contracts/contracts/utils/Strings.sol\":778:793  add(32, length) */\n      add\n        /* \"fury/contracts/contracts/utils/Strings.sol\":770:776  buffer */\n      dup3\n        /* \"fury/contracts/contracts/utils/Strings.sol\":766:794  add(buffer, add(32, length)) */\n      add\n        /* \"fury/contracts/contracts/utils/Strings.sol\":759:794  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/Strings.sol\":821:1101  while (true) {... */\n    tag_207:\n        /* \"fury/contracts/contracts/utils/Strings.sol\":828:832  true */\n      0x01\n        /* \"fury/contracts/contracts/utils/Strings.sol\":821:1101  while (true) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"fury/contracts/contracts/utils/Strings.sol\":852:857  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"fury/contracts/contracts/utils/Strings.sol\":991:999  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"fury/contracts/contracts/utils/Strings.sol\":986:988  10 */\n      0x0a\n        /* \"fury/contracts/contracts/utils/Strings.sol\":979:984  value */\n      dup7\n        /* \"fury/contracts/contracts/utils/Strings.sol\":975:989  mod(value, 10) */\n      mod\n        /* \"fury/contracts/contracts/utils/Strings.sol\":970:1000  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"fury/contracts/contracts/utils/Strings.sol\":965:968  ptr */\n      dup2\n        /* \"fury/contracts/contracts/utils/Strings.sol\":957:1001  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"fury/contracts/contracts/utils/Strings.sol\":1045:1047  10 */\n      0x0a\n        /* \"fury/contracts/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      dup6\n      dup2\n      tag_209\n      jumpi\n      tag_210\n      tag_211\n      jump\t// in\n    tag_210:\n    tag_209:\n      div\n      swap5\n      pop\n        /* \"fury/contracts/contracts/utils/Strings.sol\":1078:1079  0 */\n      0x00\n        /* \"fury/contracts/contracts/utils/Strings.sol\":1069:1074  value */\n      dup6\n        /* \"fury/contracts/contracts/utils/Strings.sol\":1069:1079  value == 0 */\n      sub\n        /* \"fury/contracts/contracts/utils/Strings.sol\":821:1101  while (true) {... */\n      tag_207\n        /* \"fury/contracts/contracts/utils/Strings.sol\":1065:1086  if (value == 0) break */\n      jumpi\n        /* \"fury/contracts/contracts/utils/Strings.sol\":821:1101  while (true) {... */\n    tag_208:\n        /* \"fury/contracts/contracts/utils/Strings.sol\":1121:1127  buffer */\n      dup2\n        /* \"fury/contracts/contracts/utils/Strings.sol\":1114:1127  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"fury/contracts/contracts/utils/Strings.sol\":448:1144  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6941:7067  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_157:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7006:7010  bool */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7058:7059  0 */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7029:7060  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7029:7046  _ownerOf(tokenId) */\n      tag_214\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7038:7045  tokenId */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7029:7037  _ownerOf */\n      tag_118\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7029:7046  _ownerOf(tokenId) */\n      jump\t// in\n    tag_214:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7029:7060  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":7022:7060  return _ownerOf(tokenId) != address(0) */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":6941:7067  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":15123:15239  function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {} */\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":15945:16060  function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {} */\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13573:14407  function _checkOnERC721Received(... */\n    tag_195:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13722:13726  bool */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13759:13760  0 */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13742:13744  to */\n      dup5\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13742:13756  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13742:13760  to.code.length > 0 */\n      gt\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13738:14401  if (to.code.length > 0) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13796:13798  to */\n      dup4\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13780:13816  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13817:13829  _msgSender() */\n      tag_219\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13817:13827  _msgSender */\n      tag_96\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13817:13829  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13831:13835  from */\n      dup8\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13837:13844  tokenId */\n      dup7\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13846:13850  data */\n      dup7\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13780:13851  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      0x01\n    tag_222:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13776:14349  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_225\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_230\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_229)\n    tag_230:\n      0x60\n      swap2\n      pop\n    tag_229:\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14035:14036  0 */\n      0x00\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14018:14024  reason */\n      dup2\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14018:14031  reason.length */\n      mload\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14018:14036  reason.length == 0 */\n      sub\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14014:14335  if (reason.length == 0) {... */\n      tag_231\n      jumpi\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14060:14120  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_198\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14014:14335  if (reason.length == 0) {... */\n    tag_231:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14287:14293  reason */\n      dup1\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14281:14294  mload(reason) */\n      mload\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14272:14278  reason */\n      dup2\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14268:14270  32 */\n      0x20\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14264:14279  add(32, reason) */\n      add\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14257:14295  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13776:14349  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_225:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13911:13952  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13901:13952  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13901:13907  retval */\n      dup2\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13901:13952  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13894:13952  return retval == IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_217)\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13738:14401  if (to.code.length > 0) {... */\n    tag_218:\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14386:14390  true */\n      0x01\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":14379:14390  return true */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/token/ERC721/ERC721.sol\":13573:14407  function _checkOnERC721Received(... */\n    tag_217:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12161:13077  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_202:\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12214:12221  uint256 */\n      0x00\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12233:12247  uint256 result */\n      dup1\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12250:12251  0 */\n      0x00\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12233:12251  uint256 result = 0 */\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12298:12306  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12289:12294  value */\n      dup4\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12289:12306  value >= 10 ** 64 */\n      lt\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12285:12388  if (value >= 10 ** 64) {... */\n      tag_237\n      jumpi\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12335:12343  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12326:12343  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_238\n      jumpi\n      tag_239\n      tag_211\n      jump\t// in\n    tag_239:\n    tag_238:\n      div\n      swap3\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12371:12373  64 */\n      0x40\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12361:12373  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12285:12388  if (value >= 10 ** 64) {... */\n    tag_237:\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12414:12422  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12405:12410  value */\n      dup4\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12405:12422  value >= 10 ** 32 */\n      lt\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12401:12504  if (value >= 10 ** 32) {... */\n      tag_240\n      jumpi\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12451:12459  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12442:12459  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_241\n      jumpi\n      tag_242\n      tag_211\n      jump\t// in\n    tag_242:\n    tag_241:\n      div\n      swap3\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12487:12489  32 */\n      0x20\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12477:12489  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12401:12504  if (value >= 10 ** 32) {... */\n    tag_240:\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12530:12538  10 ** 16 */\n      0x2386f26fc10000\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12521:12526  value */\n      dup4\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12521:12538  value >= 10 ** 16 */\n      lt\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12517:12620  if (value >= 10 ** 16) {... */\n      tag_243\n      jumpi\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12567:12575  10 ** 16 */\n      0x2386f26fc10000\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12558:12575  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_244\n      jumpi\n      tag_245\n      tag_211\n      jump\t// in\n    tag_245:\n    tag_244:\n      div\n      swap3\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12603:12605  16 */\n      0x10\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12593:12605  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12517:12620  if (value >= 10 ** 16) {... */\n    tag_243:\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12646:12653  10 ** 8 */\n      0x05f5e100\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12637:12642  value */\n      dup4\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12637:12653  value >= 10 ** 8 */\n      lt\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12633:12733  if (value >= 10 ** 8) {... */\n      tag_246\n      jumpi\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12682:12689  10 ** 8 */\n      0x05f5e100\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12673:12689  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_247\n      jumpi\n      tag_248\n      tag_211\n      jump\t// in\n    tag_248:\n    tag_247:\n      div\n      swap3\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12717:12718  8 */\n      0x08\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12707:12718  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12633:12733  if (value >= 10 ** 8) {... */\n    tag_246:\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12759:12766  10 ** 4 */\n      0x2710\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12750:12755  value */\n      dup4\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12750:12766  value >= 10 ** 4 */\n      lt\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12746:12846  if (value >= 10 ** 4) {... */\n      tag_249\n      jumpi\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12795:12802  10 ** 4 */\n      0x2710\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12786:12802  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_250\n      jumpi\n      tag_251\n      tag_211\n      jump\t// in\n    tag_251:\n    tag_250:\n      div\n      swap3\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12830:12831  4 */\n      0x04\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12820:12831  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12746:12846  if (value >= 10 ** 4) {... */\n    tag_249:\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12872:12879  10 ** 2 */\n      0x64\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12863:12868  value */\n      dup4\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12863:12879  value >= 10 ** 2 */\n      lt\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12859:12959  if (value >= 10 ** 2) {... */\n      tag_252\n      jumpi\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12908:12915  10 ** 2 */\n      0x64\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12899:12915  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_253\n      jumpi\n      tag_254\n      tag_211\n      jump\t// in\n    tag_254:\n    tag_253:\n      div\n      swap3\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12943:12944  2 */\n      0x02\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12933:12944  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12859:12959  if (value >= 10 ** 2) {... */\n    tag_252:\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12985:12992  10 ** 1 */\n      0x0a\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12976:12981  value */\n      dup4\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12976:12992  value >= 10 ** 1 */\n      lt\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12972:13038  if (value >= 10 ** 1) {... */\n      tag_255\n      jumpi\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":13022:13023  1 */\n      0x01\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":13012:13023  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12972:13038  if (value >= 10 ** 1) {... */\n    tag_255:\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":13064:13070  result */\n      dup1\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":13057:13070  return result */\n      swap2\n      pop\n      pop\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":12161:13077  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_256:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_257:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_258:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_259:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_260:\n        /* \"#utility.yul\":561:584   */\n      tag_320\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_259\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_321:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_261:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_323\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_260\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_20:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_326\n      tag_257\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":833:952   */\n    tag_325:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_327\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_261\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_262:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_263:\n        /* \"#utility.yul\":1268:1289   */\n      tag_330\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_262\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_23:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_332\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_263\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_264:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_265:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_266:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_336:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_336)\n    tag_338:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_267:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_268:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_341\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_264\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2329:2400   */\n      tag_342\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_265\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_343\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_266\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2499:2528   */\n      tag_344\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_267\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_27:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_346\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_268\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_269:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_270:\n        /* \"#utility.yul\":3016:3040   */\n      tag_349\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_269\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_350:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_271:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_352\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_270\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_30:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_355\n      tag_257\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3292:3411   */\n    tag_354:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_356\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_271\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_272:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_273:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_359\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_272\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_274:\n        /* \"#utility.yul\":3872:3896   */\n      tag_361\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_273\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_33:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_363\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_274\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_275:\n        /* \"#utility.yul\":4210:4234   */\n      tag_365\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_273\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_366:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_276:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_368\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_275\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_36:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_371\n      tag_257\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4503:4622   */\n    tag_370:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_372\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_276\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_373\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_271\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_40:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_376\n      tag_257\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5000:5119   */\n    tag_375:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_377\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_276\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_378\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_276\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_379\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_271\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_51:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_382\n      tag_257\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5591:5710   */\n    tag_381:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_383\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_276\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_277:\n        /* \"#utility.yul\":5937:5961   */\n      tag_385\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_269\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_54:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_387\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_277\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_278:\n        /* \"#utility.yul\":6272:6293   */\n      tag_389\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_262\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_390:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_279:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_392\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_278\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_60:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_395\n      tag_257\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6553:6672   */\n    tag_394:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_396\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_276\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_397\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_279\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_280:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_281:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_205:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_282:\n        /* \"#utility.yul\":7452:7479   */\n      tag_402\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_267\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_404\n      tag_205\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7525:7613   */\n    tag_403:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_283:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_406\n      tag_256\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_407\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_282\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_284:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_410\n      tag_205\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7928:7984   */\n    tag_409:\n        /* \"#utility.yul\":8002:8031   */\n      tag_411\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_267\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_285:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_286:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_414\n        /* \"#utility.yul\":8374:8422   */\n      tag_415\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_284\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8358:8423   */\n      tag_283\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_417\n      tag_281\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8498:8610   */\n    tag_416:\n        /* \"#utility.yul\":8619:8673   */\n      tag_418\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_285\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_287:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_421\n      tag_280\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8769:8891   */\n    tag_420:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_422\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_286\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_64:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_425\n      tag_257\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9178:9298   */\n    tag_424:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_426\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_276\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_427\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_276\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_428\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_271\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_430\n      tag_258\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9765:9882   */\n    tag_429:\n        /* \"#utility.yul\":9906:9968   */\n      tag_431\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_287\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_72:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_434\n      tag_257\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10084:10203   */\n    tag_433:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_435\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_276\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_436\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_276\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_288:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_82:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_439:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_441\n      tag_288\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10887:10971   */\n    tag_440:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11203   */\n    tag_289:\n        /* \"#utility.yul\":11123:11157   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":11119:11120   */\n      0x00\n        /* \"#utility.yul\":11111:11117   */\n      dup3\n        /* \"#utility.yul\":11107:11121   */\n      add\n        /* \"#utility.yul\":11100:11158   */\n      mstore\n        /* \"#utility.yul\":11192:11195   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11187:11189   */\n      0x20\n        /* \"#utility.yul\":11179:11185   */\n      dup3\n        /* \"#utility.yul\":11175:11190   */\n      add\n        /* \"#utility.yul\":11168:11196   */\n      mstore\n        /* \"#utility.yul\":10983:11203   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11209:11575   */\n    tag_290:\n        /* \"#utility.yul\":11351:11354   */\n      0x00\n        /* \"#utility.yul\":11372:11439   */\n      tag_444\n        /* \"#utility.yul\":11436:11438   */\n      0x21\n        /* \"#utility.yul\":11431:11434   */\n      dup4\n        /* \"#utility.yul\":11372:11439   */\n      tag_265\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11365:11439   */\n      swap2\n      pop\n        /* \"#utility.yul\":11448:11541   */\n      tag_445\n        /* \"#utility.yul\":11537:11540   */\n      dup3\n        /* \"#utility.yul\":11448:11541   */\n      tag_289\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11566:11568   */\n      0x40\n        /* \"#utility.yul\":11561:11564   */\n      dup3\n        /* \"#utility.yul\":11557:11569   */\n      add\n        /* \"#utility.yul\":11550:11569   */\n      swap1\n      pop\n        /* \"#utility.yul\":11209:11575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11581:12000   */\n    tag_94:\n        /* \"#utility.yul\":11747:11751   */\n      0x00\n        /* \"#utility.yul\":11785:11787   */\n      0x20\n        /* \"#utility.yul\":11774:11783   */\n      dup3\n        /* \"#utility.yul\":11770:11788   */\n      add\n        /* \"#utility.yul\":11762:11788   */\n      swap1\n      pop\n        /* \"#utility.yul\":11834:11843   */\n      dup2\n        /* \"#utility.yul\":11828:11832   */\n      dup2\n        /* \"#utility.yul\":11824:11844   */\n      sub\n        /* \"#utility.yul\":11820:11821   */\n      0x00\n        /* \"#utility.yul\":11809:11818   */\n      dup4\n        /* \"#utility.yul\":11805:11822   */\n      add\n        /* \"#utility.yul\":11798:11845   */\n      mstore\n        /* \"#utility.yul\":11862:11993   */\n      tag_447\n        /* \"#utility.yul\":11988:11992   */\n      dup2\n        /* \"#utility.yul\":11862:11993   */\n      tag_290\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11854:11993   */\n      swap1\n      pop\n        /* \"#utility.yul\":11581:12000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12006:12254   */\n    tag_291:\n        /* \"#utility.yul\":12146:12180   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":12142:12143   */\n      0x00\n        /* \"#utility.yul\":12134:12140   */\n      dup3\n        /* \"#utility.yul\":12130:12144   */\n      add\n        /* \"#utility.yul\":12123:12181   */\n      mstore\n        /* \"#utility.yul\":12215:12246   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":12210:12212   */\n      0x20\n        /* \"#utility.yul\":12202:12208   */\n      dup3\n        /* \"#utility.yul\":12198:12213   */\n      add\n        /* \"#utility.yul\":12191:12247   */\n      mstore\n        /* \"#utility.yul\":12006:12254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12260:12626   */\n    tag_292:\n        /* \"#utility.yul\":12402:12405   */\n      0x00\n        /* \"#utility.yul\":12423:12490   */\n      tag_450\n        /* \"#utility.yul\":12487:12489   */\n      0x3d\n        /* \"#utility.yul\":12482:12485   */\n      dup4\n        /* \"#utility.yul\":12423:12490   */\n      tag_265\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12416:12490   */\n      swap2\n      pop\n        /* \"#utility.yul\":12499:12592   */\n      tag_451\n        /* \"#utility.yul\":12588:12591   */\n      dup3\n        /* \"#utility.yul\":12499:12592   */\n      tag_291\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12617:12619   */\n      0x40\n        /* \"#utility.yul\":12612:12615   */\n      dup3\n        /* \"#utility.yul\":12608:12620   */\n      add\n        /* \"#utility.yul\":12601:12620   */\n      swap1\n      pop\n        /* \"#utility.yul\":12260:12626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12632:13051   */\n    tag_102:\n        /* \"#utility.yul\":12798:12802   */\n      0x00\n        /* \"#utility.yul\":12836:12838   */\n      0x20\n        /* \"#utility.yul\":12825:12834   */\n      dup3\n        /* \"#utility.yul\":12821:12839   */\n      add\n        /* \"#utility.yul\":12813:12839   */\n      swap1\n      pop\n        /* \"#utility.yul\":12885:12894   */\n      dup2\n        /* \"#utility.yul\":12879:12883   */\n      dup2\n        /* \"#utility.yul\":12875:12895   */\n      sub\n        /* \"#utility.yul\":12871:12872   */\n      0x00\n        /* \"#utility.yul\":12860:12869   */\n      dup4\n        /* \"#utility.yul\":12856:12873   */\n      add\n        /* \"#utility.yul\":12849:12896   */\n      mstore\n        /* \"#utility.yul\":12913:13044   */\n      tag_453\n        /* \"#utility.yul\":13039:13043   */\n      dup2\n        /* \"#utility.yul\":12913:13044   */\n      tag_292\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12905:13044   */\n      swap1\n      pop\n        /* \"#utility.yul\":12632:13051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13057:13289   */\n    tag_293:\n        /* \"#utility.yul\":13197:13231   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":13193:13194   */\n      0x00\n        /* \"#utility.yul\":13185:13191   */\n      dup3\n        /* \"#utility.yul\":13181:13195   */\n      add\n        /* \"#utility.yul\":13174:13232   */\n      mstore\n        /* \"#utility.yul\":13266:13281   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":13261:13263   */\n      0x20\n        /* \"#utility.yul\":13253:13259   */\n      dup3\n        /* \"#utility.yul\":13249:13264   */\n      add\n        /* \"#utility.yul\":13242:13282   */\n      mstore\n        /* \"#utility.yul\":13057:13289   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13295:13661   */\n    tag_294:\n        /* \"#utility.yul\":13437:13440   */\n      0x00\n        /* \"#utility.yul\":13458:13525   */\n      tag_456\n        /* \"#utility.yul\":13522:13524   */\n      0x2d\n        /* \"#utility.yul\":13517:13520   */\n      dup4\n        /* \"#utility.yul\":13458:13525   */\n      tag_265\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":13451:13525   */\n      swap2\n      pop\n        /* \"#utility.yul\":13534:13627   */\n      tag_457\n        /* \"#utility.yul\":13623:13626   */\n      dup3\n        /* \"#utility.yul\":13534:13627   */\n      tag_293\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":13652:13654   */\n      0x40\n        /* \"#utility.yul\":13647:13650   */\n      dup3\n        /* \"#utility.yul\":13643:13655   */\n      add\n        /* \"#utility.yul\":13636:13655   */\n      swap1\n      pop\n        /* \"#utility.yul\":13295:13661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13667:14086   */\n    tag_111:\n        /* \"#utility.yul\":13833:13837   */\n      0x00\n        /* \"#utility.yul\":13871:13873   */\n      0x20\n        /* \"#utility.yul\":13860:13869   */\n      dup3\n        /* \"#utility.yul\":13856:13874   */\n      add\n        /* \"#utility.yul\":13848:13874   */\n      swap1\n      pop\n        /* \"#utility.yul\":13920:13929   */\n      dup2\n        /* \"#utility.yul\":13914:13918   */\n      dup2\n        /* \"#utility.yul\":13910:13930   */\n      sub\n        /* \"#utility.yul\":13906:13907   */\n      0x00\n        /* \"#utility.yul\":13895:13904   */\n      dup4\n        /* \"#utility.yul\":13891:13908   */\n      add\n        /* \"#utility.yul\":13884:13931   */\n      mstore\n        /* \"#utility.yul\":13948:14079   */\n      tag_459\n        /* \"#utility.yul\":14074:14078   */\n      dup2\n        /* \"#utility.yul\":13948:14079   */\n      tag_294\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13940:14079   */\n      swap1\n      pop\n        /* \"#utility.yul\":13667:14086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14092:14266   */\n    tag_295:\n        /* \"#utility.yul\":14232:14258   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":14228:14229   */\n      0x00\n        /* \"#utility.yul\":14220:14226   */\n      dup3\n        /* \"#utility.yul\":14216:14230   */\n      add\n        /* \"#utility.yul\":14209:14259   */\n      mstore\n        /* \"#utility.yul\":14092:14266   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14272:14638   */\n    tag_296:\n        /* \"#utility.yul\":14414:14417   */\n      0x00\n        /* \"#utility.yul\":14435:14502   */\n      tag_462\n        /* \"#utility.yul\":14499:14501   */\n      0x18\n        /* \"#utility.yul\":14494:14497   */\n      dup4\n        /* \"#utility.yul\":14435:14502   */\n      tag_265\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14428:14502   */\n      swap2\n      pop\n        /* \"#utility.yul\":14511:14604   */\n      tag_463\n        /* \"#utility.yul\":14600:14603   */\n      dup3\n        /* \"#utility.yul\":14511:14604   */\n      tag_295\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14629:14631   */\n      0x20\n        /* \"#utility.yul\":14624:14627   */\n      dup3\n        /* \"#utility.yul\":14620:14632   */\n      add\n        /* \"#utility.yul\":14613:14632   */\n      swap1\n      pop\n        /* \"#utility.yul\":14272:14638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14644:15063   */\n    tag_121:\n        /* \"#utility.yul\":14810:14814   */\n      0x00\n        /* \"#utility.yul\":14848:14850   */\n      0x20\n        /* \"#utility.yul\":14837:14846   */\n      dup3\n        /* \"#utility.yul\":14833:14851   */\n      add\n        /* \"#utility.yul\":14825:14851   */\n      swap1\n      pop\n        /* \"#utility.yul\":14897:14906   */\n      dup2\n        /* \"#utility.yul\":14891:14895   */\n      dup2\n        /* \"#utility.yul\":14887:14907   */\n      sub\n        /* \"#utility.yul\":14883:14884   */\n      0x00\n        /* \"#utility.yul\":14872:14881   */\n      dup4\n        /* \"#utility.yul\":14868:14885   */\n      add\n        /* \"#utility.yul\":14861:14908   */\n      mstore\n        /* \"#utility.yul\":14925:15056   */\n      tag_465\n        /* \"#utility.yul\":15051:15055   */\n      dup2\n        /* \"#utility.yul\":14925:15056   */\n      tag_296\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14917:15056   */\n      swap1\n      pop\n        /* \"#utility.yul\":14644:15063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15069:15297   */\n    tag_297:\n        /* \"#utility.yul\":15209:15243   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":15205:15206   */\n      0x00\n        /* \"#utility.yul\":15197:15203   */\n      dup3\n        /* \"#utility.yul\":15193:15207   */\n      add\n        /* \"#utility.yul\":15186:15244   */\n      mstore\n        /* \"#utility.yul\":15278:15289   */\n      0x6c6964206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15273:15275   */\n      0x20\n        /* \"#utility.yul\":15265:15271   */\n      dup3\n        /* \"#utility.yul\":15261:15276   */\n      add\n        /* \"#utility.yul\":15254:15290   */\n      mstore\n        /* \"#utility.yul\":15069:15297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15303:15669   */\n    tag_298:\n        /* \"#utility.yul\":15445:15448   */\n      0x00\n        /* \"#utility.yul\":15466:15533   */\n      tag_468\n        /* \"#utility.yul\":15530:15532   */\n      0x29\n        /* \"#utility.yul\":15525:15528   */\n      dup4\n        /* \"#utility.yul\":15466:15533   */\n      tag_265\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15459:15533   */\n      swap2\n      pop\n        /* \"#utility.yul\":15542:15635   */\n      tag_469\n        /* \"#utility.yul\":15631:15634   */\n      dup3\n        /* \"#utility.yul\":15542:15635   */\n      tag_297\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15660:15662   */\n      0x40\n        /* \"#utility.yul\":15655:15658   */\n      dup3\n        /* \"#utility.yul\":15651:15663   */\n      add\n        /* \"#utility.yul\":15644:15663   */\n      swap1\n      pop\n        /* \"#utility.yul\":15303:15669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15675:16094   */\n    tag_125:\n        /* \"#utility.yul\":15841:15845   */\n      0x00\n        /* \"#utility.yul\":15879:15881   */\n      0x20\n        /* \"#utility.yul\":15868:15877   */\n      dup3\n        /* \"#utility.yul\":15864:15882   */\n      add\n        /* \"#utility.yul\":15856:15882   */\n      swap1\n      pop\n        /* \"#utility.yul\":15928:15937   */\n      dup2\n        /* \"#utility.yul\":15922:15926   */\n      dup2\n        /* \"#utility.yul\":15918:15938   */\n      sub\n        /* \"#utility.yul\":15914:15915   */\n      0x00\n        /* \"#utility.yul\":15903:15912   */\n      dup4\n        /* \"#utility.yul\":15899:15916   */\n      add\n        /* \"#utility.yul\":15892:15939   */\n      mstore\n        /* \"#utility.yul\":15956:16087   */\n      tag_471\n        /* \"#utility.yul\":16082:16086   */\n      dup2\n        /* \"#utility.yul\":15956:16087   */\n      tag_298\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15948:16087   */\n      swap1\n      pop\n        /* \"#utility.yul\":15675:16094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16100:16248   */\n    tag_299:\n        /* \"#utility.yul\":16202:16213   */\n      0x00\n        /* \"#utility.yul\":16239:16242   */\n      dup2\n        /* \"#utility.yul\":16224:16242   */\n      swap1\n      pop\n        /* \"#utility.yul\":16100:16248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16254:16644   */\n    tag_300:\n        /* \"#utility.yul\":16360:16363   */\n      0x00\n        /* \"#utility.yul\":16388:16427   */\n      tag_474\n        /* \"#utility.yul\":16421:16426   */\n      dup3\n        /* \"#utility.yul\":16388:16427   */\n      tag_264\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":16443:16532   */\n      tag_475\n        /* \"#utility.yul\":16525:16531   */\n      dup2\n        /* \"#utility.yul\":16520:16523   */\n      dup6\n        /* \"#utility.yul\":16443:16532   */\n      tag_299\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":16436:16532   */\n      swap4\n      pop\n        /* \"#utility.yul\":16541:16606   */\n      tag_476\n        /* \"#utility.yul\":16599:16605   */\n      dup2\n        /* \"#utility.yul\":16594:16597   */\n      dup6\n        /* \"#utility.yul\":16587:16591   */\n      0x20\n        /* \"#utility.yul\":16580:16585   */\n      dup7\n        /* \"#utility.yul\":16576:16592   */\n      add\n        /* \"#utility.yul\":16541:16606   */\n      tag_266\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16631:16637   */\n      dup1\n        /* \"#utility.yul\":16626:16629   */\n      dup5\n        /* \"#utility.yul\":16622:16638   */\n      add\n        /* \"#utility.yul\":16615:16638   */\n      swap2\n      pop\n        /* \"#utility.yul\":16364:16644   */\n      pop\n        /* \"#utility.yul\":16254:16644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16650:17085   */\n    tag_152:\n        /* \"#utility.yul\":16830:16833   */\n      0x00\n        /* \"#utility.yul\":16852:16947   */\n      tag_478\n        /* \"#utility.yul\":16943:16946   */\n      dup3\n        /* \"#utility.yul\":16934:16940   */\n      dup6\n        /* \"#utility.yul\":16852:16947   */\n      tag_300\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16845:16947   */\n      swap2\n      pop\n        /* \"#utility.yul\":16964:17059   */\n      tag_479\n        /* \"#utility.yul\":17055:17058   */\n      dup3\n        /* \"#utility.yul\":17046:17052   */\n      dup5\n        /* \"#utility.yul\":16964:17059   */\n      tag_300\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":16957:17059   */\n      swap2\n      pop\n        /* \"#utility.yul\":17076:17079   */\n      dup2\n        /* \"#utility.yul\":17069:17079   */\n      swap1\n      pop\n        /* \"#utility.yul\":16650:17085   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17091:17315   */\n    tag_301:\n        /* \"#utility.yul\":17231:17265   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":17227:17228   */\n      0x00\n        /* \"#utility.yul\":17219:17225   */\n      dup3\n        /* \"#utility.yul\":17215:17229   */\n      add\n        /* \"#utility.yul\":17208:17266   */\n      mstore\n        /* \"#utility.yul\":17300:17307   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17295:17297   */\n      0x20\n        /* \"#utility.yul\":17287:17293   */\n      dup3\n        /* \"#utility.yul\":17283:17298   */\n      add\n        /* \"#utility.yul\":17276:17308   */\n      mstore\n        /* \"#utility.yul\":17091:17315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17321:17687   */\n    tag_302:\n        /* \"#utility.yul\":17463:17466   */\n      0x00\n        /* \"#utility.yul\":17484:17551   */\n      tag_482\n        /* \"#utility.yul\":17548:17550   */\n      0x25\n        /* \"#utility.yul\":17543:17546   */\n      dup4\n        /* \"#utility.yul\":17484:17551   */\n      tag_265\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17477:17551   */\n      swap2\n      pop\n        /* \"#utility.yul\":17560:17653   */\n      tag_483\n        /* \"#utility.yul\":17649:17652   */\n      dup3\n        /* \"#utility.yul\":17560:17653   */\n      tag_301\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":17678:17680   */\n      0x40\n        /* \"#utility.yul\":17673:17676   */\n      dup3\n        /* \"#utility.yul\":17669:17681   */\n      add\n        /* \"#utility.yul\":17662:17681   */\n      swap1\n      pop\n        /* \"#utility.yul\":17321:17687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17693:18112   */\n    tag_173:\n        /* \"#utility.yul\":17859:17863   */\n      0x00\n        /* \"#utility.yul\":17897:17899   */\n      0x20\n        /* \"#utility.yul\":17886:17895   */\n      dup3\n        /* \"#utility.yul\":17882:17900   */\n      add\n        /* \"#utility.yul\":17874:17900   */\n      swap1\n      pop\n        /* \"#utility.yul\":17946:17955   */\n      dup2\n        /* \"#utility.yul\":17940:17944   */\n      dup2\n        /* \"#utility.yul\":17936:17956   */\n      sub\n        /* \"#utility.yul\":17932:17933   */\n      0x00\n        /* \"#utility.yul\":17921:17930   */\n      dup4\n        /* \"#utility.yul\":17917:17934   */\n      add\n        /* \"#utility.yul\":17910:17957   */\n      mstore\n        /* \"#utility.yul\":17974:18105   */\n      tag_485\n        /* \"#utility.yul\":18100:18104   */\n      dup2\n        /* \"#utility.yul\":17974:18105   */\n      tag_302\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17966:18105   */\n      swap1\n      pop\n        /* \"#utility.yul\":17693:18112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18118:18341   */\n    tag_303:\n        /* \"#utility.yul\":18258:18292   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":18254:18255   */\n      0x00\n        /* \"#utility.yul\":18246:18252   */\n      dup3\n        /* \"#utility.yul\":18242:18256   */\n      add\n        /* \"#utility.yul\":18235:18293   */\n      mstore\n        /* \"#utility.yul\":18327:18333   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18322:18324   */\n      0x20\n        /* \"#utility.yul\":18314:18320   */\n      dup3\n        /* \"#utility.yul\":18310:18325   */\n      add\n        /* \"#utility.yul\":18303:18334   */\n      mstore\n        /* \"#utility.yul\":18118:18341   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18347:18713   */\n    tag_304:\n        /* \"#utility.yul\":18489:18492   */\n      0x00\n        /* \"#utility.yul\":18510:18577   */\n      tag_488\n        /* \"#utility.yul\":18574:18576   */\n      0x24\n        /* \"#utility.yul\":18569:18572   */\n      dup4\n        /* \"#utility.yul\":18510:18577   */\n      tag_265\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":18503:18577   */\n      swap2\n      pop\n        /* \"#utility.yul\":18586:18679   */\n      tag_489\n        /* \"#utility.yul\":18675:18678   */\n      dup3\n        /* \"#utility.yul\":18586:18679   */\n      tag_303\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18704:18706   */\n      0x40\n        /* \"#utility.yul\":18699:18702   */\n      dup3\n        /* \"#utility.yul\":18695:18707   */\n      add\n        /* \"#utility.yul\":18688:18707   */\n      swap1\n      pop\n        /* \"#utility.yul\":18347:18713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18719:19138   */\n    tag_176:\n        /* \"#utility.yul\":18885:18889   */\n      0x00\n        /* \"#utility.yul\":18923:18925   */\n      0x20\n        /* \"#utility.yul\":18912:18921   */\n      dup3\n        /* \"#utility.yul\":18908:18926   */\n      add\n        /* \"#utility.yul\":18900:18926   */\n      swap1\n      pop\n        /* \"#utility.yul\":18972:18981   */\n      dup2\n        /* \"#utility.yul\":18966:18970   */\n      dup2\n        /* \"#utility.yul\":18962:18982   */\n      sub\n        /* \"#utility.yul\":18958:18959   */\n      0x00\n        /* \"#utility.yul\":18947:18956   */\n      dup4\n        /* \"#utility.yul\":18943:18960   */\n      add\n        /* \"#utility.yul\":18936:18983   */\n      mstore\n        /* \"#utility.yul\":19000:19131   */\n      tag_491\n        /* \"#utility.yul\":19126:19130   */\n      dup2\n        /* \"#utility.yul\":19000:19131   */\n      tag_304\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":18992:19131   */\n      swap1\n      pop\n        /* \"#utility.yul\":18719:19138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19144:19324   */\n    tag_305:\n        /* \"#utility.yul\":19192:19269   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19189:19190   */\n      0x00\n        /* \"#utility.yul\":19182:19270   */\n      mstore\n        /* \"#utility.yul\":19289:19293   */\n      0x11\n        /* \"#utility.yul\":19286:19287   */\n      0x04\n        /* \"#utility.yul\":19279:19294   */\n      mstore\n        /* \"#utility.yul\":19313:19317   */\n      0x24\n        /* \"#utility.yul\":19310:19311   */\n      0x00\n        /* \"#utility.yul\":19303:19318   */\n      revert\n        /* \"#utility.yul\":19330:19524   */\n    tag_183:\n        /* \"#utility.yul\":19370:19374   */\n      0x00\n        /* \"#utility.yul\":19390:19410   */\n      tag_494\n        /* \"#utility.yul\":19408:19409   */\n      dup3\n        /* \"#utility.yul\":19390:19410   */\n      tag_269\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":19385:19410   */\n      swap2\n      pop\n        /* \"#utility.yul\":19424:19444   */\n      tag_495\n        /* \"#utility.yul\":19442:19443   */\n      dup4\n        /* \"#utility.yul\":19424:19444   */\n      tag_269\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":19419:19444   */\n      swap3\n      pop\n        /* \"#utility.yul\":19468:19469   */\n      dup3\n        /* \"#utility.yul\":19465:19466   */\n      dup3\n        /* \"#utility.yul\":19461:19470   */\n      sub\n        /* \"#utility.yul\":19453:19470   */\n      swap1\n      pop\n        /* \"#utility.yul\":19492:19493   */\n      dup2\n        /* \"#utility.yul\":19486:19490   */\n      dup2\n        /* \"#utility.yul\":19483:19494   */\n      gt\n        /* \"#utility.yul\":19480:19517   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":19497:19515   */\n      tag_497\n      tag_305\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":19480:19517   */\n    tag_496:\n        /* \"#utility.yul\":19330:19524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19530:19705   */\n    tag_306:\n        /* \"#utility.yul\":19670:19697   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":19666:19667   */\n      0x00\n        /* \"#utility.yul\":19658:19664   */\n      dup3\n        /* \"#utility.yul\":19654:19668   */\n      add\n        /* \"#utility.yul\":19647:19698   */\n      mstore\n        /* \"#utility.yul\":19530:19705   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19711:20077   */\n    tag_307:\n        /* \"#utility.yul\":19853:19856   */\n      0x00\n        /* \"#utility.yul\":19874:19941   */\n      tag_500\n        /* \"#utility.yul\":19938:19940   */\n      0x19\n        /* \"#utility.yul\":19933:19936   */\n      dup4\n        /* \"#utility.yul\":19874:19941   */\n      tag_265\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":19867:19941   */\n      swap2\n      pop\n        /* \"#utility.yul\":19950:20043   */\n      tag_501\n        /* \"#utility.yul\":20039:20042   */\n      dup3\n        /* \"#utility.yul\":19950:20043   */\n      tag_306\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":20068:20070   */\n      0x20\n        /* \"#utility.yul\":20063:20066   */\n      dup3\n        /* \"#utility.yul\":20059:20071   */\n      add\n        /* \"#utility.yul\":20052:20071   */\n      swap1\n      pop\n        /* \"#utility.yul\":19711:20077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20083:20502   */\n    tag_190:\n        /* \"#utility.yul\":20249:20253   */\n      0x00\n        /* \"#utility.yul\":20287:20289   */\n      0x20\n        /* \"#utility.yul\":20276:20285   */\n      dup3\n        /* \"#utility.yul\":20272:20290   */\n      add\n        /* \"#utility.yul\":20264:20290   */\n      swap1\n      pop\n        /* \"#utility.yul\":20336:20345   */\n      dup2\n        /* \"#utility.yul\":20330:20334   */\n      dup2\n        /* \"#utility.yul\":20326:20346   */\n      sub\n        /* \"#utility.yul\":20322:20323   */\n      0x00\n        /* \"#utility.yul\":20311:20320   */\n      dup4\n        /* \"#utility.yul\":20307:20324   */\n      add\n        /* \"#utility.yul\":20300:20347   */\n      mstore\n        /* \"#utility.yul\":20364:20495   */\n      tag_503\n        /* \"#utility.yul\":20490:20494   */\n      dup2\n        /* \"#utility.yul\":20364:20495   */\n      tag_307\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":20356:20495   */\n      swap1\n      pop\n        /* \"#utility.yul\":20083:20502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20508:20745   */\n    tag_308:\n        /* \"#utility.yul\":20648:20682   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":20644:20645   */\n      0x00\n        /* \"#utility.yul\":20636:20642   */\n      dup3\n        /* \"#utility.yul\":20632:20646   */\n      add\n        /* \"#utility.yul\":20625:20683   */\n      mstore\n        /* \"#utility.yul\":20717:20737   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":20712:20714   */\n      0x20\n        /* \"#utility.yul\":20704:20710   */\n      dup3\n        /* \"#utility.yul\":20700:20715   */\n      add\n        /* \"#utility.yul\":20693:20738   */\n      mstore\n        /* \"#utility.yul\":20508:20745   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20751:21117   */\n    tag_309:\n        /* \"#utility.yul\":20893:20896   */\n      0x00\n        /* \"#utility.yul\":20914:20981   */\n      tag_506\n        /* \"#utility.yul\":20978:20980   */\n      0x32\n        /* \"#utility.yul\":20973:20976   */\n      dup4\n        /* \"#utility.yul\":20914:20981   */\n      tag_265\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":20907:20981   */\n      swap2\n      pop\n        /* \"#utility.yul\":20990:21083   */\n      tag_507\n        /* \"#utility.yul\":21079:21082   */\n      dup3\n        /* \"#utility.yul\":20990:21083   */\n      tag_308\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":21108:21110   */\n      0x40\n        /* \"#utility.yul\":21103:21106   */\n      dup3\n        /* \"#utility.yul\":21099:21111   */\n      add\n        /* \"#utility.yul\":21092:21111   */\n      swap1\n      pop\n        /* \"#utility.yul\":20751:21117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21123:21542   */\n    tag_198:\n        /* \"#utility.yul\":21289:21293   */\n      0x00\n        /* \"#utility.yul\":21327:21329   */\n      0x20\n        /* \"#utility.yul\":21316:21325   */\n      dup3\n        /* \"#utility.yul\":21312:21330   */\n      add\n        /* \"#utility.yul\":21304:21330   */\n      swap1\n      pop\n        /* \"#utility.yul\":21376:21385   */\n      dup2\n        /* \"#utility.yul\":21370:21374   */\n      dup2\n        /* \"#utility.yul\":21366:21386   */\n      sub\n        /* \"#utility.yul\":21362:21363   */\n      0x00\n        /* \"#utility.yul\":21351:21360   */\n      dup4\n        /* \"#utility.yul\":21347:21364   */\n      add\n        /* \"#utility.yul\":21340:21387   */\n      mstore\n        /* \"#utility.yul\":21404:21535   */\n      tag_509\n        /* \"#utility.yul\":21530:21534   */\n      dup2\n        /* \"#utility.yul\":21404:21535   */\n      tag_309\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":21396:21535   */\n      swap1\n      pop\n        /* \"#utility.yul\":21123:21542   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21548:21728   */\n    tag_211:\n        /* \"#utility.yul\":21596:21673   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21593:21594   */\n      0x00\n        /* \"#utility.yul\":21586:21674   */\n      mstore\n        /* \"#utility.yul\":21693:21697   */\n      0x12\n        /* \"#utility.yul\":21690:21691   */\n      0x04\n        /* \"#utility.yul\":21683:21698   */\n      mstore\n        /* \"#utility.yul\":21717:21721   */\n      0x24\n        /* \"#utility.yul\":21714:21715   */\n      0x00\n        /* \"#utility.yul\":21707:21722   */\n      revert\n        /* \"#utility.yul\":21734:21832   */\n    tag_310:\n        /* \"#utility.yul\":21785:21791   */\n      0x00\n        /* \"#utility.yul\":21819:21824   */\n      dup2\n        /* \"#utility.yul\":21813:21825   */\n      mload\n        /* \"#utility.yul\":21803:21825   */\n      swap1\n      pop\n        /* \"#utility.yul\":21734:21832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21838:22006   */\n    tag_311:\n        /* \"#utility.yul\":21921:21932   */\n      0x00\n        /* \"#utility.yul\":21955:21961   */\n      dup3\n        /* \"#utility.yul\":21950:21953   */\n      dup3\n        /* \"#utility.yul\":21943:21962   */\n      mstore\n        /* \"#utility.yul\":21995:21999   */\n      0x20\n        /* \"#utility.yul\":21990:21993   */\n      dup3\n        /* \"#utility.yul\":21986:22000   */\n      add\n        /* \"#utility.yul\":21971:22000   */\n      swap1\n      pop\n        /* \"#utility.yul\":21838:22006   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22012:22385   */\n    tag_312:\n        /* \"#utility.yul\":22098:22101   */\n      0x00\n        /* \"#utility.yul\":22126:22164   */\n      tag_514\n        /* \"#utility.yul\":22158:22163   */\n      dup3\n        /* \"#utility.yul\":22126:22164   */\n      tag_310\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":22180:22250   */\n      tag_515\n        /* \"#utility.yul\":22243:22249   */\n      dup2\n        /* \"#utility.yul\":22238:22241   */\n      dup6\n        /* \"#utility.yul\":22180:22250   */\n      tag_311\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":22173:22250   */\n      swap4\n      pop\n        /* \"#utility.yul\":22259:22324   */\n      tag_516\n        /* \"#utility.yul\":22317:22323   */\n      dup2\n        /* \"#utility.yul\":22312:22315   */\n      dup6\n        /* \"#utility.yul\":22305:22309   */\n      0x20\n        /* \"#utility.yul\":22298:22303   */\n      dup7\n        /* \"#utility.yul\":22294:22310   */\n      add\n        /* \"#utility.yul\":22259:22324   */\n      tag_266\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":22349:22378   */\n      tag_517\n        /* \"#utility.yul\":22371:22377   */\n      dup2\n        /* \"#utility.yul\":22349:22378   */\n      tag_267\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":22344:22347   */\n      dup5\n        /* \"#utility.yul\":22340:22379   */\n      add\n        /* \"#utility.yul\":22333:22379   */\n      swap2\n      pop\n        /* \"#utility.yul\":22102:22385   */\n      pop\n        /* \"#utility.yul\":22012:22385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22391:23031   */\n    tag_221:\n        /* \"#utility.yul\":22586:22590   */\n      0x00\n        /* \"#utility.yul\":22624:22627   */\n      0x80\n        /* \"#utility.yul\":22613:22622   */\n      dup3\n        /* \"#utility.yul\":22609:22628   */\n      add\n        /* \"#utility.yul\":22601:22628   */\n      swap1\n      pop\n        /* \"#utility.yul\":22638:22709   */\n      tag_519\n        /* \"#utility.yul\":22706:22707   */\n      0x00\n        /* \"#utility.yul\":22695:22704   */\n      dup4\n        /* \"#utility.yul\":22691:22708   */\n      add\n        /* \"#utility.yul\":22682:22688   */\n      dup8\n        /* \"#utility.yul\":22638:22709   */\n      tag_274\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":22719:22791   */\n      tag_520\n        /* \"#utility.yul\":22787:22789   */\n      0x20\n        /* \"#utility.yul\":22776:22785   */\n      dup4\n        /* \"#utility.yul\":22772:22790   */\n      add\n        /* \"#utility.yul\":22763:22769   */\n      dup7\n        /* \"#utility.yul\":22719:22791   */\n      tag_274\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":22801:22873   */\n      tag_521\n        /* \"#utility.yul\":22869:22871   */\n      0x40\n        /* \"#utility.yul\":22858:22867   */\n      dup4\n        /* \"#utility.yul\":22854:22872   */\n      add\n        /* \"#utility.yul\":22845:22851   */\n      dup6\n        /* \"#utility.yul\":22801:22873   */\n      tag_277\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":22920:22929   */\n      dup2\n        /* \"#utility.yul\":22914:22918   */\n      dup2\n        /* \"#utility.yul\":22910:22930   */\n      sub\n        /* \"#utility.yul\":22905:22907   */\n      0x60\n        /* \"#utility.yul\":22894:22903   */\n      dup4\n        /* \"#utility.yul\":22890:22908   */\n      add\n        /* \"#utility.yul\":22883:22931   */\n      mstore\n        /* \"#utility.yul\":22948:23024   */\n      tag_522\n        /* \"#utility.yul\":23019:23023   */\n      dup2\n        /* \"#utility.yul\":23010:23016   */\n      dup5\n        /* \"#utility.yul\":22948:23024   */\n      tag_312\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":22940:23024   */\n      swap1\n      pop\n        /* \"#utility.yul\":22391:23031   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23037:23178   */\n    tag_313:\n        /* \"#utility.yul\":23093:23098   */\n      0x00\n        /* \"#utility.yul\":23124:23130   */\n      dup2\n        /* \"#utility.yul\":23118:23131   */\n      mload\n        /* \"#utility.yul\":23109:23131   */\n      swap1\n      pop\n        /* \"#utility.yul\":23140:23172   */\n      tag_524\n        /* \"#utility.yul\":23166:23171   */\n      dup2\n        /* \"#utility.yul\":23140:23172   */\n      tag_260\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":23037:23178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23184:23533   */\n    tag_224:\n        /* \"#utility.yul\":23253:23259   */\n      0x00\n        /* \"#utility.yul\":23302:23304   */\n      0x20\n        /* \"#utility.yul\":23290:23299   */\n      dup3\n        /* \"#utility.yul\":23281:23288   */\n      dup5\n        /* \"#utility.yul\":23277:23300   */\n      sub\n        /* \"#utility.yul\":23273:23305   */\n      slt\n        /* \"#utility.yul\":23270:23389   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":23308:23387   */\n      tag_527\n      tag_257\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":23270:23389   */\n    tag_526:\n        /* \"#utility.yul\":23428:23429   */\n      0x00\n        /* \"#utility.yul\":23453:23516   */\n      tag_528\n        /* \"#utility.yul\":23508:23515   */\n      dup5\n        /* \"#utility.yul\":23499:23505   */\n      dup3\n        /* \"#utility.yul\":23488:23497   */\n      dup6\n        /* \"#utility.yul\":23484:23506   */\n      add\n        /* \"#utility.yul\":23453:23516   */\n      tag_313\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":23443:23516   */\n      swap2\n      pop\n        /* \"#utility.yul\":23399:23526   */\n      pop\n        /* \"#utility.yul\":23184:23533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220328745b2c844051082123d7c653f594acc687abe83cdb3e7bc56f50ea3e4cf6264736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_58": {
									"entryPoint": null,
									"id": 58,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 97,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 320,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 138,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8574:10",
										"nodeType": "YulBlock",
										"src": "0:8574:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "423:28:10",
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:10",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:12:10",
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nativeSrc": "433:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nativeSrc": "546:28:10",
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:10",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:10",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nativeSrc": "556:12:10",
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nativeSrc": "556:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nativeSrc": "628:54:10",
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nativeSrc": "638:38:10",
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:10",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nativeSrc": "652:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:10",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nativeSrc": "668:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nativeSrc": "648:28:10",
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:10",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:10",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nativeSrc": "716:152:10",
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:10",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:10",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nativeSrc": "726:88:10",
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nativeSrc": "726:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:10",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:10",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nativeSrc": "823:15:10",
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nativeSrc": "823:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:10",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:10",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nativeSrc": "847:15:10",
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nativeSrc": "847:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nativeSrc": "917:238:10",
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nativeSrc": "927:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nativeSrc": "957:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nativeSrc": "945:40:10",
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:10",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:10",
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nativeSrc": "1098:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nativeSrc": "1098:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nativeSrc": "1036:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nativeSrc": "1072:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nativeSrc": "1033:62:10",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nativeSrc": "1030:88:10",
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nativeSrc": "1127:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nativeSrc": "1127:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:10",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:10",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nativeSrc": "1202:88:10",
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nativeSrc": "1212:30:10",
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nativeSrc": "1222:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nativeSrc": "1251:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nativeSrc": "1251:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:10",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:10",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nativeSrc": "1363:241:10",
													"nodeType": "YulBlock",
													"src": "1363:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:10",
																"nodeType": "YulBlock",
																"src": "1468:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:10"
																			},
																			"nativeSrc": "1470:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:10"
																		},
																		"nativeSrc": "1470:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:10"
																},
																"nativeSrc": "1437:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:10"
															},
															"nativeSrc": "1434:56:10",
															"nodeType": "YulIf",
															"src": "1434:56:10"
														},
														{
															"nativeSrc": "1500:37:10",
															"nodeType": "YulAssignment",
															"src": "1500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:10"
																},
																"nativeSrc": "1508:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:10"
																}
															]
														},
														{
															"nativeSrc": "1574:23:10",
															"nodeType": "YulAssignment",
															"src": "1574:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:10"
																},
																"nativeSrc": "1582:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:10",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:10",
														"nodeType": "YulTypedName",
														"src": "1358:4:10",
														"type": ""
													}
												],
												"src": "1296:308:10"
											},
											{
												"body": {
													"nativeSrc": "1672:184:10",
													"nodeType": "YulBlock",
													"src": "1672:184:10",
													"statements": [
														{
															"nativeSrc": "1682:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:10",
																"nodeType": "YulLiteral",
																"src": "1691:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:10",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:10",
																"nodeType": "YulBlock",
																"src": "1751:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:10"
																					},
																					"nativeSrc": "1772:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:10"
																							},
																							"nativeSrc": "1791:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:10"
																					},
																					"nativeSrc": "1785:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:10"
																			},
																			"nativeSrc": "1765:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:10"
																		},
																		"nativeSrc": "1765:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:10"
																},
																"nativeSrc": "1709:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:10"
															},
															"nativeSrc": "1701:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:10",
																"nodeType": "YulBlock",
																"src": "1723:19:10",
																"statements": [
																	{
																		"nativeSrc": "1725:15:10",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:10",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:10"
																			},
																			"nativeSrc": "1730:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:10",
																"nodeType": "YulBlock",
																"src": "1705:3:10",
																"statements": []
															},
															"src": "1701:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:10"
																		},
																		"nativeSrc": "1830:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:10"
																},
																"nativeSrc": "1823:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:10"
															},
															"nativeSrc": "1823:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:10",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:10",
														"nodeType": "YulTypedName",
														"src": "1659:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:10",
														"nodeType": "YulTypedName",
														"src": "1664:6:10",
														"type": ""
													}
												],
												"src": "1610:246:10"
											},
											{
												"body": {
													"nativeSrc": "1957:339:10",
													"nodeType": "YulBlock",
													"src": "1957:339:10",
													"statements": [
														{
															"nativeSrc": "1967:75:10",
															"nodeType": "YulAssignment",
															"src": "1967:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:10"
																		},
																		"nativeSrc": "1992:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:10"
																},
																"nativeSrc": "1976:66:10",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:10"
																},
																"nativeSrc": "2051:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:10"
															},
															"nativeSrc": "2051:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:10"
														},
														{
															"nativeSrc": "2081:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:10"
																},
																"nativeSrc": "2092:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:10",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:10",
																"nodeType": "YulBlock",
																"src": "2146:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:10"
																			},
																			"nativeSrc": "2148:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:10"
																		},
																		"nativeSrc": "2148:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:10"
																		},
																		"nativeSrc": "2123:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:10"
																},
																"nativeSrc": "2120:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:10"
															},
															"nativeSrc": "2117:112:10",
															"nodeType": "YulIf",
															"src": "2117:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:10"
																},
																"nativeSrc": "2238:52:10",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:10"
															},
															"nativeSrc": "2238:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:10",
														"nodeType": "YulTypedName",
														"src": "1930:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:10",
														"nodeType": "YulTypedName",
														"src": "1935:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:10",
														"nodeType": "YulTypedName",
														"src": "1943:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:10",
														"nodeType": "YulTypedName",
														"src": "1951:5:10",
														"type": ""
													}
												],
												"src": "1862:434:10"
											},
											{
												"body": {
													"nativeSrc": "2389:282:10",
													"nodeType": "YulBlock",
													"src": "2389:282:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:10",
																"nodeType": "YulBlock",
																"src": "2438:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:10"
																			},
																			"nativeSrc": "2440:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:10"
																		},
																		"nativeSrc": "2440:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:10"
																				},
																				"nativeSrc": "2413:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:10"
																		},
																		"nativeSrc": "2409:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:10"
																},
																"nativeSrc": "2402:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:10"
															},
															"nativeSrc": "2399:122:10",
															"nodeType": "YulIf",
															"src": "2399:122:10"
														},
														{
															"nativeSrc": "2530:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:10"
																},
																"nativeSrc": "2544:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:10",
															"nodeType": "YulAssignment",
															"src": "2566:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:10"
																		},
																		"nativeSrc": "2634:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:10"
																},
																"nativeSrc": "2575:90:10",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:10",
														"nodeType": "YulTypedName",
														"src": "2367:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:10",
														"nodeType": "YulTypedName",
														"src": "2375:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:10",
														"nodeType": "YulTypedName",
														"src": "2383:5:10",
														"type": ""
													}
												],
												"src": "2316:355:10"
											},
											{
												"body": {
													"nativeSrc": "2791:739:10",
													"nodeType": "YulBlock",
													"src": "2791:739:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2837:83:10",
																"nodeType": "YulBlock",
																"src": "2837:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2839:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:10"
																			},
																			"nativeSrc": "2839:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:10"
																		},
																		"nativeSrc": "2839:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2812:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2821:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:10"
																		},
																		"nativeSrc": "2808:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2833:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2804:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:10"
																},
																"nativeSrc": "2804:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2804:32:10"
															},
															"nativeSrc": "2801:119:10",
															"nodeType": "YulIf",
															"src": "2801:119:10"
														},
														{
															"nativeSrc": "2930:291:10",
															"nodeType": "YulBlock",
															"src": "2930:291:10",
															"statements": [
																{
																	"nativeSrc": "2945:38:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2969:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2980:1:10",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2965:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:10"
																				},
																				"nativeSrc": "2965:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2959:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:10"
																		},
																		"nativeSrc": "2959:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2949:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3030:83:10",
																		"nodeType": "YulBlock",
																		"src": "3030:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3032:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:10"
																					},
																					"nativeSrc": "3032:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:10"
																				},
																				"nativeSrc": "3032:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3002:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3010:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2999:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:10"
																		},
																		"nativeSrc": "2999:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:10"
																	},
																	"nativeSrc": "2996:117:10",
																	"nodeType": "YulIf",
																	"src": "2996:117:10"
																},
																{
																	"nativeSrc": "3127:84:10",
																	"nodeType": "YulAssignment",
																	"src": "3127:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3183:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3194:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3179:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:10"
																				},
																				"nativeSrc": "3179:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3203:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3137:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:10"
																		},
																		"nativeSrc": "3137:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3127:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3231:292:10",
															"nodeType": "YulBlock",
															"src": "3231:292:10",
															"statements": [
																{
																	"nativeSrc": "3246:39:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3270:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3281:2:10",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3266:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:10"
																				},
																				"nativeSrc": "3266:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3260:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:10"
																		},
																		"nativeSrc": "3260:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3250:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3332:83:10",
																		"nodeType": "YulBlock",
																		"src": "3332:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3334:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:10"
																					},
																					"nativeSrc": "3334:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:10"
																				},
																				"nativeSrc": "3334:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3304:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3312:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3301:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:10"
																		},
																		"nativeSrc": "3301:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:10"
																	},
																	"nativeSrc": "3298:117:10",
																	"nodeType": "YulIf",
																	"src": "3298:117:10"
																},
																{
																	"nativeSrc": "3429:84:10",
																	"nodeType": "YulAssignment",
																	"src": "3429:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3485:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3496:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3481:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:10"
																				},
																				"nativeSrc": "3481:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3505:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3439:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:10"
																		},
																		"nativeSrc": "3439:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3429:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2677:853:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2753:9:10",
														"nodeType": "YulTypedName",
														"src": "2753:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2764:7:10",
														"nodeType": "YulTypedName",
														"src": "2764:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2776:6:10",
														"nodeType": "YulTypedName",
														"src": "2776:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2784:6:10",
														"nodeType": "YulTypedName",
														"src": "2784:6:10",
														"type": ""
													}
												],
												"src": "2677:853:10"
											},
											{
												"body": {
													"nativeSrc": "3595:40:10",
													"nodeType": "YulBlock",
													"src": "3595:40:10",
													"statements": [
														{
															"nativeSrc": "3606:22:10",
															"nodeType": "YulAssignment",
															"src": "3606:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3622:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3616:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:10"
																},
																"nativeSrc": "3616:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3616:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3606:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3536:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:10",
														"nodeType": "YulTypedName",
														"src": "3578:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3588:6:10",
														"nodeType": "YulTypedName",
														"src": "3588:6:10",
														"type": ""
													}
												],
												"src": "3536:99:10"
											},
											{
												"body": {
													"nativeSrc": "3669:152:10",
													"nodeType": "YulBlock",
													"src": "3669:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3686:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3689:77:10",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3679:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:10"
																},
																"nativeSrc": "3679:88:10",
																"nodeType": "YulFunctionCall",
																"src": "3679:88:10"
															},
															"nativeSrc": "3679:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3783:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3786:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3776:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:10"
																},
																"nativeSrc": "3776:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3776:15:10"
															},
															"nativeSrc": "3776:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3807:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3810:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3800:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:10"
																},
																"nativeSrc": "3800:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3800:15:10"
															},
															"nativeSrc": "3800:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3641:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:10"
											},
											{
												"body": {
													"nativeSrc": "3878:269:10",
													"nodeType": "YulBlock",
													"src": "3878:269:10",
													"statements": [
														{
															"nativeSrc": "3888:22:10",
															"nodeType": "YulAssignment",
															"src": "3888:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3902:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3908:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3898:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:10"
																},
																"nativeSrc": "3898:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3898:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3888:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:10"
																}
															]
														},
														{
															"nativeSrc": "3919:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3949:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3955:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3945:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:10"
																},
																"nativeSrc": "3945:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3945:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3923:18:10",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3996:51:10",
																"nodeType": "YulBlock",
																"src": "3996:51:10",
																"statements": [
																	{
																		"nativeSrc": "4010:27:10",
																		"nodeType": "YulAssignment",
																		"src": "4010:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4024:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4032:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4020:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:10"
																			},
																			"nativeSrc": "4020:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4010:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3976:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3969:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:10"
																},
																"nativeSrc": "3969:26:10",
																"nodeType": "YulFunctionCall",
																"src": "3969:26:10"
															},
															"nativeSrc": "3966:81:10",
															"nodeType": "YulIf",
															"src": "3966:81:10"
														},
														{
															"body": {
																"nativeSrc": "4099:42:10",
																"nodeType": "YulBlock",
																"src": "4099:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4113:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:10"
																			},
																			"nativeSrc": "4113:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:10"
																		},
																		"nativeSrc": "4113:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4063:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4086:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4094:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4083:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:10"
																		},
																		"nativeSrc": "4083:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4060:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:10"
																},
																"nativeSrc": "4060:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4060:38:10"
															},
															"nativeSrc": "4057:84:10",
															"nodeType": "YulIf",
															"src": "4057:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3827:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3862:4:10",
														"nodeType": "YulTypedName",
														"src": "3862:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3871:6:10",
														"nodeType": "YulTypedName",
														"src": "3871:6:10",
														"type": ""
													}
												],
												"src": "3827:320:10"
											},
											{
												"body": {
													"nativeSrc": "4207:87:10",
													"nodeType": "YulBlock",
													"src": "4207:87:10",
													"statements": [
														{
															"nativeSrc": "4217:11:10",
															"nodeType": "YulAssignment",
															"src": "4217:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "4225:3:10",
																"nodeType": "YulIdentifier",
																"src": "4225:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4217:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4245:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4248:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4238:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:10"
																},
																"nativeSrc": "4238:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4238:14:10"
															},
															"nativeSrc": "4238:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:10"
														},
														{
															"nativeSrc": "4261:26:10",
															"nodeType": "YulAssignment",
															"src": "4261:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4279:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4282:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4269:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:10"
																},
																"nativeSrc": "4269:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4269:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4261:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4153:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4194:3:10",
														"nodeType": "YulTypedName",
														"src": "4194:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4202:4:10",
														"nodeType": "YulTypedName",
														"src": "4202:4:10",
														"type": ""
													}
												],
												"src": "4153:141:10"
											},
											{
												"body": {
													"nativeSrc": "4344:49:10",
													"nodeType": "YulBlock",
													"src": "4344:49:10",
													"statements": [
														{
															"nativeSrc": "4354:33:10",
															"nodeType": "YulAssignment",
															"src": "4354:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4372:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4379:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4368:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:10"
																		},
																		"nativeSrc": "4368:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4364:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:10"
																},
																"nativeSrc": "4364:23:10",
																"nodeType": "YulFunctionCall",
																"src": "4364:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4354:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4300:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4327:5:10",
														"nodeType": "YulTypedName",
														"src": "4327:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4337:6:10",
														"nodeType": "YulTypedName",
														"src": "4337:6:10",
														"type": ""
													}
												],
												"src": "4300:93:10"
											},
											{
												"body": {
													"nativeSrc": "4452:54:10",
													"nodeType": "YulBlock",
													"src": "4452:54:10",
													"statements": [
														{
															"nativeSrc": "4462:37:10",
															"nodeType": "YulAssignment",
															"src": "4462:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4487:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4483:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:10"
																},
																"nativeSrc": "4483:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4483:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4462:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4399:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4427:4:10",
														"nodeType": "YulTypedName",
														"src": "4427:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4433:5:10",
														"nodeType": "YulTypedName",
														"src": "4433:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4443:8:10",
														"nodeType": "YulTypedName",
														"src": "4443:8:10",
														"type": ""
													}
												],
												"src": "4399:107:10"
											},
											{
												"body": {
													"nativeSrc": "4588:317:10",
													"nodeType": "YulBlock",
													"src": "4588:317:10",
													"statements": [
														{
															"nativeSrc": "4598:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4619:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4615:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:10"
																},
																"nativeSrc": "4615:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4615:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4602:9:10",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4642:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4673:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4684:66:10",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4654:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:10"
																},
																"nativeSrc": "4654:97:10",
																"nodeType": "YulFunctionCall",
																"src": "4654:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4646:4:10",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4760:51:10",
															"nodeType": "YulAssignment",
															"src": "4760:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4791:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4802:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4772:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:10"
																},
																"nativeSrc": "4772:39:10",
																"nodeType": "YulFunctionCall",
																"src": "4772:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4760:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:10"
																}
															]
														},
														{
															"nativeSrc": "4820:30:10",
															"nodeType": "YulAssignment",
															"src": "4820:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4833:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4844:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4840:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:10"
																		},
																		"nativeSrc": "4840:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4829:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:10"
																},
																"nativeSrc": "4829:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4829:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4820:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:10"
																}
															]
														},
														{
															"nativeSrc": "4859:40:10",
															"nodeType": "YulAssignment",
															"src": "4859:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4872:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4883:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4893:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4879:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:10"
																		},
																		"nativeSrc": "4879:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4869:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:10"
																},
																"nativeSrc": "4869:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4869:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4859:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4512:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4549:5:10",
														"nodeType": "YulTypedName",
														"src": "4549:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4556:10:10",
														"nodeType": "YulTypedName",
														"src": "4556:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4568:8:10",
														"nodeType": "YulTypedName",
														"src": "4568:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4581:6:10",
														"nodeType": "YulTypedName",
														"src": "4581:6:10",
														"type": ""
													}
												],
												"src": "4512:393:10"
											},
											{
												"body": {
													"nativeSrc": "4956:32:10",
													"nodeType": "YulBlock",
													"src": "4956:32:10",
													"statements": [
														{
															"nativeSrc": "4966:16:10",
															"nodeType": "YulAssignment",
															"src": "4966:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "4977:5:10",
																"nodeType": "YulIdentifier",
																"src": "4977:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4966:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4911:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4938:5:10",
														"nodeType": "YulTypedName",
														"src": "4938:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4948:7:10",
														"nodeType": "YulTypedName",
														"src": "4948:7:10",
														"type": ""
													}
												],
												"src": "4911:77:10"
											},
											{
												"body": {
													"nativeSrc": "5026:28:10",
													"nodeType": "YulBlock",
													"src": "5026:28:10",
													"statements": [
														{
															"nativeSrc": "5036:12:10",
															"nodeType": "YulAssignment",
															"src": "5036:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5043:5:10",
																"nodeType": "YulIdentifier",
																"src": "5043:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5036:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4994:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5012:5:10",
														"nodeType": "YulTypedName",
														"src": "5012:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5022:3:10",
														"nodeType": "YulTypedName",
														"src": "5022:3:10",
														"type": ""
													}
												],
												"src": "4994:60:10"
											},
											{
												"body": {
													"nativeSrc": "5120:82:10",
													"nodeType": "YulBlock",
													"src": "5120:82:10",
													"statements": [
														{
															"nativeSrc": "5130:66:10",
															"nodeType": "YulAssignment",
															"src": "5130:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5188:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5170:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:10"
																				},
																				"nativeSrc": "5170:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5161:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:10"
																		},
																		"nativeSrc": "5161:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5143:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:10"
																},
																"nativeSrc": "5143:53:10",
																"nodeType": "YulFunctionCall",
																"src": "5143:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5130:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5060:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:10",
														"nodeType": "YulTypedName",
														"src": "5100:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5110:9:10",
														"nodeType": "YulTypedName",
														"src": "5110:9:10",
														"type": ""
													}
												],
												"src": "5060:142:10"
											},
											{
												"body": {
													"nativeSrc": "5255:28:10",
													"nodeType": "YulBlock",
													"src": "5255:28:10",
													"statements": [
														{
															"nativeSrc": "5265:12:10",
															"nodeType": "YulAssignment",
															"src": "5265:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5272:5:10",
																"nodeType": "YulIdentifier",
																"src": "5272:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5265:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5208:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:10",
														"nodeType": "YulTypedName",
														"src": "5241:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5251:3:10",
														"nodeType": "YulTypedName",
														"src": "5251:3:10",
														"type": ""
													}
												],
												"src": "5208:75:10"
											},
											{
												"body": {
													"nativeSrc": "5365:193:10",
													"nodeType": "YulBlock",
													"src": "5365:193:10",
													"statements": [
														{
															"nativeSrc": "5375:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5430:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5399:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:10"
																},
																"nativeSrc": "5399:39:10",
																"nodeType": "YulFunctionCall",
																"src": "5399:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5379:16:10",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5454:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5494:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5488:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:10"
																				},
																				"nativeSrc": "5488:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5501:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5533:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5509:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:10"
																				},
																				"nativeSrc": "5509:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5460:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:10"
																		},
																		"nativeSrc": "5460:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5447:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:10"
																},
																"nativeSrc": "5447:105:10",
																"nodeType": "YulFunctionCall",
																"src": "5447:105:10"
															},
															"nativeSrc": "5447:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5289:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5342:4:10",
														"nodeType": "YulTypedName",
														"src": "5342:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5348:6:10",
														"nodeType": "YulTypedName",
														"src": "5348:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5356:7:10",
														"nodeType": "YulTypedName",
														"src": "5356:7:10",
														"type": ""
													}
												],
												"src": "5289:269:10"
											},
											{
												"body": {
													"nativeSrc": "5613:24:10",
													"nodeType": "YulBlock",
													"src": "5613:24:10",
													"statements": [
														{
															"nativeSrc": "5623:8:10",
															"nodeType": "YulAssignment",
															"src": "5623:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5630:1:10",
																"nodeType": "YulLiteral",
																"src": "5630:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5623:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5564:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5609:3:10",
														"nodeType": "YulTypedName",
														"src": "5609:3:10",
														"type": ""
													}
												],
												"src": "5564:73:10"
											},
											{
												"body": {
													"nativeSrc": "5696:136:10",
													"nodeType": "YulBlock",
													"src": "5696:136:10",
													"statements": [
														{
															"nativeSrc": "5706:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5720:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:10"
																},
																"nativeSrc": "5720:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5720:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5710:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5805:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5811:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5819:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5761:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:10"
																},
																"nativeSrc": "5761:65:10",
																"nodeType": "YulFunctionCall",
																"src": "5761:65:10"
															},
															"nativeSrc": "5761:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5643:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5682:4:10",
														"nodeType": "YulTypedName",
														"src": "5682:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5688:6:10",
														"nodeType": "YulTypedName",
														"src": "5688:6:10",
														"type": ""
													}
												],
												"src": "5643:189:10"
											},
											{
												"body": {
													"nativeSrc": "5888:136:10",
													"nodeType": "YulBlock",
													"src": "5888:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5955:63:10",
																"nodeType": "YulBlock",
																"src": "5955:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5999:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6006:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5969:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:10"
																			},
																			"nativeSrc": "5969:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:10"
																		},
																		"nativeSrc": "5969:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5908:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5915:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5905:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:10"
																},
																"nativeSrc": "5905:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5905:14:10"
															},
															"nativeSrc": "5898:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5920:26:10",
																"nodeType": "YulBlock",
																"src": "5920:26:10",
																"statements": [
																	{
																		"nativeSrc": "5922:22:10",
																		"nodeType": "YulAssignment",
																		"src": "5922:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5935:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5942:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5931:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:10"
																			},
																			"nativeSrc": "5931:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5922:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5902:2:10",
																"nodeType": "YulBlock",
																"src": "5902:2:10",
																"statements": []
															},
															"src": "5898:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5838:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5876:5:10",
														"nodeType": "YulTypedName",
														"src": "5876:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5883:3:10",
														"nodeType": "YulTypedName",
														"src": "5883:3:10",
														"type": ""
													}
												],
												"src": "5838:186:10"
											},
											{
												"body": {
													"nativeSrc": "6109:464:10",
													"nodeType": "YulBlock",
													"src": "6109:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6135:431:10",
																"nodeType": "YulBlock",
																"src": "6135:431:10",
																"statements": [
																	{
																		"nativeSrc": "6149:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6197:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6165:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:10"
																			},
																			"nativeSrc": "6165:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6153:8:10",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6216:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6239:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6267:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6249:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:10"
																					},
																					"nativeSrc": "6249:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6235:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:10"
																			},
																			"nativeSrc": "6235:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6220:11:10",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6436:27:10",
																			"nodeType": "YulBlock",
																			"src": "6436:27:10",
																			"statements": [
																				{
																					"nativeSrc": "6438:23:10",
																					"nodeType": "YulAssignment",
																					"src": "6438:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6453:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6438:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6420:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6432:2:10",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6417:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:10"
																			},
																			"nativeSrc": "6417:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:10"
																		},
																		"nativeSrc": "6414:49:10",
																		"nodeType": "YulIf",
																		"src": "6414:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6505:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6522:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6550:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6532:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:10"
																							},
																							"nativeSrc": "6532:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6518:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:10"
																					},
																					"nativeSrc": "6518:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6476:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:10"
																			},
																			"nativeSrc": "6476:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:10"
																		},
																		"nativeSrc": "6476:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6126:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6131:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6123:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:10"
																},
																"nativeSrc": "6123:11:10",
																"nodeType": "YulFunctionCall",
																"src": "6123:11:10"
															},
															"nativeSrc": "6120:446:10",
															"nodeType": "YulIf",
															"src": "6120:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6030:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6085:5:10",
														"nodeType": "YulTypedName",
														"src": "6085:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6092:3:10",
														"nodeType": "YulTypedName",
														"src": "6092:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6097:10:10",
														"nodeType": "YulTypedName",
														"src": "6097:10:10",
														"type": ""
													}
												],
												"src": "6030:543:10"
											},
											{
												"body": {
													"nativeSrc": "6642:54:10",
													"nodeType": "YulBlock",
													"src": "6642:54:10",
													"statements": [
														{
															"nativeSrc": "6652:37:10",
															"nodeType": "YulAssignment",
															"src": "6652:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6677:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6683:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6673:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:10"
																},
																"nativeSrc": "6673:16:10",
																"nodeType": "YulFunctionCall",
																"src": "6673:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6652:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6579:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6617:4:10",
														"nodeType": "YulTypedName",
														"src": "6617:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6623:5:10",
														"nodeType": "YulTypedName",
														"src": "6623:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6633:8:10",
														"nodeType": "YulTypedName",
														"src": "6633:8:10",
														"type": ""
													}
												],
												"src": "6579:117:10"
											},
											{
												"body": {
													"nativeSrc": "6753:118:10",
													"nodeType": "YulBlock",
													"src": "6753:118:10",
													"statements": [
														{
															"nativeSrc": "6763:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6812:1:10",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6815:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6808:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:10"
																				},
																				"nativeSrc": "6808:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6827:1:10",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6823:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:10"
																				},
																				"nativeSrc": "6823:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6779:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:10"
																		},
																		"nativeSrc": "6779:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6775:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:10"
																},
																"nativeSrc": "6775:56:10",
																"nodeType": "YulFunctionCall",
																"src": "6775:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6767:4:10",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6840:25:10",
															"nodeType": "YulAssignment",
															"src": "6840:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6854:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6860:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6850:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:10"
																},
																"nativeSrc": "6850:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6850:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6840:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6702:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6730:4:10",
														"nodeType": "YulTypedName",
														"src": "6730:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6736:5:10",
														"nodeType": "YulTypedName",
														"src": "6736:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6746:6:10",
														"nodeType": "YulTypedName",
														"src": "6746:6:10",
														"type": ""
													}
												],
												"src": "6702:169:10"
											},
											{
												"body": {
													"nativeSrc": "6957:214:10",
													"nodeType": "YulBlock",
													"src": "6957:214:10",
													"statements": [
														{
															"nativeSrc": "7090:37:10",
															"nodeType": "YulAssignment",
															"src": "7090:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7117:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7123:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7098:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:10"
																},
																"nativeSrc": "7098:29:10",
																"nodeType": "YulFunctionCall",
																"src": "7098:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7090:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:10"
																}
															]
														},
														{
															"nativeSrc": "7136:29:10",
															"nodeType": "YulAssignment",
															"src": "7136:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7147:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7157:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7160:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7153:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:10"
																		},
																		"nativeSrc": "7153:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7144:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:10"
																},
																"nativeSrc": "7144:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7144:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7136:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6876:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6938:4:10",
														"nodeType": "YulTypedName",
														"src": "6938:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6944:3:10",
														"nodeType": "YulTypedName",
														"src": "6944:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6952:4:10",
														"nodeType": "YulTypedName",
														"src": "6952:4:10",
														"type": ""
													}
												],
												"src": "6876:295:10"
											},
											{
												"body": {
													"nativeSrc": "7268:1303:10",
													"nodeType": "YulBlock",
													"src": "7268:1303:10",
													"statements": [
														{
															"nativeSrc": "7279:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7326:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7293:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:10"
																},
																"nativeSrc": "7293:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7293:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7283:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7415:22:10",
																"nodeType": "YulBlock",
																"src": "7415:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7417:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:10"
																			},
																			"nativeSrc": "7417:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:10"
																		},
																		"nativeSrc": "7417:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7387:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7395:18:10",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7384:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:10"
																},
																"nativeSrc": "7384:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7384:30:10"
															},
															"nativeSrc": "7381:56:10",
															"nodeType": "YulIf",
															"src": "7381:56:10"
														},
														{
															"nativeSrc": "7447:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7493:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7487:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:10"
																		},
																		"nativeSrc": "7487:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7461:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:10"
																},
																"nativeSrc": "7461:38:10",
																"nodeType": "YulFunctionCall",
																"src": "7461:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7451:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7592:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7598:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7606:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7546:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:10"
																},
																"nativeSrc": "7546:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7546:67:10"
															},
															"nativeSrc": "7546:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:10"
														},
														{
															"nativeSrc": "7623:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "7640:1:10",
																"nodeType": "YulLiteral",
																"src": "7640:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7627:9:10",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7651:17:10",
															"nodeType": "YulAssignment",
															"src": "7651:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "7664:4:10",
																"nodeType": "YulLiteral",
																"src": "7664:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7651:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7715:611:10",
																		"nodeType": "YulBlock",
																		"src": "7715:611:10",
																		"statements": [
																			{
																				"nativeSrc": "7729:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7748:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7760:4:10",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7756:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:10"
																							},
																							"nativeSrc": "7756:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7744:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:10"
																					},
																					"nativeSrc": "7744:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7733:7:10",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7780:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7826:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7794:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:10"
																					},
																					"nativeSrc": "7794:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7784:6:10",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7844:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7853:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7848:1:10",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7912:163:10",
																					"nodeType": "YulBlock",
																					"src": "7912:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7937:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7955:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7960:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7951:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:10"
																												},
																												"nativeSrc": "7951:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7945:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:10"
																										},
																										"nativeSrc": "7945:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7930:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:10"
																								},
																								"nativeSrc": "7930:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:10"
																							},
																							"nativeSrc": "7930:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:10"
																						},
																						{
																							"nativeSrc": "7989:24:10",
																							"nodeType": "YulAssignment",
																							"src": "7989:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8003:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8011:1:10",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7999:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:10"
																								},
																								"nativeSrc": "7999:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7989:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8030:31:10",
																							"nodeType": "YulAssignment",
																							"src": "8030:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8047:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8058:2:10",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8043:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:10"
																								},
																								"nativeSrc": "8043:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8030:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7878:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7881:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7875:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:10"
																					},
																					"nativeSrc": "7875:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:10"
																				},
																				"nativeSrc": "7867:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7890:21:10",
																					"nodeType": "YulBlock",
																					"src": "7890:21:10",
																					"statements": [
																						{
																							"nativeSrc": "7892:17:10",
																							"nodeType": "YulAssignment",
																							"src": "7892:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7901:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:4:10",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7897:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:10"
																								},
																								"nativeSrc": "7897:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7892:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7871:3:10",
																					"nodeType": "YulBlock",
																					"src": "7871:3:10",
																					"statements": []
																				},
																				"src": "7867:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "8111:156:10",
																					"nodeType": "YulBlock",
																					"src": "8111:156:10",
																					"statements": [
																						{
																							"nativeSrc": "8129:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8156:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8161:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8152:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:10"
																										},
																										"nativeSrc": "8152:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8146:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:10"
																								},
																								"nativeSrc": "8146:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8133:9:10",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8196:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8223:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8238:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8246:4:10",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8234:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:10"
																												},
																												"nativeSrc": "8234:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8204:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:10"
																										},
																										"nativeSrc": "8204:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8189:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:10"
																								},
																								"nativeSrc": "8189:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:10"
																							},
																							"nativeSrc": "8189:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8094:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8103:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8091:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:10"
																					},
																					"nativeSrc": "8091:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:10"
																				},
																				"nativeSrc": "8088:179:10",
																				"nodeType": "YulIf",
																				"src": "8088:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8287:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8301:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8309:1:10",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8297:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:10"
																									},
																									"nativeSrc": "8297:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8313:1:10",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8293:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:10"
																							},
																							"nativeSrc": "8293:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8280:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:10"
																					},
																					"nativeSrc": "8280:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:10"
																				},
																				"nativeSrc": "8280:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:10"
																			}
																		]
																	},
																	"nativeSrc": "7708:618:10",
																	"nodeType": "YulCase",
																	"src": "7708:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7713:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8343:222:10",
																		"nodeType": "YulBlock",
																		"src": "8343:222:10",
																		"statements": [
																			{
																				"nativeSrc": "8357:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8370:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8361:5:10",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8394:67:10",
																					"nodeType": "YulBlock",
																					"src": "8394:67:10",
																					"statements": [
																						{
																							"nativeSrc": "8412:35:10",
																							"nodeType": "YulAssignment",
																							"src": "8412:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8431:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8436:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8427:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:10"
																										},
																										"nativeSrc": "8427:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8421:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:10"
																								},
																								"nativeSrc": "8421:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8412:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8387:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:10"
																				},
																				"nativeSrc": "8384:77:10",
																				"nodeType": "YulIf",
																				"src": "8384:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8481:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8540:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8547:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8487:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:10"
																							},
																							"nativeSrc": "8487:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8474:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:10"
																					},
																					"nativeSrc": "8474:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:10"
																				},
																				"nativeSrc": "8474:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:10"
																			}
																		]
																	},
																	"nativeSrc": "8335:230:10",
																	"nodeType": "YulCase",
																	"src": "8335:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7688:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7696:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7685:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:10"
																},
																"nativeSrc": "7685:14:10",
																"nodeType": "YulFunctionCall",
																"src": "7685:14:10"
															},
															"nativeSrc": "7678:887:10",
															"nodeType": "YulSwitch",
															"src": "7678:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7176:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7257:4:10",
														"nodeType": "YulTypedName",
														"src": "7257:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7263:3:10",
														"nodeType": "YulTypedName",
														"src": "7263:3:10",
														"type": ""
													}
												],
												"src": "7176:1395:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002640380380620026408339818101604052810190620000369190620001e6565b815f9081620000469190620004a0565b508060019081620000589190620004a0565b50505062000584565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000c2826200007a565b810181811067ffffffffffffffff82111715620000e457620000e36200008a565b5b80604052505050565b5f620000f862000061565b9050620001068282620000b7565b919050565b5f67ffffffffffffffff8211156200012857620001276200008a565b5b62000133826200007a565b9050602081019050919050565b5f5b838110156200015f57808201518184015260208101905062000142565b5f8484015250505050565b5f620001806200017a846200010b565b620000ed565b9050828152602081018484840111156200019f576200019e62000076565b5b620001ac84828562000140565b509392505050565b5f82601f830112620001cb57620001ca62000072565b5b8151620001dd8482602086016200016a565b91505092915050565b5f8060408385031215620001ff57620001fe6200006a565b5b5f83015167ffffffffffffffff8111156200021f576200021e6200006e565b5b6200022d85828601620001b4565b925050602083015167ffffffffffffffff8111156200025157620002506200006e565b5b6200025f85828601620001b4565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002b857607f821691505b602082108103620002ce57620002cd62000273565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002f5565b6200033e8683620002f5565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000388620003826200037c8462000356565b6200035f565b62000356565b9050919050565b5f819050919050565b620003a38362000368565b620003bb620003b2826200038f565b84845462000301565b825550505050565b5f90565b620003d1620003c3565b620003de81848462000398565b505050565b5b818110156200040557620003f95f82620003c7565b600181019050620003e4565b5050565b601f82111562000454576200041e81620002d4565b6200042984620002e6565b8101602085101562000439578190505b620004516200044885620002e6565b830182620003e3565b50505b505050565b5f82821c905092915050565b5f620004765f198460080262000459565b1980831691505092915050565b5f62000490838362000465565b9150826002028217905092915050565b620004ab8262000269565b67ffffffffffffffff811115620004c757620004c66200008a565b5b620004d38254620002a0565b620004e082828562000409565b5f60209050601f83116001811462000516575f841562000501578287015190505b6200050d858262000483565b8655506200057c565b601f1984166200052686620002d4565b5f5b828110156200054f5784890151825560018201915060208501945060208101905062000528565b868310156200056f57848901516200056b601f89168262000465565b8355505b6001600288020188555050505b505050505050565b6120ae80620005925f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c80636352211e1161008a578063a22cb46511610064578063a22cb46514610221578063b88d4fde1461023d578063c87b56dd14610259578063e985e9c514610289576100cd565b80636352211e146101a357806370a08231146101d357806395d89b4114610203576100cd565b806301ffc9a7146100d157806306fdde0314610101578063081812fc1461011f578063095ea7b31461014f57806323b872dd1461016b57806342842e0e14610187575b5f80fd5b6100eb60048036038101906100e69190611489565b6102b9565b6040516100f891906114ce565b60405180910390f35b61010961039a565b6040516101169190611571565b60405180910390f35b610139600480360381019061013491906115c4565b610429565b604051610146919061162e565b60405180910390f35b61016960048036038101906101649190611671565b61046b565b005b610185600480360381019061018091906116af565b610581565b005b6101a1600480360381019061019c91906116af565b6105e1565b005b6101bd60048036038101906101b891906115c4565b610600565b6040516101ca919061162e565b60405180910390f35b6101ed60048036038101906101e891906116ff565b610684565b6040516101fa9190611739565b60405180910390f35b61020b610738565b6040516102189190611571565b60405180910390f35b61023b6004803603810190610236919061177c565b6107c8565b005b610257600480360381019061025291906118e6565b6107de565b005b610273600480360381019061026e91906115c4565b610840565b6040516102809190611571565b60405180910390f35b6102a3600480360381019061029e9190611966565b6108a5565b6040516102b091906114ce565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610393575061039282610933565b5b9050919050565b60605f80546103a8906119d1565b80601f01602080910402602001604051908101604052809291908181526020018280546103d4906119d1565b801561041f5780601f106103f65761010080835404028352916020019161041f565b820191905f5260205f20905b81548152906001019060200180831161040257829003601f168201915b5050505050905090565b5f6104338261099c565b60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f61047582610600565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90611a71565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105046109e7565b73ffffffffffffffffffffffffffffffffffffffff16148061053357506105328161052d6109e7565b6108a5565b5b610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056990611aff565b60405180910390fd5b61057c83836109ee565b505050565b61059261058c6109e7565b82610aa4565b6105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c890611b8d565b60405180910390fd5b6105dc838383610b38565b505050565b6105fb83838360405180602001604052805f8152506107de565b505050565b5f8061060b83610e2d565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290611bf5565b60405180910390fd5b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea90611c83565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060018054610747906119d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610773906119d1565b80156107be5780601f10610795576101008083540402835291602001916107be565b820191905f5260205f20905b8154815290600101906020018083116107a157829003601f168201915b5050505050905090565b6107da6107d36109e7565b8383610e66565b5050565b6107ef6107e96109e7565b83610aa4565b61082e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082590611b8d565b60405180910390fd5b61083a84848484610fcd565b50505050565b606061084b8261099c565b5f610854611029565b90505f8151116108725760405180602001604052805f81525061089d565b8061087c8461103f565b60405160200161088d929190611cdb565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109a581611109565b6109e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109db90611bf5565b60405180910390fd5b50565b5f33905090565b8160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a5e83610600565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f80610aaf83610600565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610af15750610af081856108a5565b5b80610b2f57508373ffffffffffffffffffffffffffffffffffffffff16610b1784610429565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b5882610600565b73ffffffffffffffffffffffffffffffffffffffff1614610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba590611d6e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1390611dfc565b60405180910390fd5b610c298383836001611149565b8273ffffffffffffffffffffffffffffffffffffffff16610c4982610600565b73ffffffffffffffffffffffffffffffffffffffff1614610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9690611d6e565b60405180910390fd5b60045f8281526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d1f9190611e47565b92505081905550600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508160025f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e28838383600161114f565b505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ed4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecb90611ec4565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fc091906114ce565b60405180910390a3505050565b610fd8848484610b38565b610fe484848484611155565b611023576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101a90611f52565b60405180910390fd5b50505050565b606060405180602001604052805f815250905090565b60605f600161104d846112d2565b0190505f8167ffffffffffffffff81111561106b5761106a6117c2565b5b6040519080825280601f01601f19166020018201604052801561109d5781602001600182028036833780820191505090505b5090505f82602001820190505b6001156110fe578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816110f3576110f2611f70565b5b0494505f85036110aa575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff1661112a83610e2d565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b5f808473ffffffffffffffffffffffffffffffffffffffff163b11156112c5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111996109e7565b8786866040518563ffffffff1660e01b81526004016111bb9493929190611fef565b6020604051808303815f875af19250505080156111f657506040513d601f19601f820116820180604052508101906111f3919061204d565b60015b611275573d805f8114611224576040519150601f19603f3d011682016040523d82523d5f602084013e611229565b606091505b505f81510361126d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126490611f52565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506112ca565b600190505b949350505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061132e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161132457611323611f70565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061136b576d04ee2d6d415b85acef8100000000838161136157611360611f70565b5b0492506020810190505b662386f26fc10000831061139a57662386f26fc1000083816113905761138f611f70565b5b0492506010810190505b6305f5e10083106113c3576305f5e10083816113b9576113b8611f70565b5b0492506008810190505b61271083106113e85761271083816113de576113dd611f70565b5b0492506004810190505b6064831061140b576064838161140157611400611f70565b5b0492506002810190505b600a831061141a576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61146881611434565b8114611472575f80fd5b50565b5f813590506114838161145f565b92915050565b5f6020828403121561149e5761149d61142c565b5b5f6114ab84828501611475565b91505092915050565b5f8115159050919050565b6114c8816114b4565b82525050565b5f6020820190506114e15f8301846114bf565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561151e578082015181840152602081019050611503565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611543826114e7565b61154d81856114f1565b935061155d818560208601611501565b61156681611529565b840191505092915050565b5f6020820190508181035f8301526115898184611539565b905092915050565b5f819050919050565b6115a381611591565b81146115ad575f80fd5b50565b5f813590506115be8161159a565b92915050565b5f602082840312156115d9576115d861142c565b5b5f6115e6848285016115b0565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611618826115ef565b9050919050565b6116288161160e565b82525050565b5f6020820190506116415f83018461161f565b92915050565b6116508161160e565b811461165a575f80fd5b50565b5f8135905061166b81611647565b92915050565b5f80604083850312156116875761168661142c565b5b5f6116948582860161165d565b92505060206116a5858286016115b0565b9150509250929050565b5f805f606084860312156116c6576116c561142c565b5b5f6116d38682870161165d565b93505060206116e48682870161165d565b92505060406116f5868287016115b0565b9150509250925092565b5f602082840312156117145761171361142c565b5b5f6117218482850161165d565b91505092915050565b61173381611591565b82525050565b5f60208201905061174c5f83018461172a565b92915050565b61175b816114b4565b8114611765575f80fd5b50565b5f8135905061177681611752565b92915050565b5f80604083850312156117925761179161142c565b5b5f61179f8582860161165d565b92505060206117b085828601611768565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6117f882611529565b810181811067ffffffffffffffff82111715611817576118166117c2565b5b80604052505050565b5f611829611423565b905061183582826117ef565b919050565b5f67ffffffffffffffff821115611854576118536117c2565b5b61185d82611529565b9050602081019050919050565b828183375f83830152505050565b5f61188a6118858461183a565b611820565b9050828152602081018484840111156118a6576118a56117be565b5b6118b184828561186a565b509392505050565b5f82601f8301126118cd576118cc6117ba565b5b81356118dd848260208601611878565b91505092915050565b5f805f80608085870312156118fe576118fd61142c565b5b5f61190b8782880161165d565b945050602061191c8782880161165d565b935050604061192d878288016115b0565b925050606085013567ffffffffffffffff81111561194e5761194d611430565b5b61195a878288016118b9565b91505092959194509250565b5f806040838503121561197c5761197b61142c565b5b5f6119898582860161165d565b925050602061199a8582860161165d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119e857607f821691505b6020821081036119fb576119fa6119a4565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f611a5b6021836114f1565b9150611a6682611a01565b604082019050919050565b5f6020820190508181035f830152611a8881611a4f565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f5f8201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b5f611ae9603d836114f1565b9150611af482611a8f565b604082019050919050565b5f6020820190508181035f830152611b1681611add565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e655f8201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b5f611b77602d836114f1565b9150611b8282611b1d565b604082019050919050565b5f6020820190508181035f830152611ba481611b6b565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e20494400000000000000005f82015250565b5f611bdf6018836114f1565b9150611bea82611bab565b602082019050919050565b5f6020820190508181035f830152611c0c81611bd3565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f7420612076615f8201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b5f611c6d6029836114f1565b9150611c7882611c13565b604082019050919050565b5f6020820190508181035f830152611c9a81611c61565b9050919050565b5f81905092915050565b5f611cb5826114e7565b611cbf8185611ca1565b9350611ccf818560208601611501565b80840191505092915050565b5f611ce68285611cab565b9150611cf28284611cab565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f7272656374205f8201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b5f611d586025836114f1565b9150611d6382611cfe565b604082019050919050565b5f6020820190508181035f830152611d8581611d4c565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611de66024836114f1565b9150611df182611d8c565b604082019050919050565b5f6020820190508181035f830152611e1381611dda565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e5182611591565b9150611e5c83611591565b9250828203905081811115611e7457611e73611e1a565b5b92915050565b7f4552433732313a20617070726f766520746f2063616c6c6572000000000000005f82015250565b5f611eae6019836114f1565b9150611eb982611e7a565b602082019050919050565b5f6020820190508181035f830152611edb81611ea2565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e2045524337323152655f8201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b5f611f3c6032836114f1565b9150611f4782611ee2565b604082019050919050565b5f6020820190508181035f830152611f6981611f30565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f611fc182611f9d565b611fcb8185611fa7565b9350611fdb818560208601611501565b611fe481611529565b840191505092915050565b5f6080820190506120025f83018761161f565b61200f602083018661161f565b61201c604083018561172a565b818103606083015261202e8184611fb7565b905095945050505050565b5f815190506120478161145f565b92915050565b5f602082840312156120625761206161142c565b5b5f61206f84828501612039565b9150509291505056fea2646970667358221220328745b2c844051082123d7c653f594acc687abe83cdb3e7bc56f50ea3e4cf6264736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2640 CODESIZE SUB DUP1 PUSH3 0x2640 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1E6 JUMP JUMPDEST DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x46 SWAP2 SWAP1 PUSH3 0x4A0 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x58 SWAP2 SWAP1 PUSH3 0x4A0 JUMP JUMPDEST POP POP POP PUSH3 0x584 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0xC2 DUP3 PUSH3 0x7A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE4 JUMPI PUSH3 0xE3 PUSH3 0x8A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xF8 PUSH3 0x61 JUMP JUMPDEST SWAP1 POP PUSH3 0x106 DUP3 DUP3 PUSH3 0xB7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x128 JUMPI PUSH3 0x127 PUSH3 0x8A JUMP JUMPDEST JUMPDEST PUSH3 0x133 DUP3 PUSH3 0x7A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x15F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x142 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x180 PUSH3 0x17A DUP5 PUSH3 0x10B JUMP JUMPDEST PUSH3 0xED JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x19F JUMPI PUSH3 0x19E PUSH3 0x76 JUMP JUMPDEST JUMPDEST PUSH3 0x1AC DUP5 DUP3 DUP6 PUSH3 0x140 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1CB JUMPI PUSH3 0x1CA PUSH3 0x72 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1DD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1FF JUMPI PUSH3 0x1FE PUSH3 0x6A JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x21F JUMPI PUSH3 0x21E PUSH3 0x6E JUMP JUMPDEST JUMPDEST PUSH3 0x22D DUP6 DUP3 DUP7 ADD PUSH3 0x1B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x6E JUMP JUMPDEST JUMPDEST PUSH3 0x25F DUP6 DUP3 DUP7 ADD PUSH3 0x1B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2CE JUMPI PUSH3 0x2CD PUSH3 0x273 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x332 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2F5 JUMP JUMPDEST PUSH3 0x33E DUP7 DUP4 PUSH3 0x2F5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x388 PUSH3 0x382 PUSH3 0x37C DUP5 PUSH3 0x356 JUMP JUMPDEST PUSH3 0x35F JUMP JUMPDEST PUSH3 0x356 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3A3 DUP4 PUSH3 0x368 JUMP JUMPDEST PUSH3 0x3BB PUSH3 0x3B2 DUP3 PUSH3 0x38F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x301 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x3D1 PUSH3 0x3C3 JUMP JUMPDEST PUSH3 0x3DE DUP2 DUP5 DUP5 PUSH3 0x398 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x405 JUMPI PUSH3 0x3F9 PUSH0 DUP3 PUSH3 0x3C7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x454 JUMPI PUSH3 0x41E DUP2 PUSH3 0x2D4 JUMP JUMPDEST PUSH3 0x429 DUP5 PUSH3 0x2E6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x439 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x451 PUSH3 0x448 DUP6 PUSH3 0x2E6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3E3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x476 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x459 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x490 DUP4 DUP4 PUSH3 0x465 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4AB DUP3 PUSH3 0x269 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4C7 JUMPI PUSH3 0x4C6 PUSH3 0x8A JUMP JUMPDEST JUMPDEST PUSH3 0x4D3 DUP3 SLOAD PUSH3 0x2A0 JUMP JUMPDEST PUSH3 0x4E0 DUP3 DUP3 DUP6 PUSH3 0x409 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x516 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x501 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x50D DUP6 DUP3 PUSH3 0x483 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x57C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x526 DUP7 PUSH3 0x2D4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x54F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x528 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x56F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x56B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x465 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20AE DUP1 PUSH3 0x592 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x289 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x383 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0x933 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x402 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x475 DUP3 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP1 PUSH2 0x1A71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x504 PUSH2 0x9E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x533 JUMPI POP PUSH2 0x532 DUP2 PUSH2 0x52D PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST JUMPDEST PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57C DUP4 DUP4 PUSH2 0x9EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x592 PUSH2 0x58C PUSH2 0x9E7 JUMP JUMPDEST DUP3 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DC DUP4 DUP4 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x60B DUP4 PUSH2 0xE2D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EA SWAP1 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x747 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x773 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x795 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7DA PUSH2 0x7D3 PUSH2 0x9E7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE66 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x7E9 PUSH2 0x9E7 JUMP JUMPDEST DUP4 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x825 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83A DUP5 DUP5 DUP5 DUP5 PUSH2 0xFCD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x84B DUP3 PUSH2 0x99C JUMP JUMPDEST PUSH0 PUSH2 0x854 PUSH2 0x1029 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x89D JUMP JUMPDEST DUP1 PUSH2 0x87C DUP5 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x88D SWAP3 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A5 DUP2 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DB SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA5E DUP4 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAAF DUP4 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xAF1 JUMPI POP PUSH2 0xAF0 DUP2 DUP6 PUSH2 0x8A5 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB2F JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB17 DUP5 PUSH2 0x429 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB58 DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC13 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC29 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1149 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC49 DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC96 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE28 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x114F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECB SWAP1 PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFC0 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFD8 DUP5 DUP5 DUP5 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0xFE4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x1023 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101A SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x104D DUP5 PUSH2 0x12D2 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x106B JUMPI PUSH2 0x106A PUSH2 0x17C2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x109D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x10FE JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x10F3 JUMPI PUSH2 0x10F2 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x10AA JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x112A DUP4 PUSH2 0xE2D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12C5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1199 PUSH2 0x9E7 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11F6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F3 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1275 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1224 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x126D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x132E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1324 JUMPI PUSH2 0x1323 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x136B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1361 JUMPI PUSH2 0x1360 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x139A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1390 JUMPI PUSH2 0x138F PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x13C3 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13B9 JUMPI PUSH2 0x13B8 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x13E8 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x13DE JUMPI PUSH2 0x13DD PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x140B JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1401 JUMPI PUSH2 0x1400 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x141A JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1468 DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP2 EQ PUSH2 0x1472 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1483 DUP2 PUSH2 0x145F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149E JUMPI PUSH2 0x149D PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14AB DUP5 DUP3 DUP6 ADD PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C8 DUP2 PUSH2 0x14B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x151E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1503 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1543 DUP3 PUSH2 0x14E7 JUMP JUMPDEST PUSH2 0x154D DUP2 DUP6 PUSH2 0x14F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x155D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x1566 DUP2 PUSH2 0x1529 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1589 DUP2 DUP5 PUSH2 0x1539 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A3 DUP2 PUSH2 0x1591 JUMP JUMPDEST DUP2 EQ PUSH2 0x15AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BE DUP2 PUSH2 0x159A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E6 DUP5 DUP3 DUP6 ADD PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1618 DUP3 PUSH2 0x15EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1628 DUP2 PUSH2 0x160E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1641 PUSH0 DUP4 ADD DUP5 PUSH2 0x161F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1650 DUP2 PUSH2 0x160E JUMP JUMPDEST DUP2 EQ PUSH2 0x165A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x166B DUP2 PUSH2 0x1647 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1687 JUMPI PUSH2 0x1686 PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1694 DUP6 DUP3 DUP7 ADD PUSH2 0x165D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16A5 DUP6 DUP3 DUP7 ADD PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16C6 JUMPI PUSH2 0x16C5 PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D3 DUP7 DUP3 DUP8 ADD PUSH2 0x165D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16E4 DUP7 DUP3 DUP8 ADD PUSH2 0x165D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16F5 DUP7 DUP3 DUP8 ADD PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1714 JUMPI PUSH2 0x1713 PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1721 DUP5 DUP3 DUP6 ADD PUSH2 0x165D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1733 DUP2 PUSH2 0x1591 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x174C PUSH0 DUP4 ADD DUP5 PUSH2 0x172A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x175B DUP2 PUSH2 0x14B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1765 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1776 DUP2 PUSH2 0x1752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1792 JUMPI PUSH2 0x1791 PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x179F DUP6 DUP3 DUP7 ADD PUSH2 0x165D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17B0 DUP6 DUP3 DUP7 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17F8 DUP3 PUSH2 0x1529 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1817 JUMPI PUSH2 0x1816 PUSH2 0x17C2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1829 PUSH2 0x1423 JUMP JUMPDEST SWAP1 POP PUSH2 0x1835 DUP3 DUP3 PUSH2 0x17EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1853 PUSH2 0x17C2 JUMP JUMPDEST JUMPDEST PUSH2 0x185D DUP3 PUSH2 0x1529 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188A PUSH2 0x1885 DUP5 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1820 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x17BE JUMP JUMPDEST JUMPDEST PUSH2 0x18B1 DUP5 DUP3 DUP6 PUSH2 0x186A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18CD JUMPI PUSH2 0x18CC PUSH2 0x17BA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18DD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1878 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18FE JUMPI PUSH2 0x18FD PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x190B DUP8 DUP3 DUP9 ADD PUSH2 0x165D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x191C DUP8 DUP3 DUP9 ADD PUSH2 0x165D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x192D DUP8 DUP3 DUP9 ADD PUSH2 0x15B0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x194E JUMPI PUSH2 0x194D PUSH2 0x1430 JUMP JUMPDEST JUMPDEST PUSH2 0x195A DUP8 DUP3 DUP9 ADD PUSH2 0x18B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x197C JUMPI PUSH2 0x197B PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1989 DUP6 DUP3 DUP7 ADD PUSH2 0x165D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x199A DUP6 DUP3 DUP7 ADD PUSH2 0x165D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19E8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19FB JUMPI PUSH2 0x19FA PUSH2 0x19A4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A5B PUSH1 0x21 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A66 DUP3 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A88 DUP2 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE9 PUSH1 0x3D DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF4 DUP3 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B16 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B77 PUSH1 0x2D DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B82 DUP3 PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BA4 DUP2 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDF PUSH1 0x18 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEA DUP3 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C0C DUP2 PUSH2 0x1BD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6D PUSH1 0x29 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C78 DUP3 PUSH2 0x1C13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9A DUP2 PUSH2 0x1C61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB5 DUP3 PUSH2 0x14E7 JUMP JUMPDEST PUSH2 0x1CBF DUP2 DUP6 PUSH2 0x1CA1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1501 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE6 DUP3 DUP6 PUSH2 0x1CAB JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF2 DUP3 DUP5 PUSH2 0x1CAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D58 PUSH1 0x25 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D63 DUP3 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D85 DUP2 PUSH2 0x1D4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE6 PUSH1 0x24 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF1 DUP3 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E13 DUP2 PUSH2 0x1DDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E51 DUP3 PUSH2 0x1591 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5C DUP4 PUSH2 0x1591 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1E74 JUMPI PUSH2 0x1E73 PUSH2 0x1E1A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAE PUSH1 0x19 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB9 DUP3 PUSH2 0x1E7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EDB DUP2 PUSH2 0x1EA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3C PUSH1 0x32 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F47 DUP3 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F69 DUP2 PUSH2 0x1F30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC1 DUP3 PUSH2 0x1F9D JUMP JUMPDEST PUSH2 0x1FCB DUP2 DUP6 PUSH2 0x1FA7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FDB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x1FE4 DUP2 PUSH2 0x1529 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2002 PUSH0 DUP4 ADD DUP8 PUSH2 0x161F JUMP JUMPDEST PUSH2 0x200F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x161F JUMP JUMPDEST PUSH2 0x201C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x172A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x202E DUP2 DUP5 PUSH2 0x1FB7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2047 DUP2 PUSH2 0x145F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2062 JUMPI PUSH2 0x2061 PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x206F DUP5 DUP3 DUP6 ADD PUSH2 0x2039 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN DUP8 GASLIMIT 0xB2 0xC8 PREVRANDAO SDIV LT DUP3 SLT RETURNDATASIZE PUSH29 0x653F594ACC687ABE83CDB3E7BC56F50EA3E4CF6264736F6C6343000817 STOP CALLER ",
							"sourceMap": "595:16061:0:-:0;;;1326:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1400:5;1392;:13;;;;;;:::i;:::-;;1425:7;1415;:17;;;;;;:::i;:::-;;1326:113;;595:16061;;7:75:10;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;595:16061:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_888": {
									"entryPoint": 4431,
									"id": 888,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_752": {
									"entryPoint": 2542,
									"id": 752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_204": {
									"entryPoint": 4137,
									"id": 204,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_875": {
									"entryPoint": 4425,
									"id": 875,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_862": {
									"entryPoint": 4437,
									"id": 862,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_428": {
									"entryPoint": 4361,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_461": {
									"entryPoint": 2724,
									"id": 461,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1077": {
									"entryPoint": 2535,
									"id": 1077,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_410": {
									"entryPoint": 3629,
									"id": 410,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_798": {
									"entryPoint": 2460,
									"id": 798,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_397": {
									"entryPoint": 4045,
									"id": 397,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_784": {
									"entryPoint": 3686,
									"id": 784,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_729": {
									"entryPoint": 2872,
									"id": 729,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_245": {
									"entryPoint": 1131,
									"id": 245,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_112": {
									"entryPoint": 1668,
									"id": 112,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_262": {
									"entryPoint": 1065,
									"id": 262,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_295": {
									"entryPoint": 2213,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2224": {
									"entryPoint": 4818,
									"id": 2224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_148": {
									"entryPoint": 922,
									"id": 148,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_139": {
									"entryPoint": 1536,
									"id": 139,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_339": {
									"entryPoint": 1505,
									"id": 339,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_368": {
									"entryPoint": 2014,
									"id": 368,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_278": {
									"entryPoint": 1992,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1350": {
									"entryPoint": 2355,
									"id": 1350,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_89": {
									"entryPoint": 697,
									"id": 89,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_157": {
									"entryPoint": 1848,
									"id": 157,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1146": {
									"entryPoint": 4159,
									"id": 1146,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_195": {
									"entryPoint": 2112,
									"id": 195,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_321": {
									"entryPoint": 1409,
									"id": 321,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7387,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8175,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6250,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5377,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7706,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6564,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6082,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5168,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
									"entryPoint": 7906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48": {
									"entryPoint": 7422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4": {
									"entryPoint": 7564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
									"entryPoint": 7802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159": {
									"entryPoint": 7187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f": {
									"entryPoint": 7083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23536:10",
										"nodeType": "YulBlock",
										"src": "0:23536:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "378:105:10",
													"nodeType": "YulBlock",
													"src": "378:105:10",
													"statements": [
														{
															"nativeSrc": "388:89:10",
															"nodeType": "YulAssignment",
															"src": "388:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:10",
																		"nodeType": "YulLiteral",
																		"src": "410:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:10"
																},
																"nativeSrc": "399:78:10",
																"nodeType": "YulFunctionCall",
																"src": "399:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:10",
														"nodeType": "YulTypedName",
														"src": "360:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:10",
														"nodeType": "YulTypedName",
														"src": "370:7:10",
														"type": ""
													}
												],
												"src": "334:149:10"
											},
											{
												"body": {
													"nativeSrc": "531:78:10",
													"nodeType": "YulBlock",
													"src": "531:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:10",
																"nodeType": "YulBlock",
																"src": "587:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:10",
																					"nodeType": "YulLiteral",
																					"src": "596:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:10",
																					"nodeType": "YulLiteral",
																					"src": "599:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:10"
																			},
																			"nativeSrc": "589:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:10"
																		},
																		"nativeSrc": "589:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:10"
																				},
																				"nativeSrc": "561:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:10"
																		},
																		"nativeSrc": "551:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:10"
																},
																"nativeSrc": "544:42:10",
																"nodeType": "YulFunctionCall",
																"src": "544:42:10"
															},
															"nativeSrc": "541:62:10",
															"nodeType": "YulIf",
															"src": "541:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:10",
														"nodeType": "YulTypedName",
														"src": "524:5:10",
														"type": ""
													}
												],
												"src": "489:120:10"
											},
											{
												"body": {
													"nativeSrc": "666:86:10",
													"nodeType": "YulBlock",
													"src": "666:86:10",
													"statements": [
														{
															"nativeSrc": "676:29:10",
															"nodeType": "YulAssignment",
															"src": "676:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:10"
																},
																"nativeSrc": "685:20:10",
																"nodeType": "YulFunctionCall",
																"src": "685:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:10"
																},
																"nativeSrc": "714:32:10",
																"nodeType": "YulFunctionCall",
																"src": "714:32:10"
															},
															"nativeSrc": "714:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:10",
														"nodeType": "YulTypedName",
														"src": "644:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:10",
														"nodeType": "YulTypedName",
														"src": "652:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:10",
														"nodeType": "YulTypedName",
														"src": "660:5:10",
														"type": ""
													}
												],
												"src": "615:137:10"
											},
											{
												"body": {
													"nativeSrc": "823:262:10",
													"nodeType": "YulBlock",
													"src": "823:262:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:10",
																"nodeType": "YulBlock",
																"src": "869:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:10"
																			},
																			"nativeSrc": "871:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:10"
																		},
																		"nativeSrc": "871:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:10"
																		},
																		"nativeSrc": "840:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:10",
																		"nodeType": "YulLiteral",
																		"src": "865:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:10"
																},
																"nativeSrc": "836:32:10",
																"nodeType": "YulFunctionCall",
																"src": "836:32:10"
															},
															"nativeSrc": "833:119:10",
															"nodeType": "YulIf",
															"src": "833:119:10"
														},
														{
															"nativeSrc": "962:116:10",
															"nodeType": "YulBlock",
															"src": "962:116:10",
															"statements": [
																{
																	"nativeSrc": "977:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:10",
																		"nodeType": "YulLiteral",
																		"src": "991:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:10",
																			"nodeType": "YulTypedName",
																			"src": "981:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:10",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:10"
																				},
																				"nativeSrc": "1036:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:10",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:10"
																		},
																		"nativeSrc": "1016:52:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:10",
														"nodeType": "YulTypedName",
														"src": "793:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:10",
														"nodeType": "YulTypedName",
														"src": "804:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:10",
														"nodeType": "YulTypedName",
														"src": "816:6:10",
														"type": ""
													}
												],
												"src": "758:327:10"
											},
											{
												"body": {
													"nativeSrc": "1133:48:10",
													"nodeType": "YulBlock",
													"src": "1133:48:10",
													"statements": [
														{
															"nativeSrc": "1143:32:10",
															"nodeType": "YulAssignment",
															"src": "1143:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:10"
																		},
																		"nativeSrc": "1161:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:10"
																},
																"nativeSrc": "1154:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:10",
														"nodeType": "YulTypedName",
														"src": "1115:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:10",
														"nodeType": "YulTypedName",
														"src": "1125:7:10",
														"type": ""
													}
												],
												"src": "1091:90:10"
											},
											{
												"body": {
													"nativeSrc": "1246:50:10",
													"nodeType": "YulBlock",
													"src": "1246:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:10"
																		},
																		"nativeSrc": "1268:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:10"
																},
																"nativeSrc": "1256:34:10",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:10"
															},
															"nativeSrc": "1256:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:10",
														"nodeType": "YulTypedName",
														"src": "1234:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:10",
														"nodeType": "YulTypedName",
														"src": "1241:3:10",
														"type": ""
													}
												],
												"src": "1187:109:10"
											},
											{
												"body": {
													"nativeSrc": "1394:118:10",
													"nodeType": "YulBlock",
													"src": "1394:118:10",
													"statements": [
														{
															"nativeSrc": "1404:26:10",
															"nodeType": "YulAssignment",
															"src": "1404:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:10"
																},
																"nativeSrc": "1412:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:10"
																		},
																		"nativeSrc": "1487:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:10"
																},
																"nativeSrc": "1440:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:10"
															},
															"nativeSrc": "1440:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:10",
														"nodeType": "YulTypedName",
														"src": "1366:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:10",
														"nodeType": "YulTypedName",
														"src": "1378:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:10",
														"nodeType": "YulTypedName",
														"src": "1389:4:10",
														"type": ""
													}
												],
												"src": "1302:210:10"
											},
											{
												"body": {
													"nativeSrc": "1577:40:10",
													"nodeType": "YulBlock",
													"src": "1577:40:10",
													"statements": [
														{
															"nativeSrc": "1588:22:10",
															"nodeType": "YulAssignment",
															"src": "1588:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:10"
																},
																"nativeSrc": "1598:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:10",
														"nodeType": "YulTypedName",
														"src": "1560:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:10",
														"nodeType": "YulTypedName",
														"src": "1570:6:10",
														"type": ""
													}
												],
												"src": "1518:99:10"
											},
											{
												"body": {
													"nativeSrc": "1719:73:10",
													"nodeType": "YulBlock",
													"src": "1719:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:10"
																},
																"nativeSrc": "1729:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:10"
															},
															"nativeSrc": "1729:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:10"
														},
														{
															"nativeSrc": "1757:29:10",
															"nodeType": "YulAssignment",
															"src": "1757:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:10"
																},
																"nativeSrc": "1772:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:10",
														"nodeType": "YulTypedName",
														"src": "1691:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:10",
														"nodeType": "YulTypedName",
														"src": "1696:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:10",
														"nodeType": "YulTypedName",
														"src": "1707:11:10",
														"type": ""
													}
												],
												"src": "1623:169:10"
											},
											{
												"body": {
													"nativeSrc": "1860:184:10",
													"nodeType": "YulBlock",
													"src": "1860:184:10",
													"statements": [
														{
															"nativeSrc": "1870:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:10",
																"nodeType": "YulLiteral",
																"src": "1879:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:10",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:10",
																"nodeType": "YulBlock",
																"src": "1939:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:10"
																					},
																					"nativeSrc": "1960:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:10"
																							},
																							"nativeSrc": "1979:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:10"
																					},
																					"nativeSrc": "1973:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:10"
																			},
																			"nativeSrc": "1953:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:10"
																		},
																		"nativeSrc": "1953:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:10"
																},
																"nativeSrc": "1897:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:10"
															},
															"nativeSrc": "1889:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:10",
																"nodeType": "YulBlock",
																"src": "1911:19:10",
																"statements": [
																	{
																		"nativeSrc": "1913:15:10",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:10",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:10"
																			},
																			"nativeSrc": "1918:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:10",
																"nodeType": "YulBlock",
																"src": "1893:3:10",
																"statements": []
															},
															"src": "1889:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:10"
																		},
																		"nativeSrc": "2018:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:10"
																},
																"nativeSrc": "2011:27:10",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:10"
															},
															"nativeSrc": "2011:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:10",
														"nodeType": "YulTypedName",
														"src": "1842:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:10",
														"nodeType": "YulTypedName",
														"src": "1847:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:10",
														"nodeType": "YulTypedName",
														"src": "1852:6:10",
														"type": ""
													}
												],
												"src": "1798:246:10"
											},
											{
												"body": {
													"nativeSrc": "2098:54:10",
													"nodeType": "YulBlock",
													"src": "2098:54:10",
													"statements": [
														{
															"nativeSrc": "2108:38:10",
															"nodeType": "YulAssignment",
															"src": "2108:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:10"
																		},
																		"nativeSrc": "2122:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:10"
																		},
																		"nativeSrc": "2138:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:10"
																},
																"nativeSrc": "2118:28:10",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:10",
														"nodeType": "YulTypedName",
														"src": "2081:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:10",
														"nodeType": "YulTypedName",
														"src": "2091:6:10",
														"type": ""
													}
												],
												"src": "2050:102:10"
											},
											{
												"body": {
													"nativeSrc": "2250:285:10",
													"nodeType": "YulBlock",
													"src": "2250:285:10",
													"statements": [
														{
															"nativeSrc": "2260:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:10"
																},
																"nativeSrc": "2274:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:10",
															"nodeType": "YulAssignment",
															"src": "2322:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:10"
																},
																"nativeSrc": "2329:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:10"
																		},
																		"nativeSrc": "2444:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:10"
																},
																"nativeSrc": "2409:65:10",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:10"
															},
															"nativeSrc": "2409:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:10"
														},
														{
															"nativeSrc": "2483:46:10",
															"nodeType": "YulAssignment",
															"src": "2483:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:10"
																		},
																		"nativeSrc": "2499:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:10"
																},
																"nativeSrc": "2490:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:10",
														"nodeType": "YulTypedName",
														"src": "2231:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:10",
														"nodeType": "YulTypedName",
														"src": "2238:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:10",
														"nodeType": "YulTypedName",
														"src": "2246:3:10",
														"type": ""
													}
												],
												"src": "2158:377:10"
											},
											{
												"body": {
													"nativeSrc": "2659:195:10",
													"nodeType": "YulBlock",
													"src": "2659:195:10",
													"statements": [
														{
															"nativeSrc": "2669:26:10",
															"nodeType": "YulAssignment",
															"src": "2669:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:10"
																},
																"nativeSrc": "2677:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:10"
																		},
																		"nativeSrc": "2712:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:10"
																		},
																		"nativeSrc": "2731:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:10"
																},
																"nativeSrc": "2705:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:10"
															},
															"nativeSrc": "2705:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:10"
														},
														{
															"nativeSrc": "2761:86:10",
															"nodeType": "YulAssignment",
															"src": "2761:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:10"
																},
																"nativeSrc": "2769:78:10",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:10",
														"nodeType": "YulTypedName",
														"src": "2631:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:10",
														"nodeType": "YulTypedName",
														"src": "2643:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:10",
														"nodeType": "YulTypedName",
														"src": "2654:4:10",
														"type": ""
													}
												],
												"src": "2541:313:10"
											},
											{
												"body": {
													"nativeSrc": "2905:32:10",
													"nodeType": "YulBlock",
													"src": "2905:32:10",
													"statements": [
														{
															"nativeSrc": "2915:16:10",
															"nodeType": "YulAssignment",
															"src": "2915:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:10",
																"nodeType": "YulIdentifier",
																"src": "2926:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:10",
														"nodeType": "YulTypedName",
														"src": "2887:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:10",
														"nodeType": "YulTypedName",
														"src": "2897:7:10",
														"type": ""
													}
												],
												"src": "2860:77:10"
											},
											{
												"body": {
													"nativeSrc": "2986:79:10",
													"nodeType": "YulBlock",
													"src": "2986:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:10",
																"nodeType": "YulBlock",
																"src": "3043:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:10"
																			},
																			"nativeSrc": "3045:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:10"
																		},
																		"nativeSrc": "3045:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:10"
																				},
																				"nativeSrc": "3016:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:10"
																		},
																		"nativeSrc": "3006:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:10"
																},
																"nativeSrc": "2999:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:10"
															},
															"nativeSrc": "2996:63:10",
															"nodeType": "YulIf",
															"src": "2996:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:10",
														"nodeType": "YulTypedName",
														"src": "2979:5:10",
														"type": ""
													}
												],
												"src": "2943:122:10"
											},
											{
												"body": {
													"nativeSrc": "3123:87:10",
													"nodeType": "YulBlock",
													"src": "3123:87:10",
													"statements": [
														{
															"nativeSrc": "3133:29:10",
															"nodeType": "YulAssignment",
															"src": "3133:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:10"
																},
																"nativeSrc": "3142:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:10"
																},
																"nativeSrc": "3171:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:10"
															},
															"nativeSrc": "3171:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:10",
														"nodeType": "YulTypedName",
														"src": "3101:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:10",
														"nodeType": "YulTypedName",
														"src": "3109:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:10",
														"nodeType": "YulTypedName",
														"src": "3117:5:10",
														"type": ""
													}
												],
												"src": "3071:139:10"
											},
											{
												"body": {
													"nativeSrc": "3282:263:10",
													"nodeType": "YulBlock",
													"src": "3282:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:10",
																"nodeType": "YulBlock",
																"src": "3328:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:10"
																			},
																			"nativeSrc": "3330:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:10"
																		},
																		"nativeSrc": "3330:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:10"
																		},
																		"nativeSrc": "3299:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:10"
																},
																"nativeSrc": "3295:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:10"
															},
															"nativeSrc": "3292:119:10",
															"nodeType": "YulIf",
															"src": "3292:119:10"
														},
														{
															"nativeSrc": "3421:117:10",
															"nodeType": "YulBlock",
															"src": "3421:117:10",
															"statements": [
																{
																	"nativeSrc": "3436:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:10"
																				},
																				"nativeSrc": "3496:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:10"
																		},
																		"nativeSrc": "3475:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:10",
														"nodeType": "YulTypedName",
														"src": "3252:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:10",
														"nodeType": "YulTypedName",
														"src": "3263:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:10",
														"nodeType": "YulTypedName",
														"src": "3275:6:10",
														"type": ""
													}
												],
												"src": "3216:329:10"
											},
											{
												"body": {
													"nativeSrc": "3596:81:10",
													"nodeType": "YulBlock",
													"src": "3596:81:10",
													"statements": [
														{
															"nativeSrc": "3606:65:10",
															"nodeType": "YulAssignment",
															"src": "3606:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:10",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:10"
																},
																"nativeSrc": "3617:54:10",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:10",
														"nodeType": "YulTypedName",
														"src": "3578:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:10",
														"nodeType": "YulTypedName",
														"src": "3588:7:10",
														"type": ""
													}
												],
												"src": "3551:126:10"
											},
											{
												"body": {
													"nativeSrc": "3728:51:10",
													"nodeType": "YulBlock",
													"src": "3728:51:10",
													"statements": [
														{
															"nativeSrc": "3738:35:10",
															"nodeType": "YulAssignment",
															"src": "3738:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:10"
																},
																"nativeSrc": "3749:24:10",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:10",
														"nodeType": "YulTypedName",
														"src": "3710:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:10",
														"nodeType": "YulTypedName",
														"src": "3720:7:10",
														"type": ""
													}
												],
												"src": "3683:96:10"
											},
											{
												"body": {
													"nativeSrc": "3850:53:10",
													"nodeType": "YulBlock",
													"src": "3850:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:10"
																		},
																		"nativeSrc": "3872:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:10"
																},
																"nativeSrc": "3860:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:10"
															},
															"nativeSrc": "3860:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:10",
														"nodeType": "YulTypedName",
														"src": "3838:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:10",
														"nodeType": "YulTypedName",
														"src": "3845:3:10",
														"type": ""
													}
												],
												"src": "3785:118:10"
											},
											{
												"body": {
													"nativeSrc": "4007:124:10",
													"nodeType": "YulBlock",
													"src": "4007:124:10",
													"statements": [
														{
															"nativeSrc": "4017:26:10",
															"nodeType": "YulAssignment",
															"src": "4017:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:10"
																},
																"nativeSrc": "4025:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:10"
																		},
																		"nativeSrc": "4106:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:10"
																},
																"nativeSrc": "4053:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:10"
															},
															"nativeSrc": "4053:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:10",
														"nodeType": "YulTypedName",
														"src": "3979:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:10",
														"nodeType": "YulTypedName",
														"src": "3991:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:10",
														"nodeType": "YulTypedName",
														"src": "4002:4:10",
														"type": ""
													}
												],
												"src": "3909:222:10"
											},
											{
												"body": {
													"nativeSrc": "4180:79:10",
													"nodeType": "YulBlock",
													"src": "4180:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:10",
																"nodeType": "YulBlock",
																"src": "4237:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:10"
																			},
																			"nativeSrc": "4239:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:10"
																		},
																		"nativeSrc": "4239:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:10"
																				},
																				"nativeSrc": "4210:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:10"
																		},
																		"nativeSrc": "4200:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:10"
																},
																"nativeSrc": "4193:43:10",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:10"
															},
															"nativeSrc": "4190:63:10",
															"nodeType": "YulIf",
															"src": "4190:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:10",
														"nodeType": "YulTypedName",
														"src": "4173:5:10",
														"type": ""
													}
												],
												"src": "4137:122:10"
											},
											{
												"body": {
													"nativeSrc": "4317:87:10",
													"nodeType": "YulBlock",
													"src": "4317:87:10",
													"statements": [
														{
															"nativeSrc": "4327:29:10",
															"nodeType": "YulAssignment",
															"src": "4327:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:10"
																},
																"nativeSrc": "4336:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:10"
																},
																"nativeSrc": "4365:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:10"
															},
															"nativeSrc": "4365:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:10",
														"nodeType": "YulTypedName",
														"src": "4295:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:10",
														"nodeType": "YulTypedName",
														"src": "4303:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:10",
														"nodeType": "YulTypedName",
														"src": "4311:5:10",
														"type": ""
													}
												],
												"src": "4265:139:10"
											},
											{
												"body": {
													"nativeSrc": "4493:391:10",
													"nodeType": "YulBlock",
													"src": "4493:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:10",
																"nodeType": "YulBlock",
																"src": "4539:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:10"
																			},
																			"nativeSrc": "4541:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:10"
																		},
																		"nativeSrc": "4541:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:10"
																		},
																		"nativeSrc": "4510:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:10"
																},
																"nativeSrc": "4506:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:10"
															},
															"nativeSrc": "4503:119:10",
															"nodeType": "YulIf",
															"src": "4503:119:10"
														},
														{
															"nativeSrc": "4632:117:10",
															"nodeType": "YulBlock",
															"src": "4632:117:10",
															"statements": [
																{
																	"nativeSrc": "4647:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:10"
																				},
																				"nativeSrc": "4707:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:10"
																		},
																		"nativeSrc": "4686:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:10",
															"nodeType": "YulBlock",
															"src": "4759:118:10",
															"statements": [
																{
																	"nativeSrc": "4774:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:10"
																				},
																				"nativeSrc": "4835:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:10"
																		},
																		"nativeSrc": "4814:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:10",
														"nodeType": "YulTypedName",
														"src": "4455:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:10",
														"nodeType": "YulTypedName",
														"src": "4466:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:10",
														"nodeType": "YulTypedName",
														"src": "4478:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:10",
														"nodeType": "YulTypedName",
														"src": "4486:6:10",
														"type": ""
													}
												],
												"src": "4410:474:10"
											},
											{
												"body": {
													"nativeSrc": "4990:519:10",
													"nodeType": "YulBlock",
													"src": "4990:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:10",
																"nodeType": "YulBlock",
																"src": "5036:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:10"
																			},
																			"nativeSrc": "5038:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:10"
																		},
																		"nativeSrc": "5038:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:10"
																		},
																		"nativeSrc": "5007:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:10"
																},
																"nativeSrc": "5003:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:10"
															},
															"nativeSrc": "5000:119:10",
															"nodeType": "YulIf",
															"src": "5000:119:10"
														},
														{
															"nativeSrc": "5129:117:10",
															"nodeType": "YulBlock",
															"src": "5129:117:10",
															"statements": [
																{
																	"nativeSrc": "5144:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:10"
																				},
																				"nativeSrc": "5204:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:10"
																		},
																		"nativeSrc": "5183:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:10",
															"nodeType": "YulBlock",
															"src": "5256:118:10",
															"statements": [
																{
																	"nativeSrc": "5271:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:10"
																				},
																				"nativeSrc": "5332:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:10"
																		},
																		"nativeSrc": "5311:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:10",
															"nodeType": "YulBlock",
															"src": "5384:118:10",
															"statements": [
																{
																	"nativeSrc": "5399:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:10"
																				},
																				"nativeSrc": "5460:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:10"
																		},
																		"nativeSrc": "5439:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:10",
														"nodeType": "YulTypedName",
														"src": "4944:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:10",
														"nodeType": "YulTypedName",
														"src": "4955:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:10",
														"nodeType": "YulTypedName",
														"src": "4967:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:10",
														"nodeType": "YulTypedName",
														"src": "4975:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:10",
														"nodeType": "YulTypedName",
														"src": "4983:6:10",
														"type": ""
													}
												],
												"src": "4890:619:10"
											},
											{
												"body": {
													"nativeSrc": "5581:263:10",
													"nodeType": "YulBlock",
													"src": "5581:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5627:83:10",
																"nodeType": "YulBlock",
																"src": "5627:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5629:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:10"
																			},
																			"nativeSrc": "5629:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:10"
																		},
																		"nativeSrc": "5629:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5602:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5598:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:10"
																		},
																		"nativeSrc": "5598:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5594:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:10"
																},
																"nativeSrc": "5594:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5594:32:10"
															},
															"nativeSrc": "5591:119:10",
															"nodeType": "YulIf",
															"src": "5591:119:10"
														},
														{
															"nativeSrc": "5720:117:10",
															"nodeType": "YulBlock",
															"src": "5720:117:10",
															"statements": [
																{
																	"nativeSrc": "5735:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5749:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5739:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:10"
																				},
																				"nativeSrc": "5795:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5774:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:10"
																		},
																		"nativeSrc": "5774:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5764:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5515:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:10",
														"nodeType": "YulTypedName",
														"src": "5551:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:10",
														"nodeType": "YulTypedName",
														"src": "5562:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:10",
														"nodeType": "YulTypedName",
														"src": "5574:6:10",
														"type": ""
													}
												],
												"src": "5515:329:10"
											},
											{
												"body": {
													"nativeSrc": "5915:53:10",
													"nodeType": "YulBlock",
													"src": "5915:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5932:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5955:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5937:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:10"
																		},
																		"nativeSrc": "5937:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:10"
																},
																"nativeSrc": "5925:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5925:37:10"
															},
															"nativeSrc": "5925:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5850:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5903:5:10",
														"nodeType": "YulTypedName",
														"src": "5903:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5910:3:10",
														"nodeType": "YulTypedName",
														"src": "5910:3:10",
														"type": ""
													}
												],
												"src": "5850:118:10"
											},
											{
												"body": {
													"nativeSrc": "6072:124:10",
													"nodeType": "YulBlock",
													"src": "6072:124:10",
													"statements": [
														{
															"nativeSrc": "6082:26:10",
															"nodeType": "YulAssignment",
															"src": "6082:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:10"
																},
																"nativeSrc": "6090:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:10"
																		},
																		"nativeSrc": "6171:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6118:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:10"
																},
																"nativeSrc": "6118:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:10"
															},
															"nativeSrc": "6118:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5974:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:10",
														"nodeType": "YulTypedName",
														"src": "6044:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:10",
														"nodeType": "YulTypedName",
														"src": "6056:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:10",
														"nodeType": "YulTypedName",
														"src": "6067:4:10",
														"type": ""
													}
												],
												"src": "5974:222:10"
											},
											{
												"body": {
													"nativeSrc": "6242:76:10",
													"nodeType": "YulBlock",
													"src": "6242:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6296:16:10",
																"nodeType": "YulBlock",
																"src": "6296:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6305:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6308:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6298:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:10"
																			},
																			"nativeSrc": "6298:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:10"
																		},
																		"nativeSrc": "6298:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6265:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6287:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6272:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:10"
																				},
																				"nativeSrc": "6272:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6262:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:10"
																		},
																		"nativeSrc": "6262:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6255:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:10"
																},
																"nativeSrc": "6255:40:10",
																"nodeType": "YulFunctionCall",
																"src": "6255:40:10"
															},
															"nativeSrc": "6252:60:10",
															"nodeType": "YulIf",
															"src": "6252:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6202:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:10",
														"nodeType": "YulTypedName",
														"src": "6235:5:10",
														"type": ""
													}
												],
												"src": "6202:116:10"
											},
											{
												"body": {
													"nativeSrc": "6373:84:10",
													"nodeType": "YulBlock",
													"src": "6373:84:10",
													"statements": [
														{
															"nativeSrc": "6383:29:10",
															"nodeType": "YulAssignment",
															"src": "6383:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6405:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6392:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:10"
																},
																"nativeSrc": "6392:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6392:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6383:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6445:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6421:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:10"
																},
																"nativeSrc": "6421:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6421:30:10"
															},
															"nativeSrc": "6421:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6324:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6351:6:10",
														"nodeType": "YulTypedName",
														"src": "6351:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6359:3:10",
														"nodeType": "YulTypedName",
														"src": "6359:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6367:5:10",
														"nodeType": "YulTypedName",
														"src": "6367:5:10",
														"type": ""
													}
												],
												"src": "6324:133:10"
											},
											{
												"body": {
													"nativeSrc": "6543:388:10",
													"nodeType": "YulBlock",
													"src": "6543:388:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:83:10",
																"nodeType": "YulBlock",
																"src": "6589:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6591:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:10"
																			},
																			"nativeSrc": "6591:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:10"
																		},
																		"nativeSrc": "6591:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6564:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6560:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:10"
																		},
																		"nativeSrc": "6560:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6556:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:10"
																},
																"nativeSrc": "6556:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6556:32:10"
															},
															"nativeSrc": "6553:119:10",
															"nodeType": "YulIf",
															"src": "6553:119:10"
														},
														{
															"nativeSrc": "6682:117:10",
															"nodeType": "YulBlock",
															"src": "6682:117:10",
															"statements": [
																{
																	"nativeSrc": "6697:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6711:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6701:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6726:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6726:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6761:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6757:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:10"
																				},
																				"nativeSrc": "6757:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6781:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6736:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:10"
																		},
																		"nativeSrc": "6736:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6726:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6809:115:10",
															"nodeType": "YulBlock",
															"src": "6809:115:10",
															"statements": [
																{
																	"nativeSrc": "6824:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6854:60:10",
																	"nodeType": "YulAssignment",
																	"src": "6854:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6886:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6897:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6882:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:10"
																				},
																				"nativeSrc": "6882:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6906:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6864:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:10"
																		},
																		"nativeSrc": "6864:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6854:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6463:468:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6505:9:10",
														"nodeType": "YulTypedName",
														"src": "6505:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6516:7:10",
														"nodeType": "YulTypedName",
														"src": "6516:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6528:6:10",
														"nodeType": "YulTypedName",
														"src": "6528:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6536:6:10",
														"nodeType": "YulTypedName",
														"src": "6536:6:10",
														"type": ""
													}
												],
												"src": "6463:468:10"
											},
											{
												"body": {
													"nativeSrc": "7026:28:10",
													"nodeType": "YulBlock",
													"src": "7026:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7043:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7046:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7036:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:10"
																},
																"nativeSrc": "7036:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7036:12:10"
															},
															"nativeSrc": "7036:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6937:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:10"
											},
											{
												"body": {
													"nativeSrc": "7149:28:10",
													"nodeType": "YulBlock",
													"src": "7149:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7166:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7169:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7159:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:10"
																},
																"nativeSrc": "7159:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7159:12:10"
															},
															"nativeSrc": "7159:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7060:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:10"
											},
											{
												"body": {
													"nativeSrc": "7211:152:10",
													"nodeType": "YulBlock",
													"src": "7211:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7228:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7221:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:10"
																},
																"nativeSrc": "7221:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7221:88:10"
															},
															"nativeSrc": "7221:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7325:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7318:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:10"
																},
																"nativeSrc": "7318:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7318:15:10"
															},
															"nativeSrc": "7318:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7349:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7342:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:10"
																},
																"nativeSrc": "7342:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7342:15:10"
															},
															"nativeSrc": "7342:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7183:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:10"
											},
											{
												"body": {
													"nativeSrc": "7412:238:10",
													"nodeType": "YulBlock",
													"src": "7412:238:10",
													"statements": [
														{
															"nativeSrc": "7422:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7444:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7474:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7452:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:10"
																		},
																		"nativeSrc": "7452:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7440:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:10"
																},
																"nativeSrc": "7440:40:10",
																"nodeType": "YulFunctionCall",
																"src": "7440:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7426:10:10",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7591:22:10",
																"nodeType": "YulBlock",
																"src": "7591:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7593:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:10"
																			},
																			"nativeSrc": "7593:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:10"
																		},
																		"nativeSrc": "7593:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7534:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7546:18:10",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7531:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:10"
																		},
																		"nativeSrc": "7531:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7570:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7582:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7567:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:10"
																		},
																		"nativeSrc": "7567:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7528:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:10"
																},
																"nativeSrc": "7528:62:10",
																"nodeType": "YulFunctionCall",
																"src": "7528:62:10"
															},
															"nativeSrc": "7525:88:10",
															"nodeType": "YulIf",
															"src": "7525:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7629:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7633:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7622:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:10"
																},
																"nativeSrc": "7622:22:10",
																"nodeType": "YulFunctionCall",
																"src": "7622:22:10"
															},
															"nativeSrc": "7622:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7369:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7398:6:10",
														"nodeType": "YulTypedName",
														"src": "7398:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7406:4:10",
														"nodeType": "YulTypedName",
														"src": "7406:4:10",
														"type": ""
													}
												],
												"src": "7369:281:10"
											},
											{
												"body": {
													"nativeSrc": "7697:88:10",
													"nodeType": "YulBlock",
													"src": "7697:88:10",
													"statements": [
														{
															"nativeSrc": "7707:30:10",
															"nodeType": "YulAssignment",
															"src": "7707:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7717:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:10"
																},
																"nativeSrc": "7717:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7717:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7707:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7766:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7774:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7746:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:10"
																},
																"nativeSrc": "7746:33:10",
																"nodeType": "YulFunctionCall",
																"src": "7746:33:10"
															},
															"nativeSrc": "7746:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7656:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7681:4:10",
														"nodeType": "YulTypedName",
														"src": "7681:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7690:6:10",
														"nodeType": "YulTypedName",
														"src": "7690:6:10",
														"type": ""
													}
												],
												"src": "7656:129:10"
											},
											{
												"body": {
													"nativeSrc": "7857:241:10",
													"nodeType": "YulBlock",
													"src": "7857:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7962:22:10",
																"nodeType": "YulBlock",
																"src": "7962:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7964:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:10"
																			},
																			"nativeSrc": "7964:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:10"
																		},
																		"nativeSrc": "7964:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7942:18:10",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7931:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:10"
																},
																"nativeSrc": "7931:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7931:30:10"
															},
															"nativeSrc": "7928:56:10",
															"nodeType": "YulIf",
															"src": "7928:56:10"
														},
														{
															"nativeSrc": "7994:37:10",
															"nodeType": "YulAssignment",
															"src": "7994:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8024:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8002:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:10"
																},
																"nativeSrc": "8002:29:10",
																"nodeType": "YulFunctionCall",
																"src": "8002:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7994:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:10"
																}
															]
														},
														{
															"nativeSrc": "8068:23:10",
															"nodeType": "YulAssignment",
															"src": "8068:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8080:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8076:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:10"
																},
																"nativeSrc": "8076:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8076:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8068:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7791:307:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7841:6:10",
														"nodeType": "YulTypedName",
														"src": "7841:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7852:4:10",
														"nodeType": "YulTypedName",
														"src": "7852:4:10",
														"type": ""
													}
												],
												"src": "7791:307:10"
											},
											{
												"body": {
													"nativeSrc": "8168:82:10",
													"nodeType": "YulBlock",
													"src": "8168:82:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8191:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8196:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8201:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8178:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:10"
																},
																"nativeSrc": "8178:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8178:30:10"
															},
															"nativeSrc": "8178:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8228:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8233:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:10"
																		},
																		"nativeSrc": "8224:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:10"
																},
																"nativeSrc": "8217:27:10",
																"nodeType": "YulFunctionCall",
																"src": "8217:27:10"
															},
															"nativeSrc": "8217:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8104:146:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8150:3:10",
														"nodeType": "YulTypedName",
														"src": "8150:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8155:3:10",
														"nodeType": "YulTypedName",
														"src": "8155:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8160:6:10",
														"nodeType": "YulTypedName",
														"src": "8160:6:10",
														"type": ""
													}
												],
												"src": "8104:146:10"
											},
											{
												"body": {
													"nativeSrc": "8339:340:10",
													"nodeType": "YulBlock",
													"src": "8339:340:10",
													"statements": [
														{
															"nativeSrc": "8349:74:10",
															"nodeType": "YulAssignment",
															"src": "8349:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8415:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8374:40:10",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:10"
																		},
																		"nativeSrc": "8374:48:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8358:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:10"
																},
																"nativeSrc": "8358:65:10",
																"nodeType": "YulFunctionCall",
																"src": "8358:65:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8349:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8439:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8446:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:10"
																},
																"nativeSrc": "8432:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8432:21:10"
															},
															"nativeSrc": "8432:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:10"
														},
														{
															"nativeSrc": "8462:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8477:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8473:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:10"
																},
																"nativeSrc": "8473:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8473:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8466:3:10",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8527:83:10",
																"nodeType": "YulBlock",
																"src": "8527:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8529:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:10"
																			},
																			"nativeSrc": "8529:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:10"
																		},
																		"nativeSrc": "8529:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8508:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8513:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:10"
																		},
																		"nativeSrc": "8504:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8522:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8501:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:10"
																},
																"nativeSrc": "8501:25:10",
																"nodeType": "YulFunctionCall",
																"src": "8501:25:10"
															},
															"nativeSrc": "8498:112:10",
															"nodeType": "YulIf",
															"src": "8498:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8656:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8661:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8666:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8619:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:10"
																},
																"nativeSrc": "8619:54:10",
																"nodeType": "YulFunctionCall",
																"src": "8619:54:10"
															},
															"nativeSrc": "8619:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8256:423:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8312:3:10",
														"nodeType": "YulTypedName",
														"src": "8312:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8317:6:10",
														"nodeType": "YulTypedName",
														"src": "8317:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8325:3:10",
														"nodeType": "YulTypedName",
														"src": "8325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8333:5:10",
														"nodeType": "YulTypedName",
														"src": "8333:5:10",
														"type": ""
													}
												],
												"src": "8256:423:10"
											},
											{
												"body": {
													"nativeSrc": "8759:277:10",
													"nodeType": "YulBlock",
													"src": "8759:277:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8808:83:10",
																"nodeType": "YulBlock",
																"src": "8808:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8810:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:10"
																			},
																			"nativeSrc": "8810:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:10"
																		},
																		"nativeSrc": "8810:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8787:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8795:4:10",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8783:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:10"
																				},
																				"nativeSrc": "8783:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8802:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8779:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:10"
																		},
																		"nativeSrc": "8779:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8772:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:10"
																},
																"nativeSrc": "8772:35:10",
																"nodeType": "YulFunctionCall",
																"src": "8772:35:10"
															},
															"nativeSrc": "8769:122:10",
															"nodeType": "YulIf",
															"src": "8769:122:10"
														},
														{
															"nativeSrc": "8900:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8927:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8914:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:10"
																},
																"nativeSrc": "8914:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8914:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8904:6:10",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8943:87:10",
															"nodeType": "YulAssignment",
															"src": "8943:87:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9003:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9011:4:10",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8999:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:10"
																		},
																		"nativeSrc": "8999:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9018:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9026:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8952:46:10",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:10"
																},
																"nativeSrc": "8952:78:10",
																"nodeType": "YulFunctionCall",
																"src": "8952:78:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8943:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8698:338:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8737:6:10",
														"nodeType": "YulTypedName",
														"src": "8737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8745:3:10",
														"nodeType": "YulTypedName",
														"src": "8745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8753:5:10",
														"nodeType": "YulTypedName",
														"src": "8753:5:10",
														"type": ""
													}
												],
												"src": "8698:338:10"
											},
											{
												"body": {
													"nativeSrc": "9168:817:10",
													"nodeType": "YulBlock",
													"src": "9168:817:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:10",
																"nodeType": "YulBlock",
																"src": "9215:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:10"
																			},
																			"nativeSrc": "9217:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:10"
																		},
																		"nativeSrc": "9217:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9189:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9198:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9185:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:10"
																		},
																		"nativeSrc": "9185:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9210:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9181:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:10"
																},
																"nativeSrc": "9181:33:10",
																"nodeType": "YulFunctionCall",
																"src": "9181:33:10"
															},
															"nativeSrc": "9178:120:10",
															"nodeType": "YulIf",
															"src": "9178:120:10"
														},
														{
															"nativeSrc": "9308:117:10",
															"nodeType": "YulBlock",
															"src": "9308:117:10",
															"statements": [
																{
																	"nativeSrc": "9323:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:10",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:10"
																				},
																				"nativeSrc": "9383:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:10"
																		},
																		"nativeSrc": "9362:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:118:10",
															"nodeType": "YulBlock",
															"src": "9435:118:10",
															"statements": [
																{
																	"nativeSrc": "9450:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:63:10",
																	"nodeType": "YulAssignment",
																	"src": "9480:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9515:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9526:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9511:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:10"
																				},
																				"nativeSrc": "9511:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9535:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9490:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:10"
																		},
																		"nativeSrc": "9490:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9563:118:10",
															"nodeType": "YulBlock",
															"src": "9563:118:10",
															"statements": [
																{
																	"nativeSrc": "9578:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9592:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9582:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9608:63:10",
																	"nodeType": "YulAssignment",
																	"src": "9608:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9643:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9654:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9639:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:10"
																				},
																				"nativeSrc": "9639:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9663:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9618:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:10"
																		},
																		"nativeSrc": "9618:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9608:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9691:287:10",
															"nodeType": "YulBlock",
															"src": "9691:287:10",
															"statements": [
																{
																	"nativeSrc": "9706:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9737:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9748:2:10",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9733:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:10"
																				},
																				"nativeSrc": "9733:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9720:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:10"
																		},
																		"nativeSrc": "9720:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9710:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9799:83:10",
																		"nodeType": "YulBlock",
																		"src": "9799:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9801:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:10"
																					},
																					"nativeSrc": "9801:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:10"
																				},
																				"nativeSrc": "9801:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9771:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9779:18:10",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9768:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:10"
																		},
																		"nativeSrc": "9768:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:10"
																	},
																	"nativeSrc": "9765:117:10",
																	"nodeType": "YulIf",
																	"src": "9765:117:10"
																},
																{
																	"nativeSrc": "9896:72:10",
																	"nodeType": "YulAssignment",
																	"src": "9896:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9940:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9951:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9936:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:10"
																				},
																				"nativeSrc": "9936:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9960:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9906:29:10",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:10"
																		},
																		"nativeSrc": "9906:62:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9896:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9042:943:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9114:9:10",
														"nodeType": "YulTypedName",
														"src": "9114:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9125:7:10",
														"nodeType": "YulTypedName",
														"src": "9125:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9137:6:10",
														"nodeType": "YulTypedName",
														"src": "9137:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9145:6:10",
														"nodeType": "YulTypedName",
														"src": "9145:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9153:6:10",
														"nodeType": "YulTypedName",
														"src": "9153:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9161:6:10",
														"nodeType": "YulTypedName",
														"src": "9161:6:10",
														"type": ""
													}
												],
												"src": "9042:943:10"
											},
											{
												"body": {
													"nativeSrc": "10074:391:10",
													"nodeType": "YulBlock",
													"src": "10074:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10120:83:10",
																"nodeType": "YulBlock",
																"src": "10120:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10122:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:10"
																			},
																			"nativeSrc": "10122:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:10"
																		},
																		"nativeSrc": "10122:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10095:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10104:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10091:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:10"
																		},
																		"nativeSrc": "10091:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10116:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10087:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:10"
																},
																"nativeSrc": "10087:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10087:32:10"
															},
															"nativeSrc": "10084:119:10",
															"nodeType": "YulIf",
															"src": "10084:119:10"
														},
														{
															"nativeSrc": "10213:117:10",
															"nodeType": "YulBlock",
															"src": "10213:117:10",
															"statements": [
																{
																	"nativeSrc": "10228:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10242:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10232:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10257:63:10",
																	"nodeType": "YulAssignment",
																	"src": "10257:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10292:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10303:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10288:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:10"
																				},
																				"nativeSrc": "10288:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10312:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10267:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:10"
																		},
																		"nativeSrc": "10267:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10257:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10340:118:10",
															"nodeType": "YulBlock",
															"src": "10340:118:10",
															"statements": [
																{
																	"nativeSrc": "10355:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10369:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10359:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10385:63:10",
																	"nodeType": "YulAssignment",
																	"src": "10385:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10420:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10431:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10416:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:10"
																				},
																				"nativeSrc": "10416:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10440:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10395:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:10"
																		},
																		"nativeSrc": "10395:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10385:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9991:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10036:9:10",
														"nodeType": "YulTypedName",
														"src": "10036:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10047:7:10",
														"nodeType": "YulTypedName",
														"src": "10047:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10059:6:10",
														"nodeType": "YulTypedName",
														"src": "10059:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10067:6:10",
														"nodeType": "YulTypedName",
														"src": "10067:6:10",
														"type": ""
													}
												],
												"src": "9991:474:10"
											},
											{
												"body": {
													"nativeSrc": "10499:152:10",
													"nodeType": "YulBlock",
													"src": "10499:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10516:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10519:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10509:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:10"
																},
																"nativeSrc": "10509:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10509:88:10"
															},
															"nativeSrc": "10509:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10613:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10616:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10606:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:10"
																},
																"nativeSrc": "10606:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10606:15:10"
															},
															"nativeSrc": "10606:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10637:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10640:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10630:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:10"
																},
																"nativeSrc": "10630:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10630:15:10"
															},
															"nativeSrc": "10630:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10471:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:10"
											},
											{
												"body": {
													"nativeSrc": "10708:269:10",
													"nodeType": "YulBlock",
													"src": "10708:269:10",
													"statements": [
														{
															"nativeSrc": "10718:22:10",
															"nodeType": "YulAssignment",
															"src": "10718:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10732:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10738:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10728:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:10"
																},
																"nativeSrc": "10728:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10728:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10718:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:10"
																}
															]
														},
														{
															"nativeSrc": "10749:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10779:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10785:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10775:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:10"
																},
																"nativeSrc": "10775:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10775:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10753:18:10",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10826:51:10",
																"nodeType": "YulBlock",
																"src": "10826:51:10",
																"statements": [
																	{
																		"nativeSrc": "10840:27:10",
																		"nodeType": "YulAssignment",
																		"src": "10840:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10854:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10862:4:10",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10850:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:10"
																			},
																			"nativeSrc": "10850:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10840:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10806:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10799:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:10"
																},
																"nativeSrc": "10799:26:10",
																"nodeType": "YulFunctionCall",
																"src": "10799:26:10"
															},
															"nativeSrc": "10796:81:10",
															"nodeType": "YulIf",
															"src": "10796:81:10"
														},
														{
															"body": {
																"nativeSrc": "10929:42:10",
																"nodeType": "YulBlock",
																"src": "10929:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10943:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:10"
																			},
																			"nativeSrc": "10943:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:10"
																		},
																		"nativeSrc": "10943:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10893:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10916:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10924:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10913:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:10"
																		},
																		"nativeSrc": "10913:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10890:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:10"
																},
																"nativeSrc": "10890:38:10",
																"nodeType": "YulFunctionCall",
																"src": "10890:38:10"
															},
															"nativeSrc": "10887:84:10",
															"nodeType": "YulIf",
															"src": "10887:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10657:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10692:4:10",
														"nodeType": "YulTypedName",
														"src": "10692:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10701:6:10",
														"nodeType": "YulTypedName",
														"src": "10701:6:10",
														"type": ""
													}
												],
												"src": "10657:320:10"
											},
											{
												"body": {
													"nativeSrc": "11089:114:10",
													"nodeType": "YulBlock",
													"src": "11089:114:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11111:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11111:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11119:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11119:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11107:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11107:3:10"
																		},
																		"nativeSrc": "11107:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11107:14:10"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "11123:34:10",
																		"nodeType": "YulLiteral",
																		"src": "11123:34:10",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11100:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:10"
																},
																"nativeSrc": "11100:58:10",
																"nodeType": "YulFunctionCall",
																"src": "11100:58:10"
															},
															"nativeSrc": "11100:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "11100:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11179:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11187:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11187:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11175:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:10"
																		},
																		"nativeSrc": "11175:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11175:15:10"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "11192:3:10",
																		"nodeType": "YulLiteral",
																		"src": "11192:3:10",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11168:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:10"
																},
																"nativeSrc": "11168:28:10",
																"nodeType": "YulFunctionCall",
																"src": "11168:28:10"
															},
															"nativeSrc": "11168:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "11168:28:10"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nativeSrc": "10983:220:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11081:6:10",
														"nodeType": "YulTypedName",
														"src": "11081:6:10",
														"type": ""
													}
												],
												"src": "10983:220:10"
											},
											{
												"body": {
													"nativeSrc": "11355:220:10",
													"nodeType": "YulBlock",
													"src": "11355:220:10",
													"statements": [
														{
															"nativeSrc": "11365:74:10",
															"nodeType": "YulAssignment",
															"src": "11365:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11431:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11431:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11436:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11436:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11372:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11372:58:10"
																},
																"nativeSrc": "11372:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11372:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11365:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11365:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11537:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11537:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nativeSrc": "11448:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11448:88:10"
																},
																"nativeSrc": "11448:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11448:93:10"
															},
															"nativeSrc": "11448:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11448:93:10"
														},
														{
															"nativeSrc": "11550:19:10",
															"nodeType": "YulAssignment",
															"src": "11550:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11561:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11561:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11566:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11566:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11557:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11557:3:10"
																},
																"nativeSrc": "11557:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11557:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11550:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11550:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11209:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11343:3:10",
														"nodeType": "YulTypedName",
														"src": "11343:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11351:3:10",
														"nodeType": "YulTypedName",
														"src": "11351:3:10",
														"type": ""
													}
												],
												"src": "11209:366:10"
											},
											{
												"body": {
													"nativeSrc": "11752:248:10",
													"nodeType": "YulBlock",
													"src": "11752:248:10",
													"statements": [
														{
															"nativeSrc": "11762:26:10",
															"nodeType": "YulAssignment",
															"src": "11762:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11774:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11774:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11785:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11785:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11770:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11770:3:10"
																},
																"nativeSrc": "11770:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11770:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11762:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11762:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11809:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11809:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11820:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11820:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11805:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11805:3:10"
																		},
																		"nativeSrc": "11805:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11805:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11828:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11828:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11834:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11834:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11824:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11824:3:10"
																		},
																		"nativeSrc": "11824:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11824:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11798:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11798:6:10"
																},
																"nativeSrc": "11798:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11798:47:10"
															},
															"nativeSrc": "11798:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11798:47:10"
														},
														{
															"nativeSrc": "11854:139:10",
															"nodeType": "YulAssignment",
															"src": "11854:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11988:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11988:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11862:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11862:124:10"
																},
																"nativeSrc": "11862:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11862:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11854:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11854:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11581:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11732:9:10",
														"nodeType": "YulTypedName",
														"src": "11732:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11747:4:10",
														"nodeType": "YulTypedName",
														"src": "11747:4:10",
														"type": ""
													}
												],
												"src": "11581:419:10"
											},
											{
												"body": {
													"nativeSrc": "12112:142:10",
													"nodeType": "YulBlock",
													"src": "12112:142:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12134:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12134:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12142:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12142:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12130:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12130:3:10"
																		},
																		"nativeSrc": "12130:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12130:14:10"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nativeSrc": "12146:34:10",
																		"nodeType": "YulLiteral",
																		"src": "12146:34:10",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12123:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12123:6:10"
																},
																"nativeSrc": "12123:58:10",
																"nodeType": "YulFunctionCall",
																"src": "12123:58:10"
															},
															"nativeSrc": "12123:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "12123:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12202:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12202:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12210:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12210:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12198:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12198:3:10"
																		},
																		"nativeSrc": "12198:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12198:15:10"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "12215:31:10",
																		"nodeType": "YulLiteral",
																		"src": "12215:31:10",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12191:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12191:6:10"
																},
																"nativeSrc": "12191:56:10",
																"nodeType": "YulFunctionCall",
																"src": "12191:56:10"
															},
															"nativeSrc": "12191:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "12191:56:10"
														}
													]
												},
												"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
												"nativeSrc": "12006:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12104:6:10",
														"nodeType": "YulTypedName",
														"src": "12104:6:10",
														"type": ""
													}
												],
												"src": "12006:248:10"
											},
											{
												"body": {
													"nativeSrc": "12406:220:10",
													"nodeType": "YulBlock",
													"src": "12406:220:10",
													"statements": [
														{
															"nativeSrc": "12416:74:10",
															"nodeType": "YulAssignment",
															"src": "12416:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12482:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12482:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12487:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12487:2:10",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12423:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12423:58:10"
																},
																"nativeSrc": "12423:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12423:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12416:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12416:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12588:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12588:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																	"nativeSrc": "12499:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12499:88:10"
																},
																"nativeSrc": "12499:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12499:93:10"
															},
															"nativeSrc": "12499:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12499:93:10"
														},
														{
															"nativeSrc": "12601:19:10",
															"nodeType": "YulAssignment",
															"src": "12601:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12612:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12612:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12617:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12617:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12608:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12608:3:10"
																},
																"nativeSrc": "12608:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12608:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12601:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12601:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12260:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12394:3:10",
														"nodeType": "YulTypedName",
														"src": "12394:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12402:3:10",
														"nodeType": "YulTypedName",
														"src": "12402:3:10",
														"type": ""
													}
												],
												"src": "12260:366:10"
											},
											{
												"body": {
													"nativeSrc": "12803:248:10",
													"nodeType": "YulBlock",
													"src": "12803:248:10",
													"statements": [
														{
															"nativeSrc": "12813:26:10",
															"nodeType": "YulAssignment",
															"src": "12813:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12825:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12825:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12836:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12836:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12821:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12821:3:10"
																},
																"nativeSrc": "12821:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12821:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12813:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12813:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12860:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12860:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12871:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12871:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12856:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12856:3:10"
																		},
																		"nativeSrc": "12856:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12856:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12879:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12879:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12885:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12885:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12875:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12875:3:10"
																		},
																		"nativeSrc": "12875:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12875:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12849:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12849:6:10"
																},
																"nativeSrc": "12849:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12849:47:10"
															},
															"nativeSrc": "12849:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12849:47:10"
														},
														{
															"nativeSrc": "12905:139:10",
															"nodeType": "YulAssignment",
															"src": "12905:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13039:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13039:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12913:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12913:124:10"
																},
																"nativeSrc": "12913:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12913:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12905:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12905:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12632:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12783:9:10",
														"nodeType": "YulTypedName",
														"src": "12783:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12798:4:10",
														"nodeType": "YulTypedName",
														"src": "12798:4:10",
														"type": ""
													}
												],
												"src": "12632:419:10"
											},
											{
												"body": {
													"nativeSrc": "13163:126:10",
													"nodeType": "YulBlock",
													"src": "13163:126:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13185:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13185:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13193:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13193:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13181:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13181:3:10"
																		},
																		"nativeSrc": "13181:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13181:14:10"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nativeSrc": "13197:34:10",
																		"nodeType": "YulLiteral",
																		"src": "13197:34:10",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13174:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13174:6:10"
																},
																"nativeSrc": "13174:58:10",
																"nodeType": "YulFunctionCall",
																"src": "13174:58:10"
															},
															"nativeSrc": "13174:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "13174:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13253:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13253:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13261:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13261:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13249:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13249:3:10"
																		},
																		"nativeSrc": "13249:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13249:15:10"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "13266:15:10",
																		"nodeType": "YulLiteral",
																		"src": "13266:15:10",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13242:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13242:6:10"
																},
																"nativeSrc": "13242:40:10",
																"nodeType": "YulFunctionCall",
																"src": "13242:40:10"
															},
															"nativeSrc": "13242:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "13242:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
												"nativeSrc": "13057:232:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13155:6:10",
														"nodeType": "YulTypedName",
														"src": "13155:6:10",
														"type": ""
													}
												],
												"src": "13057:232:10"
											},
											{
												"body": {
													"nativeSrc": "13441:220:10",
													"nodeType": "YulBlock",
													"src": "13441:220:10",
													"statements": [
														{
															"nativeSrc": "13451:74:10",
															"nodeType": "YulAssignment",
															"src": "13451:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13517:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13517:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13522:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13522:2:10",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13458:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13458:58:10"
																},
																"nativeSrc": "13458:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13458:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13451:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13451:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13623:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13623:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																	"nativeSrc": "13534:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13534:88:10"
																},
																"nativeSrc": "13534:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13534:93:10"
															},
															"nativeSrc": "13534:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13534:93:10"
														},
														{
															"nativeSrc": "13636:19:10",
															"nodeType": "YulAssignment",
															"src": "13636:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13647:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13647:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13652:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13652:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13643:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13643:3:10"
																},
																"nativeSrc": "13643:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13643:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13636:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13636:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13295:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13429:3:10",
														"nodeType": "YulTypedName",
														"src": "13429:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13437:3:10",
														"nodeType": "YulTypedName",
														"src": "13437:3:10",
														"type": ""
													}
												],
												"src": "13295:366:10"
											},
											{
												"body": {
													"nativeSrc": "13838:248:10",
													"nodeType": "YulBlock",
													"src": "13838:248:10",
													"statements": [
														{
															"nativeSrc": "13848:26:10",
															"nodeType": "YulAssignment",
															"src": "13848:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13860:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13860:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13871:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13871:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13856:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13856:3:10"
																},
																"nativeSrc": "13856:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13856:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13848:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13848:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13895:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13895:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13906:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13906:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13891:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13891:3:10"
																		},
																		"nativeSrc": "13891:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13891:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13914:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13914:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13920:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13920:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13910:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13910:3:10"
																		},
																		"nativeSrc": "13910:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13910:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13884:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13884:6:10"
																},
																"nativeSrc": "13884:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13884:47:10"
															},
															"nativeSrc": "13884:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13884:47:10"
														},
														{
															"nativeSrc": "13940:139:10",
															"nodeType": "YulAssignment",
															"src": "13940:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14074:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14074:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13948:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13948:124:10"
																},
																"nativeSrc": "13948:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13948:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13940:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13940:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13667:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13818:9:10",
														"nodeType": "YulTypedName",
														"src": "13818:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13833:4:10",
														"nodeType": "YulTypedName",
														"src": "13833:4:10",
														"type": ""
													}
												],
												"src": "13667:419:10"
											},
											{
												"body": {
													"nativeSrc": "14198:68:10",
													"nodeType": "YulBlock",
													"src": "14198:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14220:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14220:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14228:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14228:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14216:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14216:3:10"
																		},
																		"nativeSrc": "14216:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14216:14:10"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nativeSrc": "14232:26:10",
																		"nodeType": "YulLiteral",
																		"src": "14232:26:10",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14209:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14209:6:10"
																},
																"nativeSrc": "14209:50:10",
																"nodeType": "YulFunctionCall",
																"src": "14209:50:10"
															},
															"nativeSrc": "14209:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "14209:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
												"nativeSrc": "14092:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14190:6:10",
														"nodeType": "YulTypedName",
														"src": "14190:6:10",
														"type": ""
													}
												],
												"src": "14092:174:10"
											},
											{
												"body": {
													"nativeSrc": "14418:220:10",
													"nodeType": "YulBlock",
													"src": "14418:220:10",
													"statements": [
														{
															"nativeSrc": "14428:74:10",
															"nodeType": "YulAssignment",
															"src": "14428:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14494:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14494:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14499:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14499:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14435:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14435:58:10"
																},
																"nativeSrc": "14435:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14435:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14428:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14428:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14600:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14600:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																	"nativeSrc": "14511:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14511:88:10"
																},
																"nativeSrc": "14511:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14511:93:10"
															},
															"nativeSrc": "14511:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14511:93:10"
														},
														{
															"nativeSrc": "14613:19:10",
															"nodeType": "YulAssignment",
															"src": "14613:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14624:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14624:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14629:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14629:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14620:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14620:3:10"
																},
																"nativeSrc": "14620:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14620:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14613:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14613:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14272:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14406:3:10",
														"nodeType": "YulTypedName",
														"src": "14406:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14414:3:10",
														"nodeType": "YulTypedName",
														"src": "14414:3:10",
														"type": ""
													}
												],
												"src": "14272:366:10"
											},
											{
												"body": {
													"nativeSrc": "14815:248:10",
													"nodeType": "YulBlock",
													"src": "14815:248:10",
													"statements": [
														{
															"nativeSrc": "14825:26:10",
															"nodeType": "YulAssignment",
															"src": "14825:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14837:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14837:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14848:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14848:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14833:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14833:3:10"
																},
																"nativeSrc": "14833:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14833:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14825:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14825:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14872:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14872:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14883:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14883:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14868:3:10"
																		},
																		"nativeSrc": "14868:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14868:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14891:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14891:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14897:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14897:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14887:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14887:3:10"
																		},
																		"nativeSrc": "14887:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14887:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14861:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14861:6:10"
																},
																"nativeSrc": "14861:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14861:47:10"
															},
															"nativeSrc": "14861:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14861:47:10"
														},
														{
															"nativeSrc": "14917:139:10",
															"nodeType": "YulAssignment",
															"src": "14917:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15051:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15051:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14925:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14925:124:10"
																},
																"nativeSrc": "14925:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14925:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14917:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14917:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14644:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14795:9:10",
														"nodeType": "YulTypedName",
														"src": "14795:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14810:4:10",
														"nodeType": "YulTypedName",
														"src": "14810:4:10",
														"type": ""
													}
												],
												"src": "14644:419:10"
											},
											{
												"body": {
													"nativeSrc": "15175:122:10",
													"nodeType": "YulBlock",
													"src": "15175:122:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15197:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15197:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15205:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15205:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15193:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15193:3:10"
																		},
																		"nativeSrc": "15193:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15193:14:10"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nativeSrc": "15209:34:10",
																		"nodeType": "YulLiteral",
																		"src": "15209:34:10",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15186:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15186:6:10"
																},
																"nativeSrc": "15186:58:10",
																"nodeType": "YulFunctionCall",
																"src": "15186:58:10"
															},
															"nativeSrc": "15186:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "15186:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15265:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15265:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15273:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15273:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15261:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15261:3:10"
																		},
																		"nativeSrc": "15261:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15261:15:10"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nativeSrc": "15278:11:10",
																		"nodeType": "YulLiteral",
																		"src": "15278:11:10",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15254:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15254:6:10"
																},
																"nativeSrc": "15254:36:10",
																"nodeType": "YulFunctionCall",
																"src": "15254:36:10"
															},
															"nativeSrc": "15254:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "15254:36:10"
														}
													]
												},
												"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
												"nativeSrc": "15069:228:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15167:6:10",
														"nodeType": "YulTypedName",
														"src": "15167:6:10",
														"type": ""
													}
												],
												"src": "15069:228:10"
											},
											{
												"body": {
													"nativeSrc": "15449:220:10",
													"nodeType": "YulBlock",
													"src": "15449:220:10",
													"statements": [
														{
															"nativeSrc": "15459:74:10",
															"nodeType": "YulAssignment",
															"src": "15459:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15525:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15525:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15530:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15530:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15466:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15466:58:10"
																},
																"nativeSrc": "15466:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15466:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15459:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15459:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15631:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15631:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																	"nativeSrc": "15542:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15542:88:10"
																},
																"nativeSrc": "15542:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15542:93:10"
															},
															"nativeSrc": "15542:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15542:93:10"
														},
														{
															"nativeSrc": "15644:19:10",
															"nodeType": "YulAssignment",
															"src": "15644:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15655:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15655:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15660:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15660:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15651:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15651:3:10"
																},
																"nativeSrc": "15651:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15651:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15644:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15644:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15303:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15437:3:10",
														"nodeType": "YulTypedName",
														"src": "15437:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15445:3:10",
														"nodeType": "YulTypedName",
														"src": "15445:3:10",
														"type": ""
													}
												],
												"src": "15303:366:10"
											},
											{
												"body": {
													"nativeSrc": "15846:248:10",
													"nodeType": "YulBlock",
													"src": "15846:248:10",
													"statements": [
														{
															"nativeSrc": "15856:26:10",
															"nodeType": "YulAssignment",
															"src": "15856:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15868:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15868:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15879:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15879:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15864:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15864:3:10"
																},
																"nativeSrc": "15864:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15864:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15856:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15856:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15903:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15903:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15914:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15914:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15899:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15899:3:10"
																		},
																		"nativeSrc": "15899:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15899:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15922:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15922:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15928:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15928:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15918:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15918:3:10"
																		},
																		"nativeSrc": "15918:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15918:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15892:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15892:6:10"
																},
																"nativeSrc": "15892:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15892:47:10"
															},
															"nativeSrc": "15892:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15892:47:10"
														},
														{
															"nativeSrc": "15948:139:10",
															"nodeType": "YulAssignment",
															"src": "15948:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16082:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16082:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15956:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15956:124:10"
																},
																"nativeSrc": "15956:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15956:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15948:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15948:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15675:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15826:9:10",
														"nodeType": "YulTypedName",
														"src": "15826:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15841:4:10",
														"nodeType": "YulTypedName",
														"src": "15841:4:10",
														"type": ""
													}
												],
												"src": "15675:419:10"
											},
											{
												"body": {
													"nativeSrc": "16214:34:10",
													"nodeType": "YulBlock",
													"src": "16214:34:10",
													"statements": [
														{
															"nativeSrc": "16224:18:10",
															"nodeType": "YulAssignment",
															"src": "16224:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "16239:3:10",
																"nodeType": "YulIdentifier",
																"src": "16239:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16224:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "16224:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16100:148:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16186:3:10",
														"nodeType": "YulTypedName",
														"src": "16186:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16191:6:10",
														"nodeType": "YulTypedName",
														"src": "16191:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16202:11:10",
														"nodeType": "YulTypedName",
														"src": "16202:11:10",
														"type": ""
													}
												],
												"src": "16100:148:10"
											},
											{
												"body": {
													"nativeSrc": "16364:280:10",
													"nodeType": "YulBlock",
													"src": "16364:280:10",
													"statements": [
														{
															"nativeSrc": "16374:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "16374:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16421:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "16421:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16388:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "16388:32:10"
																},
																"nativeSrc": "16388:39:10",
																"nodeType": "YulFunctionCall",
																"src": "16388:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16378:6:10",
																	"nodeType": "YulTypedName",
																	"src": "16378:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16436:96:10",
															"nodeType": "YulAssignment",
															"src": "16436:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16520:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16520:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16525:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16525:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16443:76:10",
																	"nodeType": "YulIdentifier",
																	"src": "16443:76:10"
																},
																"nativeSrc": "16443:89:10",
																"nodeType": "YulFunctionCall",
																"src": "16443:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16436:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16436:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16580:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "16580:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16587:4:10",
																				"nodeType": "YulLiteral",
																				"src": "16587:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16576:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16576:3:10"
																		},
																		"nativeSrc": "16576:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16576:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16594:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16594:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16599:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16599:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16541:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "16541:34:10"
																},
																"nativeSrc": "16541:65:10",
																"nodeType": "YulFunctionCall",
																"src": "16541:65:10"
															},
															"nativeSrc": "16541:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "16541:65:10"
														},
														{
															"nativeSrc": "16615:23:10",
															"nodeType": "YulAssignment",
															"src": "16615:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16626:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16626:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16631:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16631:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16622:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16622:3:10"
																},
																"nativeSrc": "16622:16:10",
																"nodeType": "YulFunctionCall",
																"src": "16622:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16615:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16615:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16254:390:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16345:5:10",
														"nodeType": "YulTypedName",
														"src": "16345:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16352:3:10",
														"nodeType": "YulTypedName",
														"src": "16352:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16360:3:10",
														"nodeType": "YulTypedName",
														"src": "16360:3:10",
														"type": ""
													}
												],
												"src": "16254:390:10"
											},
											{
												"body": {
													"nativeSrc": "16834:251:10",
													"nodeType": "YulBlock",
													"src": "16834:251:10",
													"statements": [
														{
															"nativeSrc": "16845:102:10",
															"nodeType": "YulAssignment",
															"src": "16845:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16934:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16934:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16943:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16943:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16852:81:10",
																	"nodeType": "YulIdentifier",
																	"src": "16852:81:10"
																},
																"nativeSrc": "16852:95:10",
																"nodeType": "YulFunctionCall",
																"src": "16852:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16845:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16845:3:10"
																}
															]
														},
														{
															"nativeSrc": "16957:102:10",
															"nodeType": "YulAssignment",
															"src": "16957:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17046:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17046:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17055:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17055:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16964:81:10",
																	"nodeType": "YulIdentifier",
																	"src": "16964:81:10"
																},
																"nativeSrc": "16964:95:10",
																"nodeType": "YulFunctionCall",
																"src": "16964:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16957:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16957:3:10"
																}
															]
														},
														{
															"nativeSrc": "17069:10:10",
															"nodeType": "YulAssignment",
															"src": "17069:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "17076:3:10",
																"nodeType": "YulIdentifier",
																"src": "17076:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17069:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17069:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16650:435:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16805:3:10",
														"nodeType": "YulTypedName",
														"src": "16805:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16811:6:10",
														"nodeType": "YulTypedName",
														"src": "16811:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16819:6:10",
														"nodeType": "YulTypedName",
														"src": "16819:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16830:3:10",
														"nodeType": "YulTypedName",
														"src": "16830:3:10",
														"type": ""
													}
												],
												"src": "16650:435:10"
											},
											{
												"body": {
													"nativeSrc": "17197:118:10",
													"nodeType": "YulBlock",
													"src": "17197:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17219:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17219:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17227:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17227:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17215:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17215:3:10"
																		},
																		"nativeSrc": "17215:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17215:14:10"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nativeSrc": "17231:34:10",
																		"nodeType": "YulLiteral",
																		"src": "17231:34:10",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17208:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17208:6:10"
																},
																"nativeSrc": "17208:58:10",
																"nodeType": "YulFunctionCall",
																"src": "17208:58:10"
															},
															"nativeSrc": "17208:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "17208:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17287:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17287:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17295:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17295:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17283:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17283:3:10"
																		},
																		"nativeSrc": "17283:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17283:15:10"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nativeSrc": "17300:7:10",
																		"nodeType": "YulLiteral",
																		"src": "17300:7:10",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17276:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17276:6:10"
																},
																"nativeSrc": "17276:32:10",
																"nodeType": "YulFunctionCall",
																"src": "17276:32:10"
															},
															"nativeSrc": "17276:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "17276:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
												"nativeSrc": "17091:224:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17189:6:10",
														"nodeType": "YulTypedName",
														"src": "17189:6:10",
														"type": ""
													}
												],
												"src": "17091:224:10"
											},
											{
												"body": {
													"nativeSrc": "17467:220:10",
													"nodeType": "YulBlock",
													"src": "17467:220:10",
													"statements": [
														{
															"nativeSrc": "17477:74:10",
															"nodeType": "YulAssignment",
															"src": "17477:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17543:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17543:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17548:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17548:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17484:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17484:58:10"
																},
																"nativeSrc": "17484:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17484:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17477:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17649:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17649:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																	"nativeSrc": "17560:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17560:88:10"
																},
																"nativeSrc": "17560:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17560:93:10"
															},
															"nativeSrc": "17560:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17560:93:10"
														},
														{
															"nativeSrc": "17662:19:10",
															"nodeType": "YulAssignment",
															"src": "17662:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17673:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17673:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17678:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17678:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17669:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17669:3:10"
																},
																"nativeSrc": "17669:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17669:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17662:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17662:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17321:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17455:3:10",
														"nodeType": "YulTypedName",
														"src": "17455:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17463:3:10",
														"nodeType": "YulTypedName",
														"src": "17463:3:10",
														"type": ""
													}
												],
												"src": "17321:366:10"
											},
											{
												"body": {
													"nativeSrc": "17864:248:10",
													"nodeType": "YulBlock",
													"src": "17864:248:10",
													"statements": [
														{
															"nativeSrc": "17874:26:10",
															"nodeType": "YulAssignment",
															"src": "17874:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17886:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17886:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17897:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17897:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17882:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17882:3:10"
																},
																"nativeSrc": "17882:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17882:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17874:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17921:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17921:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17932:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17932:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17917:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17917:3:10"
																		},
																		"nativeSrc": "17917:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17917:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17940:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17940:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17946:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17946:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17936:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17936:3:10"
																		},
																		"nativeSrc": "17936:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17936:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17910:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17910:6:10"
																},
																"nativeSrc": "17910:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17910:47:10"
															},
															"nativeSrc": "17910:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17910:47:10"
														},
														{
															"nativeSrc": "17966:139:10",
															"nodeType": "YulAssignment",
															"src": "17966:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18100:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18100:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17974:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17974:124:10"
																},
																"nativeSrc": "17974:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17974:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17966:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17966:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17693:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17844:9:10",
														"nodeType": "YulTypedName",
														"src": "17844:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17859:4:10",
														"nodeType": "YulTypedName",
														"src": "17859:4:10",
														"type": ""
													}
												],
												"src": "17693:419:10"
											},
											{
												"body": {
													"nativeSrc": "18224:117:10",
													"nodeType": "YulBlock",
													"src": "18224:117:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18246:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18246:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18254:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18254:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18242:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18242:3:10"
																		},
																		"nativeSrc": "18242:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18242:14:10"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "18258:34:10",
																		"nodeType": "YulLiteral",
																		"src": "18258:34:10",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18235:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18235:6:10"
																},
																"nativeSrc": "18235:58:10",
																"nodeType": "YulFunctionCall",
																"src": "18235:58:10"
															},
															"nativeSrc": "18235:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "18235:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18314:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18314:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18322:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18322:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18310:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18310:3:10"
																		},
																		"nativeSrc": "18310:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18310:15:10"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "18327:6:10",
																		"nodeType": "YulLiteral",
																		"src": "18327:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18303:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18303:6:10"
																},
																"nativeSrc": "18303:31:10",
																"nodeType": "YulFunctionCall",
																"src": "18303:31:10"
															},
															"nativeSrc": "18303:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "18303:31:10"
														}
													]
												},
												"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
												"nativeSrc": "18118:223:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18216:6:10",
														"nodeType": "YulTypedName",
														"src": "18216:6:10",
														"type": ""
													}
												],
												"src": "18118:223:10"
											},
											{
												"body": {
													"nativeSrc": "18493:220:10",
													"nodeType": "YulBlock",
													"src": "18493:220:10",
													"statements": [
														{
															"nativeSrc": "18503:74:10",
															"nodeType": "YulAssignment",
															"src": "18503:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18569:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18569:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18574:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18574:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18510:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18510:58:10"
																},
																"nativeSrc": "18510:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18510:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18503:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18503:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18675:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18675:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																	"nativeSrc": "18586:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18586:88:10"
																},
																"nativeSrc": "18586:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18586:93:10"
															},
															"nativeSrc": "18586:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18586:93:10"
														},
														{
															"nativeSrc": "18688:19:10",
															"nodeType": "YulAssignment",
															"src": "18688:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18699:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18699:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18704:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18704:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18695:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18695:3:10"
																},
																"nativeSrc": "18695:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18695:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18688:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18688:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18347:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18481:3:10",
														"nodeType": "YulTypedName",
														"src": "18481:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18489:3:10",
														"nodeType": "YulTypedName",
														"src": "18489:3:10",
														"type": ""
													}
												],
												"src": "18347:366:10"
											},
											{
												"body": {
													"nativeSrc": "18890:248:10",
													"nodeType": "YulBlock",
													"src": "18890:248:10",
													"statements": [
														{
															"nativeSrc": "18900:26:10",
															"nodeType": "YulAssignment",
															"src": "18900:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18912:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18912:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18923:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18923:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18908:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18908:3:10"
																},
																"nativeSrc": "18908:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18908:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18900:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18900:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18947:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18947:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18958:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18958:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18943:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18943:3:10"
																		},
																		"nativeSrc": "18943:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18943:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18966:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18966:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18972:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18972:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18962:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18962:3:10"
																		},
																		"nativeSrc": "18962:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18962:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18936:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18936:6:10"
																},
																"nativeSrc": "18936:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18936:47:10"
															},
															"nativeSrc": "18936:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18936:47:10"
														},
														{
															"nativeSrc": "18992:139:10",
															"nodeType": "YulAssignment",
															"src": "18992:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19126:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19126:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19000:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19000:124:10"
																},
																"nativeSrc": "19000:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19000:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18992:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18992:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18719:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18870:9:10",
														"nodeType": "YulTypedName",
														"src": "18870:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18885:4:10",
														"nodeType": "YulTypedName",
														"src": "18885:4:10",
														"type": ""
													}
												],
												"src": "18719:419:10"
											},
											{
												"body": {
													"nativeSrc": "19172:152:10",
													"nodeType": "YulBlock",
													"src": "19172:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19189:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19189:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19192:77:10",
																		"nodeType": "YulLiteral",
																		"src": "19192:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19182:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19182:6:10"
																},
																"nativeSrc": "19182:88:10",
																"nodeType": "YulFunctionCall",
																"src": "19182:88:10"
															},
															"nativeSrc": "19182:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "19182:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19286:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19286:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19289:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19289:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19279:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19279:6:10"
																},
																"nativeSrc": "19279:15:10",
																"nodeType": "YulFunctionCall",
																"src": "19279:15:10"
															},
															"nativeSrc": "19279:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "19279:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19310:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19310:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19313:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19313:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19303:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19303:6:10"
																},
																"nativeSrc": "19303:15:10",
																"nodeType": "YulFunctionCall",
																"src": "19303:15:10"
															},
															"nativeSrc": "19303:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "19303:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "19144:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "19144:180:10"
											},
											{
												"body": {
													"nativeSrc": "19375:149:10",
													"nodeType": "YulBlock",
													"src": "19375:149:10",
													"statements": [
														{
															"nativeSrc": "19385:25:10",
															"nodeType": "YulAssignment",
															"src": "19385:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19408:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19408:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19390:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "19390:17:10"
																},
																"nativeSrc": "19390:20:10",
																"nodeType": "YulFunctionCall",
																"src": "19390:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19385:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "19385:1:10"
																}
															]
														},
														{
															"nativeSrc": "19419:25:10",
															"nodeType": "YulAssignment",
															"src": "19419:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19442:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19442:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19424:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "19424:17:10"
																},
																"nativeSrc": "19424:20:10",
																"nodeType": "YulFunctionCall",
																"src": "19424:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19419:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "19419:1:10"
																}
															]
														},
														{
															"nativeSrc": "19453:17:10",
															"nodeType": "YulAssignment",
															"src": "19453:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19465:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19465:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19468:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19468:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "19461:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19461:3:10"
																},
																"nativeSrc": "19461:9:10",
																"nodeType": "YulFunctionCall",
																"src": "19461:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "19453:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19453:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19495:22:10",
																"nodeType": "YulBlock",
																"src": "19495:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19497:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "19497:16:10"
																			},
																			"nativeSrc": "19497:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "19497:18:10"
																		},
																		"nativeSrc": "19497:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "19497:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "19486:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19486:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "19492:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19492:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19483:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "19483:2:10"
																},
																"nativeSrc": "19483:11:10",
																"nodeType": "YulFunctionCall",
																"src": "19483:11:10"
															},
															"nativeSrc": "19480:37:10",
															"nodeType": "YulIf",
															"src": "19480:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "19330:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19361:1:10",
														"nodeType": "YulTypedName",
														"src": "19361:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19364:1:10",
														"nodeType": "YulTypedName",
														"src": "19364:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "19370:4:10",
														"nodeType": "YulTypedName",
														"src": "19370:4:10",
														"type": ""
													}
												],
												"src": "19330:194:10"
											},
											{
												"body": {
													"nativeSrc": "19636:69:10",
													"nodeType": "YulBlock",
													"src": "19636:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19658:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19658:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19666:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19666:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19654:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19654:3:10"
																		},
																		"nativeSrc": "19654:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19654:14:10"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "19670:27:10",
																		"nodeType": "YulLiteral",
																		"src": "19670:27:10",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19647:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19647:6:10"
																},
																"nativeSrc": "19647:51:10",
																"nodeType": "YulFunctionCall",
																"src": "19647:51:10"
															},
															"nativeSrc": "19647:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "19647:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
												"nativeSrc": "19530:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19628:6:10",
														"nodeType": "YulTypedName",
														"src": "19628:6:10",
														"type": ""
													}
												],
												"src": "19530:175:10"
											},
											{
												"body": {
													"nativeSrc": "19857:220:10",
													"nodeType": "YulBlock",
													"src": "19857:220:10",
													"statements": [
														{
															"nativeSrc": "19867:74:10",
															"nodeType": "YulAssignment",
															"src": "19867:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19933:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19933:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19938:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19938:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19874:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19874:58:10"
																},
																"nativeSrc": "19874:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19874:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19867:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19867:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20039:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20039:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																	"nativeSrc": "19950:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19950:88:10"
																},
																"nativeSrc": "19950:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19950:93:10"
															},
															"nativeSrc": "19950:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19950:93:10"
														},
														{
															"nativeSrc": "20052:19:10",
															"nodeType": "YulAssignment",
															"src": "20052:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20063:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20063:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20068:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20068:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20059:3:10"
																},
																"nativeSrc": "20059:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20059:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20052:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20052:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19711:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19845:3:10",
														"nodeType": "YulTypedName",
														"src": "19845:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19853:3:10",
														"nodeType": "YulTypedName",
														"src": "19853:3:10",
														"type": ""
													}
												],
												"src": "19711:366:10"
											},
											{
												"body": {
													"nativeSrc": "20254:248:10",
													"nodeType": "YulBlock",
													"src": "20254:248:10",
													"statements": [
														{
															"nativeSrc": "20264:26:10",
															"nodeType": "YulAssignment",
															"src": "20264:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20276:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20276:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20287:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20287:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20272:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20272:3:10"
																},
																"nativeSrc": "20272:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20272:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20264:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20264:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20311:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20311:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20322:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20322:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20307:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20307:3:10"
																		},
																		"nativeSrc": "20307:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20307:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20330:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20330:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20336:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20336:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20326:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20326:3:10"
																		},
																		"nativeSrc": "20326:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20326:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20300:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20300:6:10"
																},
																"nativeSrc": "20300:47:10",
																"nodeType": "YulFunctionCall",
																"src": "20300:47:10"
															},
															"nativeSrc": "20300:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "20300:47:10"
														},
														{
															"nativeSrc": "20356:139:10",
															"nodeType": "YulAssignment",
															"src": "20356:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20490:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20490:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20364:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20364:124:10"
																},
																"nativeSrc": "20364:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20364:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20356:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20356:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20083:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20234:9:10",
														"nodeType": "YulTypedName",
														"src": "20234:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20249:4:10",
														"nodeType": "YulTypedName",
														"src": "20249:4:10",
														"type": ""
													}
												],
												"src": "20083:419:10"
											},
											{
												"body": {
													"nativeSrc": "20614:131:10",
													"nodeType": "YulBlock",
													"src": "20614:131:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20636:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20636:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20644:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20644:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20632:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20632:3:10"
																		},
																		"nativeSrc": "20632:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20632:14:10"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nativeSrc": "20648:34:10",
																		"nodeType": "YulLiteral",
																		"src": "20648:34:10",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20625:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20625:6:10"
																},
																"nativeSrc": "20625:58:10",
																"nodeType": "YulFunctionCall",
																"src": "20625:58:10"
															},
															"nativeSrc": "20625:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "20625:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20704:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20704:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20712:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20712:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20700:3:10"
																		},
																		"nativeSrc": "20700:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20700:15:10"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nativeSrc": "20717:20:10",
																		"nodeType": "YulLiteral",
																		"src": "20717:20:10",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20693:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20693:6:10"
																},
																"nativeSrc": "20693:45:10",
																"nodeType": "YulFunctionCall",
																"src": "20693:45:10"
															},
															"nativeSrc": "20693:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "20693:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
												"nativeSrc": "20508:237:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20606:6:10",
														"nodeType": "YulTypedName",
														"src": "20606:6:10",
														"type": ""
													}
												],
												"src": "20508:237:10"
											},
											{
												"body": {
													"nativeSrc": "20897:220:10",
													"nodeType": "YulBlock",
													"src": "20897:220:10",
													"statements": [
														{
															"nativeSrc": "20907:74:10",
															"nodeType": "YulAssignment",
															"src": "20907:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20973:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20973:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20978:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20978:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20914:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20914:58:10"
																},
																"nativeSrc": "20914:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20914:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20907:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20907:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21079:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21079:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																	"nativeSrc": "20990:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20990:88:10"
																},
																"nativeSrc": "20990:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20990:93:10"
															},
															"nativeSrc": "20990:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20990:93:10"
														},
														{
															"nativeSrc": "21092:19:10",
															"nodeType": "YulAssignment",
															"src": "21092:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21103:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21103:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21108:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21108:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21099:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21099:3:10"
																},
																"nativeSrc": "21099:12:10",
																"nodeType": "YulFunctionCall",
																"src": "21099:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21092:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21092:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20751:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20885:3:10",
														"nodeType": "YulTypedName",
														"src": "20885:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20893:3:10",
														"nodeType": "YulTypedName",
														"src": "20893:3:10",
														"type": ""
													}
												],
												"src": "20751:366:10"
											},
											{
												"body": {
													"nativeSrc": "21294:248:10",
													"nodeType": "YulBlock",
													"src": "21294:248:10",
													"statements": [
														{
															"nativeSrc": "21304:26:10",
															"nodeType": "YulAssignment",
															"src": "21304:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21316:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21316:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21327:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21327:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21312:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21312:3:10"
																},
																"nativeSrc": "21312:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21312:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21304:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21304:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21351:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21351:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21362:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21362:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21347:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21347:3:10"
																		},
																		"nativeSrc": "21347:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21347:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21370:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "21370:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21376:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21376:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21366:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21366:3:10"
																		},
																		"nativeSrc": "21366:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21366:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21340:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21340:6:10"
																},
																"nativeSrc": "21340:47:10",
																"nodeType": "YulFunctionCall",
																"src": "21340:47:10"
															},
															"nativeSrc": "21340:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "21340:47:10"
														},
														{
															"nativeSrc": "21396:139:10",
															"nodeType": "YulAssignment",
															"src": "21396:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21530:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21530:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21404:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "21404:124:10"
																},
																"nativeSrc": "21404:131:10",
																"nodeType": "YulFunctionCall",
																"src": "21404:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21396:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21396:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21123:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21274:9:10",
														"nodeType": "YulTypedName",
														"src": "21274:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21289:4:10",
														"nodeType": "YulTypedName",
														"src": "21289:4:10",
														"type": ""
													}
												],
												"src": "21123:419:10"
											},
											{
												"body": {
													"nativeSrc": "21576:152:10",
													"nodeType": "YulBlock",
													"src": "21576:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21593:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21593:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21596:77:10",
																		"nodeType": "YulLiteral",
																		"src": "21596:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21586:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21586:6:10"
																},
																"nativeSrc": "21586:88:10",
																"nodeType": "YulFunctionCall",
																"src": "21586:88:10"
															},
															"nativeSrc": "21586:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "21586:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21690:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21690:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21693:4:10",
																		"nodeType": "YulLiteral",
																		"src": "21693:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21683:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21683:6:10"
																},
																"nativeSrc": "21683:15:10",
																"nodeType": "YulFunctionCall",
																"src": "21683:15:10"
															},
															"nativeSrc": "21683:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "21683:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21714:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21714:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21717:4:10",
																		"nodeType": "YulLiteral",
																		"src": "21717:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21707:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21707:6:10"
																},
																"nativeSrc": "21707:15:10",
																"nodeType": "YulFunctionCall",
																"src": "21707:15:10"
															},
															"nativeSrc": "21707:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "21707:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "21548:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "21548:180:10"
											},
											{
												"body": {
													"nativeSrc": "21792:40:10",
													"nodeType": "YulBlock",
													"src": "21792:40:10",
													"statements": [
														{
															"nativeSrc": "21803:22:10",
															"nodeType": "YulAssignment",
															"src": "21803:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21819:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21819:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21813:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "21813:5:10"
																},
																"nativeSrc": "21813:12:10",
																"nodeType": "YulFunctionCall",
																"src": "21813:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21803:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21803:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "21734:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21775:5:10",
														"nodeType": "YulTypedName",
														"src": "21775:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21785:6:10",
														"nodeType": "YulTypedName",
														"src": "21785:6:10",
														"type": ""
													}
												],
												"src": "21734:98:10"
											},
											{
												"body": {
													"nativeSrc": "21933:73:10",
													"nodeType": "YulBlock",
													"src": "21933:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21950:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21950:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21955:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21955:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21943:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21943:6:10"
																},
																"nativeSrc": "21943:19:10",
																"nodeType": "YulFunctionCall",
																"src": "21943:19:10"
															},
															"nativeSrc": "21943:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "21943:19:10"
														},
														{
															"nativeSrc": "21971:29:10",
															"nodeType": "YulAssignment",
															"src": "21971:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21990:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21990:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21995:4:10",
																		"nodeType": "YulLiteral",
																		"src": "21995:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21986:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21986:3:10"
																},
																"nativeSrc": "21986:14:10",
																"nodeType": "YulFunctionCall",
																"src": "21986:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "21971:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "21971:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "21838:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21905:3:10",
														"nodeType": "YulTypedName",
														"src": "21905:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "21910:6:10",
														"nodeType": "YulTypedName",
														"src": "21910:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "21921:11:10",
														"nodeType": "YulTypedName",
														"src": "21921:11:10",
														"type": ""
													}
												],
												"src": "21838:168:10"
											},
											{
												"body": {
													"nativeSrc": "22102:283:10",
													"nodeType": "YulBlock",
													"src": "22102:283:10",
													"statements": [
														{
															"nativeSrc": "22112:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "22112:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22158:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "22158:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "22126:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "22126:31:10"
																},
																"nativeSrc": "22126:38:10",
																"nodeType": "YulFunctionCall",
																"src": "22126:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "22116:6:10",
																	"nodeType": "YulTypedName",
																	"src": "22116:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22173:77:10",
															"nodeType": "YulAssignment",
															"src": "22173:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22238:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22238:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22243:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22243:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22180:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "22180:57:10"
																},
																"nativeSrc": "22180:70:10",
																"nodeType": "YulFunctionCall",
																"src": "22180:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22173:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22173:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22298:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "22298:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22305:4:10",
																				"nodeType": "YulLiteral",
																				"src": "22305:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22294:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22294:3:10"
																		},
																		"nativeSrc": "22294:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22294:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22312:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22312:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22317:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22317:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "22259:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "22259:34:10"
																},
																"nativeSrc": "22259:65:10",
																"nodeType": "YulFunctionCall",
																"src": "22259:65:10"
															},
															"nativeSrc": "22259:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "22259:65:10"
														},
														{
															"nativeSrc": "22333:46:10",
															"nodeType": "YulAssignment",
															"src": "22333:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22344:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22344:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "22371:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22371:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "22349:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "22349:21:10"
																		},
																		"nativeSrc": "22349:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22349:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22340:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22340:3:10"
																},
																"nativeSrc": "22340:39:10",
																"nodeType": "YulFunctionCall",
																"src": "22340:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22333:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22333:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22012:373:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22083:5:10",
														"nodeType": "YulTypedName",
														"src": "22083:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "22090:3:10",
														"nodeType": "YulTypedName",
														"src": "22090:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22098:3:10",
														"nodeType": "YulTypedName",
														"src": "22098:3:10",
														"type": ""
													}
												],
												"src": "22012:373:10"
											},
											{
												"body": {
													"nativeSrc": "22591:440:10",
													"nodeType": "YulBlock",
													"src": "22591:440:10",
													"statements": [
														{
															"nativeSrc": "22601:27:10",
															"nodeType": "YulAssignment",
															"src": "22601:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22613:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22613:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22624:3:10",
																		"nodeType": "YulLiteral",
																		"src": "22624:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22609:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22609:3:10"
																},
																"nativeSrc": "22609:19:10",
																"nodeType": "YulFunctionCall",
																"src": "22609:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22601:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22601:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22682:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22682:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22695:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22695:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22706:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22706:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22691:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22691:3:10"
																		},
																		"nativeSrc": "22691:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22691:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22638:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "22638:43:10"
																},
																"nativeSrc": "22638:71:10",
																"nodeType": "YulFunctionCall",
																"src": "22638:71:10"
															},
															"nativeSrc": "22638:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "22638:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22763:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22763:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22776:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22776:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22787:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22787:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22772:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22772:3:10"
																		},
																		"nativeSrc": "22772:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22772:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22719:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "22719:43:10"
																},
																"nativeSrc": "22719:72:10",
																"nodeType": "YulFunctionCall",
																"src": "22719:72:10"
															},
															"nativeSrc": "22719:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "22719:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22845:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22845:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22858:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22858:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22869:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22869:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22854:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22854:3:10"
																		},
																		"nativeSrc": "22854:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22854:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22801:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "22801:43:10"
																},
																"nativeSrc": "22801:72:10",
																"nodeType": "YulFunctionCall",
																"src": "22801:72:10"
															},
															"nativeSrc": "22801:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "22801:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22894:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22894:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22905:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22905:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22890:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22890:3:10"
																		},
																		"nativeSrc": "22890:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22890:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22914:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "22914:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22920:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22920:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22910:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22910:3:10"
																		},
																		"nativeSrc": "22910:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22910:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22883:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22883:6:10"
																},
																"nativeSrc": "22883:48:10",
																"nodeType": "YulFunctionCall",
																"src": "22883:48:10"
															},
															"nativeSrc": "22883:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "22883:48:10"
														},
														{
															"nativeSrc": "22940:84:10",
															"nodeType": "YulAssignment",
															"src": "22940:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "23010:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23010:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23019:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23019:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22948:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "22948:61:10"
																},
																"nativeSrc": "22948:76:10",
																"nodeType": "YulFunctionCall",
																"src": "22948:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22940:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22940:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "22391:640:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22539:9:10",
														"nodeType": "YulTypedName",
														"src": "22539:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "22551:6:10",
														"nodeType": "YulTypedName",
														"src": "22551:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22559:6:10",
														"nodeType": "YulTypedName",
														"src": "22559:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22567:6:10",
														"nodeType": "YulTypedName",
														"src": "22567:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22575:6:10",
														"nodeType": "YulTypedName",
														"src": "22575:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22586:4:10",
														"nodeType": "YulTypedName",
														"src": "22586:4:10",
														"type": ""
													}
												],
												"src": "22391:640:10"
											},
											{
												"body": {
													"nativeSrc": "23099:79:10",
													"nodeType": "YulBlock",
													"src": "23099:79:10",
													"statements": [
														{
															"nativeSrc": "23109:22:10",
															"nodeType": "YulAssignment",
															"src": "23109:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "23124:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23124:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23118:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "23118:5:10"
																},
																"nativeSrc": "23118:13:10",
																"nodeType": "YulFunctionCall",
																"src": "23118:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23109:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "23109:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23166:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "23166:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "23140:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "23140:25:10"
																},
																"nativeSrc": "23140:32:10",
																"nodeType": "YulFunctionCall",
																"src": "23140:32:10"
															},
															"nativeSrc": "23140:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "23140:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "23037:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "23077:6:10",
														"nodeType": "YulTypedName",
														"src": "23077:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23085:3:10",
														"nodeType": "YulTypedName",
														"src": "23085:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "23093:5:10",
														"nodeType": "YulTypedName",
														"src": "23093:5:10",
														"type": ""
													}
												],
												"src": "23037:141:10"
											},
											{
												"body": {
													"nativeSrc": "23260:273:10",
													"nodeType": "YulBlock",
													"src": "23260:273:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "23306:83:10",
																"nodeType": "YulBlock",
																"src": "23306:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "23308:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "23308:77:10"
																			},
																			"nativeSrc": "23308:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "23308:79:10"
																		},
																		"nativeSrc": "23308:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "23308:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23281:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "23281:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23290:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23290:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23277:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23277:3:10"
																		},
																		"nativeSrc": "23277:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23277:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23302:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23302:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "23273:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23273:3:10"
																},
																"nativeSrc": "23273:32:10",
																"nodeType": "YulFunctionCall",
																"src": "23273:32:10"
															},
															"nativeSrc": "23270:119:10",
															"nodeType": "YulIf",
															"src": "23270:119:10"
														},
														{
															"nativeSrc": "23399:127:10",
															"nodeType": "YulBlock",
															"src": "23399:127:10",
															"statements": [
																{
																	"nativeSrc": "23414:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "23414:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23428:1:10",
																		"nodeType": "YulLiteral",
																		"src": "23428:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "23418:6:10",
																			"nodeType": "YulTypedName",
																			"src": "23418:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "23443:73:10",
																	"nodeType": "YulAssignment",
																	"src": "23443:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "23488:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "23488:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "23499:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "23499:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23484:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "23484:3:10"
																				},
																				"nativeSrc": "23484:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "23484:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23508:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "23508:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "23453:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "23453:30:10"
																		},
																		"nativeSrc": "23453:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23453:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "23443:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "23443:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "23184:349:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23230:9:10",
														"nodeType": "YulTypedName",
														"src": "23230:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "23241:7:10",
														"nodeType": "YulTypedName",
														"src": "23241:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "23253:6:10",
														"nodeType": "YulTypedName",
														"src": "23253:6:10",
														"type": ""
													}
												],
												"src": "23184:349:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c80636352211e1161008a578063a22cb46511610064578063a22cb46514610221578063b88d4fde1461023d578063c87b56dd14610259578063e985e9c514610289576100cd565b80636352211e146101a357806370a08231146101d357806395d89b4114610203576100cd565b806301ffc9a7146100d157806306fdde0314610101578063081812fc1461011f578063095ea7b31461014f57806323b872dd1461016b57806342842e0e14610187575b5f80fd5b6100eb60048036038101906100e69190611489565b6102b9565b6040516100f891906114ce565b60405180910390f35b61010961039a565b6040516101169190611571565b60405180910390f35b610139600480360381019061013491906115c4565b610429565b604051610146919061162e565b60405180910390f35b61016960048036038101906101649190611671565b61046b565b005b610185600480360381019061018091906116af565b610581565b005b6101a1600480360381019061019c91906116af565b6105e1565b005b6101bd60048036038101906101b891906115c4565b610600565b6040516101ca919061162e565b60405180910390f35b6101ed60048036038101906101e891906116ff565b610684565b6040516101fa9190611739565b60405180910390f35b61020b610738565b6040516102189190611571565b60405180910390f35b61023b6004803603810190610236919061177c565b6107c8565b005b610257600480360381019061025291906118e6565b6107de565b005b610273600480360381019061026e91906115c4565b610840565b6040516102809190611571565b60405180910390f35b6102a3600480360381019061029e9190611966565b6108a5565b6040516102b091906114ce565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610393575061039282610933565b5b9050919050565b60605f80546103a8906119d1565b80601f01602080910402602001604051908101604052809291908181526020018280546103d4906119d1565b801561041f5780601f106103f65761010080835404028352916020019161041f565b820191905f5260205f20905b81548152906001019060200180831161040257829003601f168201915b5050505050905090565b5f6104338261099c565b60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f61047582610600565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90611a71565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105046109e7565b73ffffffffffffffffffffffffffffffffffffffff16148061053357506105328161052d6109e7565b6108a5565b5b610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056990611aff565b60405180910390fd5b61057c83836109ee565b505050565b61059261058c6109e7565b82610aa4565b6105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c890611b8d565b60405180910390fd5b6105dc838383610b38565b505050565b6105fb83838360405180602001604052805f8152506107de565b505050565b5f8061060b83610e2d565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290611bf5565b60405180910390fd5b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea90611c83565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060018054610747906119d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610773906119d1565b80156107be5780601f10610795576101008083540402835291602001916107be565b820191905f5260205f20905b8154815290600101906020018083116107a157829003601f168201915b5050505050905090565b6107da6107d36109e7565b8383610e66565b5050565b6107ef6107e96109e7565b83610aa4565b61082e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082590611b8d565b60405180910390fd5b61083a84848484610fcd565b50505050565b606061084b8261099c565b5f610854611029565b90505f8151116108725760405180602001604052805f81525061089d565b8061087c8461103f565b60405160200161088d929190611cdb565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109a581611109565b6109e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109db90611bf5565b60405180910390fd5b50565b5f33905090565b8160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a5e83610600565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f80610aaf83610600565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610af15750610af081856108a5565b5b80610b2f57508373ffffffffffffffffffffffffffffffffffffffff16610b1784610429565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b5882610600565b73ffffffffffffffffffffffffffffffffffffffff1614610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba590611d6e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1390611dfc565b60405180910390fd5b610c298383836001611149565b8273ffffffffffffffffffffffffffffffffffffffff16610c4982610600565b73ffffffffffffffffffffffffffffffffffffffff1614610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9690611d6e565b60405180910390fd5b60045f8281526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d1f9190611e47565b92505081905550600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508160025f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e28838383600161114f565b505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ed4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecb90611ec4565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fc091906114ce565b60405180910390a3505050565b610fd8848484610b38565b610fe484848484611155565b611023576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101a90611f52565b60405180910390fd5b50505050565b606060405180602001604052805f815250905090565b60605f600161104d846112d2565b0190505f8167ffffffffffffffff81111561106b5761106a6117c2565b5b6040519080825280601f01601f19166020018201604052801561109d5781602001600182028036833780820191505090505b5090505f82602001820190505b6001156110fe578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816110f3576110f2611f70565b5b0494505f85036110aa575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff1661112a83610e2d565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b5f808473ffffffffffffffffffffffffffffffffffffffff163b11156112c5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111996109e7565b8786866040518563ffffffff1660e01b81526004016111bb9493929190611fef565b6020604051808303815f875af19250505080156111f657506040513d601f19601f820116820180604052508101906111f3919061204d565b60015b611275573d805f8114611224576040519150601f19603f3d011682016040523d82523d5f602084013e611229565b606091505b505f81510361126d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126490611f52565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506112ca565b600190505b949350505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061132e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161132457611323611f70565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061136b576d04ee2d6d415b85acef8100000000838161136157611360611f70565b5b0492506020810190505b662386f26fc10000831061139a57662386f26fc1000083816113905761138f611f70565b5b0492506010810190505b6305f5e10083106113c3576305f5e10083816113b9576113b8611f70565b5b0492506008810190505b61271083106113e85761271083816113de576113dd611f70565b5b0492506004810190505b6064831061140b576064838161140157611400611f70565b5b0492506002810190505b600a831061141a576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61146881611434565b8114611472575f80fd5b50565b5f813590506114838161145f565b92915050565b5f6020828403121561149e5761149d61142c565b5b5f6114ab84828501611475565b91505092915050565b5f8115159050919050565b6114c8816114b4565b82525050565b5f6020820190506114e15f8301846114bf565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561151e578082015181840152602081019050611503565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611543826114e7565b61154d81856114f1565b935061155d818560208601611501565b61156681611529565b840191505092915050565b5f6020820190508181035f8301526115898184611539565b905092915050565b5f819050919050565b6115a381611591565b81146115ad575f80fd5b50565b5f813590506115be8161159a565b92915050565b5f602082840312156115d9576115d861142c565b5b5f6115e6848285016115b0565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611618826115ef565b9050919050565b6116288161160e565b82525050565b5f6020820190506116415f83018461161f565b92915050565b6116508161160e565b811461165a575f80fd5b50565b5f8135905061166b81611647565b92915050565b5f80604083850312156116875761168661142c565b5b5f6116948582860161165d565b92505060206116a5858286016115b0565b9150509250929050565b5f805f606084860312156116c6576116c561142c565b5b5f6116d38682870161165d565b93505060206116e48682870161165d565b92505060406116f5868287016115b0565b9150509250925092565b5f602082840312156117145761171361142c565b5b5f6117218482850161165d565b91505092915050565b61173381611591565b82525050565b5f60208201905061174c5f83018461172a565b92915050565b61175b816114b4565b8114611765575f80fd5b50565b5f8135905061177681611752565b92915050565b5f80604083850312156117925761179161142c565b5b5f61179f8582860161165d565b92505060206117b085828601611768565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6117f882611529565b810181811067ffffffffffffffff82111715611817576118166117c2565b5b80604052505050565b5f611829611423565b905061183582826117ef565b919050565b5f67ffffffffffffffff821115611854576118536117c2565b5b61185d82611529565b9050602081019050919050565b828183375f83830152505050565b5f61188a6118858461183a565b611820565b9050828152602081018484840111156118a6576118a56117be565b5b6118b184828561186a565b509392505050565b5f82601f8301126118cd576118cc6117ba565b5b81356118dd848260208601611878565b91505092915050565b5f805f80608085870312156118fe576118fd61142c565b5b5f61190b8782880161165d565b945050602061191c8782880161165d565b935050604061192d878288016115b0565b925050606085013567ffffffffffffffff81111561194e5761194d611430565b5b61195a878288016118b9565b91505092959194509250565b5f806040838503121561197c5761197b61142c565b5b5f6119898582860161165d565b925050602061199a8582860161165d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119e857607f821691505b6020821081036119fb576119fa6119a4565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f611a5b6021836114f1565b9150611a6682611a01565b604082019050919050565b5f6020820190508181035f830152611a8881611a4f565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f5f8201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b5f611ae9603d836114f1565b9150611af482611a8f565b604082019050919050565b5f6020820190508181035f830152611b1681611add565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e655f8201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b5f611b77602d836114f1565b9150611b8282611b1d565b604082019050919050565b5f6020820190508181035f830152611ba481611b6b565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e20494400000000000000005f82015250565b5f611bdf6018836114f1565b9150611bea82611bab565b602082019050919050565b5f6020820190508181035f830152611c0c81611bd3565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f7420612076615f8201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b5f611c6d6029836114f1565b9150611c7882611c13565b604082019050919050565b5f6020820190508181035f830152611c9a81611c61565b9050919050565b5f81905092915050565b5f611cb5826114e7565b611cbf8185611ca1565b9350611ccf818560208601611501565b80840191505092915050565b5f611ce68285611cab565b9150611cf28284611cab565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f7272656374205f8201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b5f611d586025836114f1565b9150611d6382611cfe565b604082019050919050565b5f6020820190508181035f830152611d8581611d4c565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611de66024836114f1565b9150611df182611d8c565b604082019050919050565b5f6020820190508181035f830152611e1381611dda565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e5182611591565b9150611e5c83611591565b9250828203905081811115611e7457611e73611e1a565b5b92915050565b7f4552433732313a20617070726f766520746f2063616c6c6572000000000000005f82015250565b5f611eae6019836114f1565b9150611eb982611e7a565b602082019050919050565b5f6020820190508181035f830152611edb81611ea2565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e2045524337323152655f8201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b5f611f3c6032836114f1565b9150611f4782611ee2565b604082019050919050565b5f6020820190508181035f830152611f6981611f30565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f611fc182611f9d565b611fcb8185611fa7565b9350611fdb818560208601611501565b611fe481611529565b840191505092915050565b5f6080820190506120025f83018761161f565b61200f602083018661161f565b61201c604083018561172a565b818103606083015261202e8184611fb7565b905095945050505050565b5f815190506120478161145f565b92915050565b5f602082840312156120625761206161142c565b5b5f61206f84828501612039565b9150509291505056fea2646970667358221220328745b2c844051082123d7c653f594acc687abe83cdb3e7bc56f50ea3e4cf6264736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x289 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x383 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0x933 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x402 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x475 DUP3 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP1 PUSH2 0x1A71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x504 PUSH2 0x9E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x533 JUMPI POP PUSH2 0x532 DUP2 PUSH2 0x52D PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST JUMPDEST PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57C DUP4 DUP4 PUSH2 0x9EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x592 PUSH2 0x58C PUSH2 0x9E7 JUMP JUMPDEST DUP3 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DC DUP4 DUP4 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x60B DUP4 PUSH2 0xE2D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EA SWAP1 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x747 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x773 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x795 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7DA PUSH2 0x7D3 PUSH2 0x9E7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE66 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x7E9 PUSH2 0x9E7 JUMP JUMPDEST DUP4 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x825 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83A DUP5 DUP5 DUP5 DUP5 PUSH2 0xFCD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x84B DUP3 PUSH2 0x99C JUMP JUMPDEST PUSH0 PUSH2 0x854 PUSH2 0x1029 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x89D JUMP JUMPDEST DUP1 PUSH2 0x87C DUP5 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x88D SWAP3 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A5 DUP2 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DB SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA5E DUP4 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAAF DUP4 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xAF1 JUMPI POP PUSH2 0xAF0 DUP2 DUP6 PUSH2 0x8A5 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB2F JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB17 DUP5 PUSH2 0x429 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB58 DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC13 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC29 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1149 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC49 DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC96 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE28 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x114F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECB SWAP1 PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFC0 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFD8 DUP5 DUP5 DUP5 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0xFE4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x1023 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101A SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x104D DUP5 PUSH2 0x12D2 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x106B JUMPI PUSH2 0x106A PUSH2 0x17C2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x109D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x10FE JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x10F3 JUMPI PUSH2 0x10F2 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x10AA JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x112A DUP4 PUSH2 0xE2D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12C5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1199 PUSH2 0x9E7 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11F6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F3 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1275 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1224 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x126D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x132E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1324 JUMPI PUSH2 0x1323 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x136B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1361 JUMPI PUSH2 0x1360 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x139A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1390 JUMPI PUSH2 0x138F PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x13C3 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13B9 JUMPI PUSH2 0x13B8 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x13E8 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x13DE JUMPI PUSH2 0x13DD PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x140B JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1401 JUMPI PUSH2 0x1400 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x141A JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1468 DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP2 EQ PUSH2 0x1472 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1483 DUP2 PUSH2 0x145F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149E JUMPI PUSH2 0x149D PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14AB DUP5 DUP3 DUP6 ADD PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C8 DUP2 PUSH2 0x14B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x151E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1503 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1543 DUP3 PUSH2 0x14E7 JUMP JUMPDEST PUSH2 0x154D DUP2 DUP6 PUSH2 0x14F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x155D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x1566 DUP2 PUSH2 0x1529 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1589 DUP2 DUP5 PUSH2 0x1539 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A3 DUP2 PUSH2 0x1591 JUMP JUMPDEST DUP2 EQ PUSH2 0x15AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BE DUP2 PUSH2 0x159A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E6 DUP5 DUP3 DUP6 ADD PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1618 DUP3 PUSH2 0x15EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1628 DUP2 PUSH2 0x160E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1641 PUSH0 DUP4 ADD DUP5 PUSH2 0x161F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1650 DUP2 PUSH2 0x160E JUMP JUMPDEST DUP2 EQ PUSH2 0x165A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x166B DUP2 PUSH2 0x1647 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1687 JUMPI PUSH2 0x1686 PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1694 DUP6 DUP3 DUP7 ADD PUSH2 0x165D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16A5 DUP6 DUP3 DUP7 ADD PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16C6 JUMPI PUSH2 0x16C5 PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D3 DUP7 DUP3 DUP8 ADD PUSH2 0x165D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16E4 DUP7 DUP3 DUP8 ADD PUSH2 0x165D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16F5 DUP7 DUP3 DUP8 ADD PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1714 JUMPI PUSH2 0x1713 PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1721 DUP5 DUP3 DUP6 ADD PUSH2 0x165D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1733 DUP2 PUSH2 0x1591 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x174C PUSH0 DUP4 ADD DUP5 PUSH2 0x172A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x175B DUP2 PUSH2 0x14B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1765 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1776 DUP2 PUSH2 0x1752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1792 JUMPI PUSH2 0x1791 PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x179F DUP6 DUP3 DUP7 ADD PUSH2 0x165D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17B0 DUP6 DUP3 DUP7 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17F8 DUP3 PUSH2 0x1529 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1817 JUMPI PUSH2 0x1816 PUSH2 0x17C2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1829 PUSH2 0x1423 JUMP JUMPDEST SWAP1 POP PUSH2 0x1835 DUP3 DUP3 PUSH2 0x17EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1853 PUSH2 0x17C2 JUMP JUMPDEST JUMPDEST PUSH2 0x185D DUP3 PUSH2 0x1529 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188A PUSH2 0x1885 DUP5 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1820 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x17BE JUMP JUMPDEST JUMPDEST PUSH2 0x18B1 DUP5 DUP3 DUP6 PUSH2 0x186A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18CD JUMPI PUSH2 0x18CC PUSH2 0x17BA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18DD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1878 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18FE JUMPI PUSH2 0x18FD PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x190B DUP8 DUP3 DUP9 ADD PUSH2 0x165D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x191C DUP8 DUP3 DUP9 ADD PUSH2 0x165D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x192D DUP8 DUP3 DUP9 ADD PUSH2 0x15B0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x194E JUMPI PUSH2 0x194D PUSH2 0x1430 JUMP JUMPDEST JUMPDEST PUSH2 0x195A DUP8 DUP3 DUP9 ADD PUSH2 0x18B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x197C JUMPI PUSH2 0x197B PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1989 DUP6 DUP3 DUP7 ADD PUSH2 0x165D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x199A DUP6 DUP3 DUP7 ADD PUSH2 0x165D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19E8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19FB JUMPI PUSH2 0x19FA PUSH2 0x19A4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A5B PUSH1 0x21 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A66 DUP3 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A88 DUP2 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE9 PUSH1 0x3D DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF4 DUP3 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B16 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B77 PUSH1 0x2D DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B82 DUP3 PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BA4 DUP2 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDF PUSH1 0x18 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEA DUP3 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C0C DUP2 PUSH2 0x1BD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6D PUSH1 0x29 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C78 DUP3 PUSH2 0x1C13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9A DUP2 PUSH2 0x1C61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB5 DUP3 PUSH2 0x14E7 JUMP JUMPDEST PUSH2 0x1CBF DUP2 DUP6 PUSH2 0x1CA1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1501 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE6 DUP3 DUP6 PUSH2 0x1CAB JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF2 DUP3 DUP5 PUSH2 0x1CAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D58 PUSH1 0x25 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D63 DUP3 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D85 DUP2 PUSH2 0x1D4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE6 PUSH1 0x24 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF1 DUP3 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E13 DUP2 PUSH2 0x1DDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E51 DUP3 PUSH2 0x1591 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5C DUP4 PUSH2 0x1591 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1E74 JUMPI PUSH2 0x1E73 PUSH2 0x1E1A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAE PUSH1 0x19 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB9 DUP3 PUSH2 0x1E7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EDB DUP2 PUSH2 0x1EA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3C PUSH1 0x32 DUP4 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F47 DUP3 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F69 DUP2 PUSH2 0x1F30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC1 DUP3 PUSH2 0x1F9D JUMP JUMPDEST PUSH2 0x1FCB DUP2 DUP6 PUSH2 0x1FA7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FDB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x1FE4 DUP2 PUSH2 0x1529 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2002 PUSH0 DUP4 ADD DUP8 PUSH2 0x161F JUMP JUMPDEST PUSH2 0x200F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x161F JUMP JUMPDEST PUSH2 0x201C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x172A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x202E DUP2 DUP5 PUSH2 0x1FB7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2047 DUP2 PUSH2 0x145F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2062 JUMPI PUSH2 0x2061 PUSH2 0x142C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x206F DUP5 DUP3 DUP6 ADD PUSH2 0x2039 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN DUP8 GASLIMIT 0xB2 0xC8 PREVRANDAO SDIV LT DUP3 SLT RETURNDATASIZE PUSH29 0x653F594ACC687ABE83CDB3E7BC56F50EA3E4CF6264736F6C6343000817 STOP CALLER ",
							"sourceMap": "595:16061:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2389:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3359:390;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4460:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4813:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2117:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1865:195;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2542:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4035:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5019:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2701;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4245:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1506:300;1608:4;1658:25;1643:40;;;:11;:40;;;;:104;;;;1714:33;1699:48;;;:11;:48;;;;1643:104;:156;;;;1763:36;1787:11;1763:23;:36::i;:::-;1643:156;1624:175;;1506:300;;;:::o;2389:89::-;2434:13;2466:5;2459:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2389:89;:::o;3810:158::-;3877:7;3896:23;3911:7;3896:14;:23::i;:::-;3937:15;:24;3953:7;3937:24;;;;;;;;;;;;;;;;;;;;;3930:31;;3810:158;;;:::o;3359:390::-;3430:13;3446:16;3454:7;3446;:16::i;:::-;3430:32;;3486:5;3480:11;;:2;:11;;;3472:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3577:5;3561:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3586:37;3603:5;3610:12;:10;:12::i;:::-;3586:16;:37::i;:::-;3561:62;3540:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3721:21;3730:2;3734:7;3721:8;:21::i;:::-;3420:329;3359:390;;:::o;4460:287::-;4610:41;4629:12;:10;:12::i;:::-;4643:7;4610:18;:41::i;:::-;4602:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4712:28;4722:4;4728:2;4732:7;4712:9;:28::i;:::-;4460:287;;;:::o;4813:140::-;4907:39;4924:4;4930:2;4934:7;4907:39;;;;;;;;;;;;:16;:39::i;:::-;4813:140;;;:::o;2117:210::-;2180:7;2199:13;2215:17;2224:7;2215:8;:17::i;:::-;2199:33;;2267:1;2250:19;;:5;:19;;;2242:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2315:5;2308:12;;;2117:210;;;:::o;1865:195::-;1928:7;1972:1;1955:19;;:5;:19;;;1947:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2037:9;:16;2047:5;2037:16;;;;;;;;;;;;;;;;2030:23;;1865:195;;;:::o;2542:93::-;2589:13;2621:7;2614:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2542:93;:::o;4035:144::-;4120:52;4139:12;:10;:12::i;:::-;4153:8;4163;4120:18;:52::i;:::-;4035:144;;:::o;5019:267::-;5140:41;5159:12;:10;:12::i;:::-;5173:7;5140:18;:41::i;:::-;5132:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:38;5255:4;5261:2;5265:7;5274:4;5241:13;:38::i;:::-;5019:267;;;;:::o;2701:::-;2765:13;2790:23;2805:7;2790:14;:23::i;:::-;2824:21;2848:10;:8;:10::i;:::-;2824:34;;2899:1;2881:7;2875:21;:25;:86;;;;;;;;;;;;;;;;;2927:7;2936:18;:7;:16;:18::i;:::-;2910:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2875:86;2868:93;;;2701:267;;;:::o;4245:153::-;4333:4;4356:18;:25;4375:5;4356:25;;;;;;;;;;;;;;;:35;4382:8;4356:35;;;;;;;;;;;;;;;;;;;;;;;;;4349:42;;4245:153;;;;:::o;732:146:6:-;808:4;846:25;831:40;;;:11;:40;;;;824:47;;732:146;;;:::o;12888:133:0:-;12969:16;12977:7;12969;:16::i;:::-;12961:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;12888:133;:::o;641:96:4:-;694:7;720:10;713:17;;641:96;:::o;12227:164:0:-;12328:2;12301:15;:24;12317:7;12301:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12376:7;12372:2;12345:39;;12354:16;12362:7;12354;:16::i;:::-;12345:39;;;;;;;;;;;;12227:164;;:::o;7225:254::-;7318:4;7334:13;7350:16;7358:7;7350;:16::i;:::-;7334:32;;7395:5;7384:16;;:7;:16;;;:52;;;;7404:32;7421:5;7428:7;7404:16;:32::i;:::-;7384:52;:87;;;;7464:7;7440:31;;:20;7452:7;7440:11;:20::i;:::-;:31;;;7384:87;7376:96;;;7225:254;;;;:::o;10996:1119::-;11113:4;11093:24;;:16;11101:7;11093;:16::i;:::-;:24;;;11085:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;11191:1;11177:16;;:2;:16;;;11169:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11245:42;11266:4;11272:2;11276:7;11285:1;11245:20;:42::i;:::-;11407:4;11387:24;;:16;11395:7;11387;:16::i;:::-;:24;;;11379:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;11522:15;:24;11538:7;11522:24;;;;;;;;;;;;11515:31;;;;;;;;;;;11729:1;11710:9;:15;11720:4;11710:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;11970:1;11953:9;:13;11963:2;11953:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12011:2;11992:7;:16;12000:7;11992:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12048:7;12044:2;12029:27;;12038:4;12029:27;;;;;;;;;;;;12067:41;12087:4;12093:2;12097:7;12106:1;12067:19;:41::i;:::-;10996:1119;;;:::o;6523:115::-;6589:7;6615;:16;6623:7;6615:16;;;;;;;;;;;;;;;;;;;;;6608:23;;6523:115;;;:::o;12527:277::-;12647:8;12638:17;;:5;:17;;;12630:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;12733:8;12695:18;:25;12714:5;12695:25;;;;;;;;;;;;;;;:35;12721:8;12695:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;12778:8;12756:41;;12771:5;12756:41;;;12788:8;12756:41;;;;;;:::i;:::-;;;;;;;;12527:277;;;:::o;6147:267::-;6259:28;6269:4;6275:2;6279:7;6259:9;:28::i;:::-;6305:47;6328:4;6334:2;6338:7;6347:4;6305:22;:47::i;:::-;6297:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6147:267;;;;:::o;3210:92::-;3261:13;3286:9;;;;;;;;;;;;;;3210:92;:::o;448:696:5:-;504:13;553:14;590:1;570:17;581:5;570:10;:17::i;:::-;:21;553:38;;605:20;639:6;628:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;605:41;;660:11;786:6;782:2;778:15;770:6;766:28;759:35;;821:280;828:4;821:280;;;852:5;;;;;;;;991:8;986:2;979:5;975:14;970:30;965:3;957:44;1045:2;1036:11;;;;;;:::i;:::-;;;;;1078:1;1069:5;:10;821:280;1065:21;821:280;1121:6;1114:13;;;;;448:696;;;:::o;6941:126:0:-;7006:4;7058:1;7029:31;;:17;7038:7;7029:8;:17::i;:::-;:31;;;;7022:38;;6941:126;;;:::o;15123:116::-;;;;;:::o;15945:115::-;;;;;:::o;13573:834::-;13722:4;13759:1;13742:2;:14;;;:18;13738:663;;;13796:2;13780:36;;;13817:12;:10;:12::i;:::-;13831:4;13837:7;13846:4;13780:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;13776:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14035:1;14018:6;:13;:18;14014:321;;14060:60;;;;;;;;;;:::i;:::-;;;;;;;;14014:321;14287:6;14281:13;14272:6;14268:2;14264:15;14257:38;13776:573;13911:41;;;13901:51;;;:6;:51;;;;13894:58;;;;;13738:663;14386:4;14379:11;;13573:834;;;;;;;:::o;12161:916:8:-;12214:7;12233:14;12250:1;12233:18;;12298:8;12289:5;:17;12285:103;;12335:8;12326:17;;;;;;:::i;:::-;;;;;12371:2;12361:12;;;;12285:103;12414:8;12405:5;:17;12401:103;;12451:8;12442:17;;;;;;:::i;:::-;;;;;12487:2;12477:12;;;;12401:103;12530:8;12521:5;:17;12517:103;;12567:8;12558:17;;;;;;:::i;:::-;;;;;12603:2;12593:12;;;;12517:103;12646:7;12637:5;:16;12633:100;;12682:7;12673:16;;;;;;:::i;:::-;;;;;12717:1;12707:11;;;;12633:100;12759:7;12750:5;:16;12746:100;;12795:7;12786:16;;;;;;:::i;:::-;;;;;12830:1;12820:11;;;;12746:100;12872:7;12863:5;:16;12859:100;;12908:7;12899:16;;;;;;:::i;:::-;;;;;12943:1;12933:11;;;;12859:100;12985:7;12976:5;:16;12972:66;;13022:1;13012:11;;;;12972:66;13064:6;13057:13;;;12161:916;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:220::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:3;11187:2;11179:6;11175:15;11168:28;10983:220;:::o;11209:366::-;11351:3;11372:67;11436:2;11431:3;11372:67;:::i;:::-;11365:74;;11448:93;11537:3;11448:93;:::i;:::-;11566:2;11561:3;11557:12;11550:19;;11209:366;;;:::o;11581:419::-;11747:4;11785:2;11774:9;11770:18;11762:26;;11834:9;11828:4;11824:20;11820:1;11809:9;11805:17;11798:47;11862:131;11988:4;11862:131;:::i;:::-;11854:139;;11581:419;;;:::o;12006:248::-;12146:34;12142:1;12134:6;12130:14;12123:58;12215:31;12210:2;12202:6;12198:15;12191:56;12006:248;:::o;12260:366::-;12402:3;12423:67;12487:2;12482:3;12423:67;:::i;:::-;12416:74;;12499:93;12588:3;12499:93;:::i;:::-;12617:2;12612:3;12608:12;12601:19;;12260:366;;;:::o;12632:419::-;12798:4;12836:2;12825:9;12821:18;12813:26;;12885:9;12879:4;12875:20;12871:1;12860:9;12856:17;12849:47;12913:131;13039:4;12913:131;:::i;:::-;12905:139;;12632:419;;;:::o;13057:232::-;13197:34;13193:1;13185:6;13181:14;13174:58;13266:15;13261:2;13253:6;13249:15;13242:40;13057:232;:::o;13295:366::-;13437:3;13458:67;13522:2;13517:3;13458:67;:::i;:::-;13451:74;;13534:93;13623:3;13534:93;:::i;:::-;13652:2;13647:3;13643:12;13636:19;;13295:366;;;:::o;13667:419::-;13833:4;13871:2;13860:9;13856:18;13848:26;;13920:9;13914:4;13910:20;13906:1;13895:9;13891:17;13884:47;13948:131;14074:4;13948:131;:::i;:::-;13940:139;;13667:419;;;:::o;14092:174::-;14232:26;14228:1;14220:6;14216:14;14209:50;14092:174;:::o;14272:366::-;14414:3;14435:67;14499:2;14494:3;14435:67;:::i;:::-;14428:74;;14511:93;14600:3;14511:93;:::i;:::-;14629:2;14624:3;14620:12;14613:19;;14272:366;;;:::o;14644:419::-;14810:4;14848:2;14837:9;14833:18;14825:26;;14897:9;14891:4;14887:20;14883:1;14872:9;14868:17;14861:47;14925:131;15051:4;14925:131;:::i;:::-;14917:139;;14644:419;;;:::o;15069:228::-;15209:34;15205:1;15197:6;15193:14;15186:58;15278:11;15273:2;15265:6;15261:15;15254:36;15069:228;:::o;15303:366::-;15445:3;15466:67;15530:2;15525:3;15466:67;:::i;:::-;15459:74;;15542:93;15631:3;15542:93;:::i;:::-;15660:2;15655:3;15651:12;15644:19;;15303:366;;;:::o;15675:419::-;15841:4;15879:2;15868:9;15864:18;15856:26;;15928:9;15922:4;15918:20;15914:1;15903:9;15899:17;15892:47;15956:131;16082:4;15956:131;:::i;:::-;15948:139;;15675:419;;;:::o;16100:148::-;16202:11;16239:3;16224:18;;16100:148;;;;:::o;16254:390::-;16360:3;16388:39;16421:5;16388:39;:::i;:::-;16443:89;16525:6;16520:3;16443:89;:::i;:::-;16436:96;;16541:65;16599:6;16594:3;16587:4;16580:5;16576:16;16541:65;:::i;:::-;16631:6;16626:3;16622:16;16615:23;;16364:280;16254:390;;;;:::o;16650:435::-;16830:3;16852:95;16943:3;16934:6;16852:95;:::i;:::-;16845:102;;16964:95;17055:3;17046:6;16964:95;:::i;:::-;16957:102;;17076:3;17069:10;;16650:435;;;;;:::o;17091:224::-;17231:34;17227:1;17219:6;17215:14;17208:58;17300:7;17295:2;17287:6;17283:15;17276:32;17091:224;:::o;17321:366::-;17463:3;17484:67;17548:2;17543:3;17484:67;:::i;:::-;17477:74;;17560:93;17649:3;17560:93;:::i;:::-;17678:2;17673:3;17669:12;17662:19;;17321:366;;;:::o;17693:419::-;17859:4;17897:2;17886:9;17882:18;17874:26;;17946:9;17940:4;17936:20;17932:1;17921:9;17917:17;17910:47;17974:131;18100:4;17974:131;:::i;:::-;17966:139;;17693:419;;;:::o;18118:223::-;18258:34;18254:1;18246:6;18242:14;18235:58;18327:6;18322:2;18314:6;18310:15;18303:31;18118:223;:::o;18347:366::-;18489:3;18510:67;18574:2;18569:3;18510:67;:::i;:::-;18503:74;;18586:93;18675:3;18586:93;:::i;:::-;18704:2;18699:3;18695:12;18688:19;;18347:366;;;:::o;18719:419::-;18885:4;18923:2;18912:9;18908:18;18900:26;;18972:9;18966:4;18962:20;18958:1;18947:9;18943:17;18936:47;19000:131;19126:4;19000:131;:::i;:::-;18992:139;;18719:419;;;:::o;19144:180::-;19192:77;19189:1;19182:88;19289:4;19286:1;19279:15;19313:4;19310:1;19303:15;19330:194;19370:4;19390:20;19408:1;19390:20;:::i;:::-;19385:25;;19424:20;19442:1;19424:20;:::i;:::-;19419:25;;19468:1;19465;19461:9;19453:17;;19492:1;19486:4;19483:11;19480:37;;;19497:18;;:::i;:::-;19480:37;19330:194;;;;:::o;19530:175::-;19670:27;19666:1;19658:6;19654:14;19647:51;19530:175;:::o;19711:366::-;19853:3;19874:67;19938:2;19933:3;19874:67;:::i;:::-;19867:74;;19950:93;20039:3;19950:93;:::i;:::-;20068:2;20063:3;20059:12;20052:19;;19711:366;;;:::o;20083:419::-;20249:4;20287:2;20276:9;20272:18;20264:26;;20336:9;20330:4;20326:20;20322:1;20311:9;20307:17;20300:47;20364:131;20490:4;20364:131;:::i;:::-;20356:139;;20083:419;;;:::o;20508:237::-;20648:34;20644:1;20636:6;20632:14;20625:58;20717:20;20712:2;20704:6;20700:15;20693:45;20508:237;:::o;20751:366::-;20893:3;20914:67;20978:2;20973:3;20914:67;:::i;:::-;20907:74;;20990:93;21079:3;20990:93;:::i;:::-;21108:2;21103:3;21099:12;21092:19;;20751:366;;;:::o;21123:419::-;21289:4;21327:2;21316:9;21312:18;21304:26;;21376:9;21370:4;21366:20;21362:1;21351:9;21347:17;21340:47;21404:131;21530:4;21404:131;:::i;:::-;21396:139;;21123:419;;;:::o;21548:180::-;21596:77;21593:1;21586:88;21693:4;21690:1;21683:15;21717:4;21714:1;21707:15;21734:98;21785:6;21819:5;21813:12;21803:22;;21734:98;;;:::o;21838:168::-;21921:11;21955:6;21950:3;21943:19;21995:4;21990:3;21986:14;21971:29;;21838:168;;;;:::o;22012:373::-;22098:3;22126:38;22158:5;22126:38;:::i;:::-;22180:70;22243:6;22238:3;22180:70;:::i;:::-;22173:77;;22259:65;22317:6;22312:3;22305:4;22298:5;22294:16;22259:65;:::i;:::-;22349:29;22371:6;22349:29;:::i;:::-;22344:3;22340:39;22333:46;;22102:283;22012:373;;;;:::o;22391:640::-;22586:4;22624:3;22613:9;22609:19;22601:27;;22638:71;22706:1;22695:9;22691:17;22682:6;22638:71;:::i;:::-;22719:72;22787:2;22776:9;22772:18;22763:6;22719:72;:::i;:::-;22801;22869:2;22858:9;22854:18;22845:6;22801:72;:::i;:::-;22920:9;22914:4;22910:20;22905:2;22894:9;22890:18;22883:48;22948:76;23019:4;23010:6;22948:76;:::i;:::-;22940:84;;22391:640;;;;;;;:::o;23037:141::-;23093:5;23124:6;23118:13;23109:22;;23140:32;23166:5;23140:32;:::i;:::-;23037:141;;;;:::o;23184:349::-;23253:6;23302:2;23290:9;23281:7;23277:23;23273:32;23270:119;;;23308:79;;:::i;:::-;23270:119;23428:1;23453:63;23508:7;23499:6;23488:9;23484:22;23453:63;:::i;:::-;23443:73;;23399:127;23184:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1673200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2909",
								"getApproved(uint256)": "5259",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "3006",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"tokenURI(uint256)": "3437",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2307",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "2244",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 595,
									"end": 16656,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1326,
									"end": 1439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1400,
									"end": 1405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1392,
									"end": 1397,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1392,
									"end": 1405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1392,
									"end": 1405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1392,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1392,
									"end": 1405,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1392,
									"end": 1405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1392,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1392,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1392,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1392,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1392,
									"end": 1405,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1425,
									"end": 1432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1415,
									"end": 1422,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1415,
									"end": 1432,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1415,
									"end": 1432,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1415,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1415,
									"end": 1432,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1415,
									"end": 1432,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1415,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1415,
									"end": 1432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1415,
									"end": 1432,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1415,
									"end": 1432,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1415,
									"end": 1432,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 595,
									"end": 16656,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220328745b2c844051082123d7c653f594acc687abe83cdb3e7bc56f50ea3e4cf6264736f6c63430008170033",
									".code": [
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 16656,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1506,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1506,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2389,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2389,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3810,
											"end": 3968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3810,
											"end": 3968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3810,
											"end": 3968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3359,
											"end": 3749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3359,
											"end": 3749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4460,
											"end": 4747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4460,
											"end": 4747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4813,
											"end": 4953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4813,
											"end": 4953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2117,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2117,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2117,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1865,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1865,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1865,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2542,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2542,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4035,
											"end": 4179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4035,
											"end": 4179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5019,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5019,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2701,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2701,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2701,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4245,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4245,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4245,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1643,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1643,
											"end": 1683,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1643,
											"end": 1683,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1683,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1643,
											"end": 1747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1699,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1699,
											"end": 1747,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1699,
											"end": 1747,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1747,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1747,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1643,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1643,
											"end": 1799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1787,
											"end": 1798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1763,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1799,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1643,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2459,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2459,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3911,
											"end": 3918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3896,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3952,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3937,
											"end": 3961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3454,
											"end": 3461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3446,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3462,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3446,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3472,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3472,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3561,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3561,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3573,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3561,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3561,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3603,
											"end": 3608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3610,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3610,
											"end": 3622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3586,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3561,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3540,
											"end": 3710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3540,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3730,
											"end": 3732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3721,
											"end": 3742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3742,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3721,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3420,
											"end": 3749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4629,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4629,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4643,
											"end": 4650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4610,
											"end": 4651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4651,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4610,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4602,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4602,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4732,
											"end": 4739,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4712,
											"end": 4740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4740,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4712,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4924,
											"end": 4928,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 4932,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4907,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2224,
											"end": 2231,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2215,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2232,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2215,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2250,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2250,
											"end": 2269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2242,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2242,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1955,
											"end": 1974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1955,
											"end": 1974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1974,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1947,
											"end": 2020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1947,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2052,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2053,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2614,
											"end": 2628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2614,
											"end": 2628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4120,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4139,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4139,
											"end": 4151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4161,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4163,
											"end": 4171,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4120,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4120,
											"end": 4172,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4120,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5159,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5159,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5159,
											"end": 5171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5171,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5159,
											"end": 5171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5173,
											"end": 5180,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5140,
											"end": 5181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5181,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5140,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5132,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5132,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5255,
											"end": 5259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5261,
											"end": 5263,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5272,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5274,
											"end": 5278,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5241,
											"end": 5279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5279,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5241,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5019,
											"end": 5286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2778,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2805,
											"end": 2812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2790,
											"end": 2813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2848,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2848,
											"end": 2858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2858,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2848,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2900,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2936,
											"end": 2943,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2936,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2910,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 2955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4374,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4380,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 878,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 732,
											"end": 878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 808,
											"end": 812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 871,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 831,
											"end": 871,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 831,
											"end": 871,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 831,
											"end": 871,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 831,
											"end": 842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 831,
											"end": 871,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 831,
											"end": 871,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 831,
											"end": 871,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 831,
											"end": 871,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 824,
											"end": 871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 732,
											"end": 878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 732,
											"end": 878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 732,
											"end": 878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 732,
											"end": 878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12888,
											"end": 13021,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12888,
											"end": 13021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12969,
											"end": 12985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12977,
											"end": 12984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12969,
											"end": 12976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 12969,
											"end": 12985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12969,
											"end": 12985,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12969,
											"end": 12985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 12961,
											"end": 13014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 12961,
											"end": 13014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 13021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 13021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 737,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 641,
											"end": 737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 694,
											"end": 701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 713,
											"end": 730,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 713,
											"end": 730,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 737,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 641,
											"end": 737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12227,
											"end": 12391,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12227,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12316,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12317,
											"end": 12324,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12354,
											"end": 12370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 12362,
											"end": 12369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12354,
											"end": 12361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12354,
											"end": 12370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12354,
											"end": 12370,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 12354,
											"end": 12370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12384,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7225,
											"end": 7479,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7225,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7350,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7350,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7350,
											"end": 7366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7350,
											"end": 7366,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7350,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7334,
											"end": 7366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7334,
											"end": 7366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7384,
											"end": 7400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7391,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7384,
											"end": 7400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7400,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7384,
											"end": 7436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7404,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7421,
											"end": 7426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7435,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7404,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7404,
											"end": 7436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7404,
											"end": 7436,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7404,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7436,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7384,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7384,
											"end": 7471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7440,
											"end": 7471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7452,
											"end": 7459,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7440,
											"end": 7460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7460,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7440,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7440,
											"end": 7471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7471,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7471,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7384,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7376,
											"end": 7472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7376,
											"end": 7472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7376,
											"end": 7472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7225,
											"end": 7479,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7225,
											"end": 7479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7225,
											"end": 7479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7225,
											"end": 7479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7225,
											"end": 7479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 12115,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10996,
											"end": 12115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11093,
											"end": 11117,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11093,
											"end": 11117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11093,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11101,
											"end": 11108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11093,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11093,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11093,
											"end": 11109,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11093,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11093,
											"end": 11117,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11093,
											"end": 11117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11093,
											"end": 11117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11085,
											"end": 11159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 11085,
											"end": 11159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11191,
											"end": 11192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11177,
											"end": 11193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11179,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11177,
											"end": 11193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 11169,
											"end": 11234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 11169,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11245,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 11266,
											"end": 11270,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11276,
											"end": 11283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11286,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11245,
											"end": 11265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 11245,
											"end": 11287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11245,
											"end": 11287,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 11245,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11387,
											"end": 11411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11387,
											"end": 11411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11387,
											"end": 11403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 11395,
											"end": 11402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11387,
											"end": 11394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11387,
											"end": 11403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11387,
											"end": 11403,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 11387,
											"end": 11403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11387,
											"end": 11411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11387,
											"end": 11411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11387,
											"end": 11411,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11379,
											"end": 11453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 11379,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11538,
											"end": 11545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11515,
											"end": 11546,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11515,
											"end": 11546,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11515,
											"end": 11546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11546,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11546,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11729,
											"end": 11730,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11710,
											"end": 11719,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11720,
											"end": 11724,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 11710,
											"end": 11730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 11971,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11953,
											"end": 11962,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11963,
											"end": 11965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 11999,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12000,
											"end": 12007,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12048,
											"end": 12055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12044,
											"end": 12046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12038,
											"end": 12042,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12056,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12067,
											"end": 12108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 12087,
											"end": 12091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12093,
											"end": 12095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12106,
											"end": 12107,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12067,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 12067,
											"end": 12108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12067,
											"end": 12108,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 12067,
											"end": 12108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 12115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 12115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 12115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 12115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6523,
											"end": 6638,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6523,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6589,
											"end": 6596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6622,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6623,
											"end": 6630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6523,
											"end": 6638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6523,
											"end": 6638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6523,
											"end": 6638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6523,
											"end": 6638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12527,
											"end": 12804,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12527,
											"end": 12804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12647,
											"end": 12655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12638,
											"end": 12655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12643,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12638,
											"end": 12655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 12630,
											"end": 12685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 12630,
											"end": 12685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12733,
											"end": 12741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12713,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12714,
											"end": 12719,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12695,
											"end": 12720,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12721,
											"end": 12729,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12778,
											"end": 12786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12771,
											"end": 12776,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12788,
											"end": 12796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12756,
											"end": 12797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12756,
											"end": 12797,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12527,
											"end": 12804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12527,
											"end": 12804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12527,
											"end": 12804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12527,
											"end": 12804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6147,
											"end": 6414,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6147,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6259,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6269,
											"end": 6273,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6275,
											"end": 6277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6279,
											"end": 6286,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6259,
											"end": 6268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6259,
											"end": 6287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6259,
											"end": 6287,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6259,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6334,
											"end": 6336,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6338,
											"end": 6345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6305,
											"end": 6352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6352,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6305,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6297,
											"end": 6407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6297,
											"end": 6407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6147,
											"end": 6414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6147,
											"end": 6414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6147,
											"end": 6414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6147,
											"end": 6414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6147,
											"end": 6414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3210,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 1144,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 448,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 504,
											"end": 517,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 553,
											"end": 567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 591,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 581,
											"end": 586,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 570,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 570,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 570,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 570,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 570,
											"end": 591,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 553,
											"end": 591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 605,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 645,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 628,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 628,
											"end": 646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 605,
											"end": 646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 605,
											"end": 646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 660,
											"end": 671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 792,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 770,
											"end": 776,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 766,
											"end": 794,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 759,
											"end": 794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 759,
											"end": 794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 828,
											"end": 832,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 852,
											"end": 857,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 852,
											"end": 857,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 852,
											"end": 857,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 852,
											"end": 857,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 852,
											"end": 857,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 852,
											"end": 857,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 852,
											"end": 857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 852,
											"end": 857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 991,
											"end": 999,
											"name": "PUSH",
											"source": 5,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 986,
											"end": 988,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 979,
											"end": 984,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 975,
											"end": 989,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1000,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 965,
											"end": 968,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1001,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1036,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1079,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1069,
											"end": 1079,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1065,
											"end": 1086,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1127,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 448,
											"end": 1144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 448,
											"end": 1144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 1144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 448,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6941,
											"end": 7067,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6941,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7058,
											"end": 7059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7029,
											"end": 7060,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7029,
											"end": 7060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7029,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 7038,
											"end": 7045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7029,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 7029,
											"end": 7046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7029,
											"end": 7046,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 7029,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7029,
											"end": 7060,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7029,
											"end": 7060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7029,
											"end": 7060,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7029,
											"end": 7060,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6941,
											"end": 7067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6941,
											"end": 7067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6941,
											"end": 7067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6941,
											"end": 7067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 15239,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15123,
											"end": 15239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 15239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 15239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 15239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 15239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 15239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15945,
											"end": 16060,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 15945,
											"end": 16060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15945,
											"end": 16060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15945,
											"end": 16060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15945,
											"end": 16060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15945,
											"end": 16060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15945,
											"end": 16060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 14407,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 13573,
											"end": 14407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13759,
											"end": 13760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13742,
											"end": 13744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13742,
											"end": 13756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13742,
											"end": 13756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13742,
											"end": 13756,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 13742,
											"end": 13760,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13738,
											"end": 14401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13738,
											"end": 14401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 13738,
											"end": 14401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13796,
											"end": 13798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13816,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13780,
											"end": 13816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13816,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 13817,
											"end": 13829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 13817,
											"end": 13827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 13817,
											"end": 13829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13817,
											"end": 13829,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 13817,
											"end": 13829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13831,
											"end": 13835,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13844,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13850,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 13780,
											"end": 13851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 13780,
											"end": 13851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 13780,
											"end": 13851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14018,
											"end": 14024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14018,
											"end": 14031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14018,
											"end": 14036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 14014,
											"end": 14335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 14060,
											"end": 14120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14335,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 14014,
											"end": 14335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14287,
											"end": 14293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14272,
											"end": 14278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14268,
											"end": 14270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14264,
											"end": 14279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14257,
											"end": 14295,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 13776,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13952,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 13911,
											"end": 13952,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13911,
											"end": 13952,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13901,
											"end": 13952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13901,
											"end": 13952,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13901,
											"end": 13952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13901,
											"end": 13907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13901,
											"end": 13952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13901,
											"end": 13952,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13901,
											"end": 13952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13901,
											"end": 13952,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 13894,
											"end": 13952,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13738,
											"end": 14401,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 13738,
											"end": 14401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14386,
											"end": 14390,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14379,
											"end": 14390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 14407,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 13573,
											"end": 14407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 14407,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 14407,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 14407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 14407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 14407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 14407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 14407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 13077,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 12161,
											"end": 13077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12214,
											"end": 12221,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12233,
											"end": 12247,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12250,
											"end": 12251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12233,
											"end": 12251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12233,
											"end": 12251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12298,
											"end": 12306,
											"name": "PUSH",
											"source": 8,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12289,
											"end": 12294,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 12285,
											"end": 12388,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12335,
											"end": 12343,
											"name": "PUSH",
											"source": 8,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 12326,
											"end": 12343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12326,
											"end": 12343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12371,
											"end": 12373,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12361,
											"end": 12373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12361,
											"end": 12373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12361,
											"end": 12373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12361,
											"end": 12373,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12388,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 12285,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12414,
											"end": 12422,
											"name": "PUSH",
											"source": 8,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12405,
											"end": 12410,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12405,
											"end": 12422,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12401,
											"end": 12504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 12401,
											"end": 12504,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12451,
											"end": 12459,
											"name": "PUSH",
											"source": 8,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 12442,
											"end": 12459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12487,
											"end": 12489,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12477,
											"end": 12489,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12477,
											"end": 12489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12477,
											"end": 12489,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12477,
											"end": 12489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12401,
											"end": 12504,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 12401,
											"end": 12504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12530,
											"end": 12538,
											"name": "PUSH",
											"source": 8,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12521,
											"end": 12526,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12521,
											"end": 12538,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 12517,
											"end": 12620,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12567,
											"end": 12575,
											"name": "PUSH",
											"source": 8,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 12558,
											"end": 12575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12605,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 12593,
											"end": 12605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12620,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 12517,
											"end": 12620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12646,
											"end": 12653,
											"name": "PUSH",
											"source": 8,
											"value": "5F5E100"
										},
										{
											"begin": 12637,
											"end": 12642,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12637,
											"end": 12653,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 12633,
											"end": 12733,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12682,
											"end": 12689,
											"name": "PUSH",
											"source": 8,
											"value": "5F5E100"
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 12673,
											"end": 12689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 12689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12717,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 12707,
											"end": 12718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12707,
											"end": 12718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12707,
											"end": 12718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12707,
											"end": 12718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12733,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 12633,
											"end": 12733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12759,
											"end": 12766,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 12750,
											"end": 12755,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12750,
											"end": 12766,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12746,
											"end": 12846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 12746,
											"end": 12846,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12795,
											"end": 12802,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 12786,
											"end": 12802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12830,
											"end": 12831,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12820,
											"end": 12831,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12820,
											"end": 12831,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12820,
											"end": 12831,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12820,
											"end": 12831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12746,
											"end": 12846,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 12746,
											"end": 12846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12879,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12863,
											"end": 12868,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12863,
											"end": 12879,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12859,
											"end": 12959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 12859,
											"end": 12959,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12908,
											"end": 12915,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 12899,
											"end": 12915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12899,
											"end": 12915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12943,
											"end": 12944,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 12933,
											"end": 12944,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12933,
											"end": 12944,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12933,
											"end": 12944,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12933,
											"end": 12944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12859,
											"end": 12959,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 12859,
											"end": 12959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12985,
											"end": 12992,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 12976,
											"end": 12981,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12976,
											"end": 12992,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12972,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 12972,
											"end": 13038,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13022,
											"end": 13023,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13012,
											"end": 13023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13012,
											"end": 13023,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13012,
											"end": 13023,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13012,
											"end": 13023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12972,
											"end": 13038,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 12972,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13064,
											"end": 13070,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13057,
											"end": 13070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13057,
											"end": 13070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13057,
											"end": 13070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12161,
											"end": 13077,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12161,
											"end": 13077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12161,
											"end": 13077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12161,
											"end": 13077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11123,
											"end": 11157,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 11119,
											"end": 11120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11100,
											"end": 11158,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11192,
											"end": 11195,
											"name": "PUSH",
											"source": 10,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11187,
											"end": 11189,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11179,
											"end": 11185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11175,
											"end": 11190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11168,
											"end": 11196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11351,
											"end": 11354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11436,
											"end": 11438,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 11431,
											"end": 11434,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 11372,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11365,
											"end": 11439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11365,
											"end": 11439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11537,
											"end": 11540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 11448,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11566,
											"end": 11568,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11557,
											"end": 11569,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11550,
											"end": 11569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11550,
											"end": 11569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11747,
											"end": 11751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11785,
											"end": 11787,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11834,
											"end": 11843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11824,
											"end": 11844,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 11821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11809,
											"end": 11818,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11805,
											"end": 11822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 11845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 11988,
											"end": 11992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 11862,
											"end": 11993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 12000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12146,
											"end": 12180,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 12142,
											"end": 12143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12130,
											"end": 12144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12123,
											"end": 12181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12215,
											"end": 12246,
											"name": "PUSH",
											"source": 10,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 12210,
											"end": 12212,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12202,
											"end": 12208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12198,
											"end": 12213,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12191,
											"end": 12247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12006,
											"end": 12254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12402,
											"end": 12405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 12487,
											"end": 12489,
											"name": "PUSH",
											"source": 10,
											"value": "3D"
										},
										{
											"begin": 12482,
											"end": 12485,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 12423,
											"end": 12490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12416,
											"end": 12490,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12416,
											"end": 12490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 12588,
											"end": 12591,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 12499,
											"end": 12592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 12619,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12612,
											"end": 12615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12608,
											"end": 12620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12601,
											"end": 12620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12601,
											"end": 12620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12260,
											"end": 12626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12798,
											"end": 12802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12836,
											"end": 12838,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12825,
											"end": 12834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12821,
											"end": 12839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12885,
											"end": 12894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12879,
											"end": 12883,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12875,
											"end": 12895,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12871,
											"end": 12872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12860,
											"end": 12869,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12856,
											"end": 12873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12849,
											"end": 12896,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 13039,
											"end": 13043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 12913,
											"end": 13044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 13044,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 13044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12632,
											"end": 13051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13197,
											"end": 13231,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 13193,
											"end": 13194,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13185,
											"end": 13191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13181,
											"end": 13195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13266,
											"end": 13281,
											"name": "PUSH",
											"source": 10,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 13261,
											"end": 13263,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13253,
											"end": 13259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13242,
											"end": 13282,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 13522,
											"end": 13524,
											"name": "PUSH",
											"source": 10,
											"value": "2D"
										},
										{
											"begin": 13517,
											"end": 13520,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 13458,
											"end": 13525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13451,
											"end": 13525,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13451,
											"end": 13525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 13623,
											"end": 13626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 13534,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13652,
											"end": 13654,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13647,
											"end": 13650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13636,
											"end": 13655,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13636,
											"end": 13655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13833,
											"end": 13837,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13871,
											"end": 13873,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13860,
											"end": 13869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13856,
											"end": 13874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13848,
											"end": 13874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13848,
											"end": 13874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13920,
											"end": 13929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13914,
											"end": 13918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13930,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13906,
											"end": 13907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13895,
											"end": 13904,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13891,
											"end": 13908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13884,
											"end": 13931,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 13948,
											"end": 14079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13940,
											"end": 14079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13940,
											"end": 14079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13667,
											"end": 14086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14232,
											"end": 14258,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 14228,
											"end": 14229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14226,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14216,
											"end": 14230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14209,
											"end": 14259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14092,
											"end": 14266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14414,
											"end": 14417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 14499,
											"end": 14501,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 14494,
											"end": 14497,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 14435,
											"end": 14502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14428,
											"end": 14502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14428,
											"end": 14502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 14600,
											"end": 14603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 14511,
											"end": 14604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14629,
											"end": 14631,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14624,
											"end": 14627,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14620,
											"end": 14632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14613,
											"end": 14632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14613,
											"end": 14632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14272,
											"end": 14638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14810,
											"end": 14814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14848,
											"end": 14850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14833,
											"end": 14851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14897,
											"end": 14906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14891,
											"end": 14895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14887,
											"end": 14907,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14872,
											"end": 14881,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14868,
											"end": 14885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14861,
											"end": 14908,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 15051,
											"end": 15055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 14925,
											"end": 15056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14917,
											"end": 15056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14917,
											"end": 15056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15209,
											"end": 15243,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 15205,
											"end": 15206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15197,
											"end": 15203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15193,
											"end": 15207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15186,
											"end": 15244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15289,
											"name": "PUSH",
											"source": 10,
											"value": "6C6964206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15273,
											"end": 15275,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15265,
											"end": 15271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15261,
											"end": 15276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15254,
											"end": 15290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15069,
											"end": 15297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15445,
											"end": 15448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 15530,
											"end": 15532,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 15525,
											"end": 15528,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 15466,
											"end": 15533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 15631,
											"end": 15634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 15542,
											"end": 15635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15660,
											"end": 15662,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15655,
											"end": 15658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15651,
											"end": 15663,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15644,
											"end": 15663,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15644,
											"end": 15663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15841,
											"end": 15845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15879,
											"end": 15881,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15868,
											"end": 15877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15864,
											"end": 15882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15856,
											"end": 15882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15856,
											"end": 15882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15928,
											"end": 15937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15922,
											"end": 15926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15918,
											"end": 15938,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15914,
											"end": 15915,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15903,
											"end": 15912,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15899,
											"end": 15916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15892,
											"end": 15939,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 16082,
											"end": 16086,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 15956,
											"end": 16087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15948,
											"end": 16087,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15948,
											"end": 16087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15675,
											"end": 16094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16202,
											"end": 16213,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16239,
											"end": 16242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16100,
											"end": 16248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16360,
											"end": 16363,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 16421,
											"end": 16426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 16388,
											"end": 16427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 16525,
											"end": 16531,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16520,
											"end": 16523,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 16443,
											"end": 16532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16436,
											"end": 16532,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16436,
											"end": 16532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 16599,
											"end": 16605,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16594,
											"end": 16597,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16587,
											"end": 16591,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16580,
											"end": 16585,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16576,
											"end": 16592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 16541,
											"end": 16606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16631,
											"end": 16637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16626,
											"end": 16629,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16622,
											"end": 16638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16615,
											"end": 16638,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16615,
											"end": 16638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16364,
											"end": 16644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16830,
											"end": 16833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 16943,
											"end": 16946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16934,
											"end": 16940,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 16852,
											"end": 16947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16845,
											"end": 16947,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16845,
											"end": 16947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 17055,
											"end": 17058,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17046,
											"end": 17052,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 16964,
											"end": 17059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16957,
											"end": 17059,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16957,
											"end": 17059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17076,
											"end": 17079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17069,
											"end": 17079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17069,
											"end": 17079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17091,
											"end": 17315,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 17091,
											"end": 17315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17231,
											"end": 17265,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 17227,
											"end": 17228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17219,
											"end": 17225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17215,
											"end": 17229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17208,
											"end": 17266,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17300,
											"end": 17307,
											"name": "PUSH",
											"source": 10,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17295,
											"end": 17297,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17287,
											"end": 17293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17283,
											"end": 17298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17276,
											"end": 17308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17091,
											"end": 17315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17091,
											"end": 17315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17463,
											"end": 17466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 17548,
											"end": 17550,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 17543,
											"end": 17546,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 17484,
											"end": 17551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17477,
											"end": 17551,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17477,
											"end": 17551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 17649,
											"end": 17652,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 17560,
											"end": 17653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17678,
											"end": 17680,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17673,
											"end": 17676,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17669,
											"end": 17681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17662,
											"end": 17681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17662,
											"end": 17681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17321,
											"end": 17687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17859,
											"end": 17863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17897,
											"end": 17899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17886,
											"end": 17895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17882,
											"end": 17900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17874,
											"end": 17900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17874,
											"end": 17900,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17946,
											"end": 17955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17940,
											"end": 17944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17936,
											"end": 17956,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17932,
											"end": 17933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17921,
											"end": 17930,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17917,
											"end": 17934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17910,
											"end": 17957,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 18100,
											"end": 18104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 17974,
											"end": 18105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17966,
											"end": 18105,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17966,
											"end": 18105,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 18112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18118,
											"end": 18341,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 18118,
											"end": 18341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18258,
											"end": 18292,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 18254,
											"end": 18255,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18246,
											"end": 18252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18242,
											"end": 18256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18235,
											"end": 18293,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18327,
											"end": 18333,
											"name": "PUSH",
											"source": 10,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18322,
											"end": 18324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18314,
											"end": 18320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18310,
											"end": 18325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18303,
											"end": 18334,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18118,
											"end": 18341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18118,
											"end": 18341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18489,
											"end": 18492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 18574,
											"end": 18576,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18569,
											"end": 18572,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 18510,
											"end": 18577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18503,
											"end": 18577,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18503,
											"end": 18577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 18675,
											"end": 18678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 18586,
											"end": 18679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18704,
											"end": 18706,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18699,
											"end": 18702,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18695,
											"end": 18707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18688,
											"end": 18707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18688,
											"end": 18707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18885,
											"end": 18889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18923,
											"end": 18925,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18912,
											"end": 18921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18908,
											"end": 18926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18900,
											"end": 18926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18900,
											"end": 18926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18972,
											"end": 18981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18966,
											"end": 18970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18962,
											"end": 18982,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18958,
											"end": 18959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18947,
											"end": 18956,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18943,
											"end": 18960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18936,
											"end": 18983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 19126,
											"end": 19130,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 19000,
											"end": 19131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18992,
											"end": 19131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18992,
											"end": 19131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18719,
											"end": 19138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19144,
											"end": 19324,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 19144,
											"end": 19324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19192,
											"end": 19269,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19189,
											"end": 19190,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19182,
											"end": 19270,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19289,
											"end": 19293,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 19286,
											"end": 19287,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19279,
											"end": 19294,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19313,
											"end": 19317,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19310,
											"end": 19311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19303,
											"end": 19318,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19330,
											"end": 19524,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 19330,
											"end": 19524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19370,
											"end": 19374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19390,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 19408,
											"end": 19409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19390,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 19390,
											"end": 19410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19390,
											"end": 19410,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 19390,
											"end": 19410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19385,
											"end": 19410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19385,
											"end": 19410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19424,
											"end": 19444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 19442,
											"end": 19443,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19424,
											"end": 19444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 19424,
											"end": 19444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19424,
											"end": 19444,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 19424,
											"end": 19444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19419,
											"end": 19444,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19419,
											"end": 19444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19468,
											"end": 19469,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19465,
											"end": 19466,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19461,
											"end": 19470,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19453,
											"end": 19470,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19453,
											"end": 19470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19492,
											"end": 19493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19486,
											"end": 19490,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19483,
											"end": 19494,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19480,
											"end": 19517,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19480,
											"end": 19517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 19480,
											"end": 19517,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19497,
											"end": 19515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 19497,
											"end": 19515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 19497,
											"end": 19515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19497,
											"end": 19515,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 19497,
											"end": 19515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19480,
											"end": 19517,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 19480,
											"end": 19517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19330,
											"end": 19524,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19330,
											"end": 19524,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19330,
											"end": 19524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19330,
											"end": 19524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19330,
											"end": 19524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19530,
											"end": 19705,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 19530,
											"end": 19705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19670,
											"end": 19697,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 19666,
											"end": 19667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19658,
											"end": 19664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19654,
											"end": 19668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19647,
											"end": 19698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19530,
											"end": 19705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19530,
											"end": 19705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19853,
											"end": 19856,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19874,
											"end": 19941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 19938,
											"end": 19940,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 19933,
											"end": 19936,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19874,
											"end": 19941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 19874,
											"end": 19941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19874,
											"end": 19941,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 19874,
											"end": 19941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19867,
											"end": 19941,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19867,
											"end": 19941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19950,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 20039,
											"end": 20042,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19950,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 19950,
											"end": 20043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19950,
											"end": 20043,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 19950,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20068,
											"end": 20070,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20063,
											"end": 20066,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20059,
											"end": 20071,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20052,
											"end": 20071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20052,
											"end": 20071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19711,
											"end": 20077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20249,
											"end": 20253,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20287,
											"end": 20289,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20276,
											"end": 20285,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20272,
											"end": 20290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20264,
											"end": 20290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20264,
											"end": 20290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20336,
											"end": 20345,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20330,
											"end": 20334,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20326,
											"end": 20346,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20322,
											"end": 20323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20311,
											"end": 20320,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20307,
											"end": 20324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20300,
											"end": 20347,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 20490,
											"end": 20494,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 20364,
											"end": 20495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20356,
											"end": 20495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20356,
											"end": 20495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20083,
											"end": 20502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20508,
											"end": 20745,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 20508,
											"end": 20745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20648,
											"end": 20682,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 20644,
											"end": 20645,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20636,
											"end": 20642,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20632,
											"end": 20646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20625,
											"end": 20683,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20717,
											"end": 20737,
											"name": "PUSH",
											"source": 10,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 20712,
											"end": 20714,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20704,
											"end": 20710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20700,
											"end": 20715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20693,
											"end": 20738,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20508,
											"end": 20745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20508,
											"end": 20745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20751,
											"end": 21117,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 20751,
											"end": 21117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20893,
											"end": 20896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20914,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 20978,
											"end": 20980,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 20973,
											"end": 20976,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20914,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 20914,
											"end": 20981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20914,
											"end": 20981,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 20914,
											"end": 20981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20907,
											"end": 20981,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20907,
											"end": 20981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20990,
											"end": 21083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 21079,
											"end": 21082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20990,
											"end": 21083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 20990,
											"end": 21083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20990,
											"end": 21083,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 20990,
											"end": 21083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21108,
											"end": 21110,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21103,
											"end": 21106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21099,
											"end": 21111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21092,
											"end": 21111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21092,
											"end": 21111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20751,
											"end": 21117,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20751,
											"end": 21117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20751,
											"end": 21117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20751,
											"end": 21117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21123,
											"end": 21542,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 21123,
											"end": 21542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21289,
											"end": 21293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21327,
											"end": 21329,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21316,
											"end": 21325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21312,
											"end": 21330,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21304,
											"end": 21330,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21304,
											"end": 21330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21376,
											"end": 21385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21370,
											"end": 21374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21366,
											"end": 21386,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21362,
											"end": 21363,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21351,
											"end": 21360,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21347,
											"end": 21364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21340,
											"end": 21387,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21404,
											"end": 21535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 21530,
											"end": 21534,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21404,
											"end": 21535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 21404,
											"end": 21535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21404,
											"end": 21535,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 21404,
											"end": 21535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21396,
											"end": 21535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21396,
											"end": 21535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21123,
											"end": 21542,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21123,
											"end": 21542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21123,
											"end": 21542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21123,
											"end": 21542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21548,
											"end": 21728,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 21548,
											"end": 21728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21596,
											"end": 21673,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21593,
											"end": 21594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21586,
											"end": 21674,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21693,
											"end": 21697,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 21690,
											"end": 21691,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 21683,
											"end": 21698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21717,
											"end": 21721,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 21714,
											"end": 21715,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21707,
											"end": 21722,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 21734,
											"end": 21832,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 21734,
											"end": 21832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21785,
											"end": 21791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21819,
											"end": 21824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21813,
											"end": 21825,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21803,
											"end": 21825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21803,
											"end": 21825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21734,
											"end": 21832,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21734,
											"end": 21832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21734,
											"end": 21832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21734,
											"end": 21832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21838,
											"end": 22006,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 21838,
											"end": 22006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21921,
											"end": 21932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21955,
											"end": 21961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21950,
											"end": 21953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21943,
											"end": 21962,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21995,
											"end": 21999,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21990,
											"end": 21993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21986,
											"end": 22000,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21971,
											"end": 22000,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21971,
											"end": 22000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21838,
											"end": 22006,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21838,
											"end": 22006,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21838,
											"end": 22006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21838,
											"end": 22006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21838,
											"end": 22006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22012,
											"end": 22385,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 22012,
											"end": 22385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22098,
											"end": 22101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22126,
											"end": 22164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 22158,
											"end": 22163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22126,
											"end": 22164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 22126,
											"end": 22164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22126,
											"end": 22164,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 22126,
											"end": 22164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22180,
											"end": 22250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 22243,
											"end": 22249,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22238,
											"end": 22241,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22180,
											"end": 22250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 22180,
											"end": 22250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22180,
											"end": 22250,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 22180,
											"end": 22250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22173,
											"end": 22250,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22173,
											"end": 22250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22259,
											"end": 22324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 22317,
											"end": 22323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22312,
											"end": 22315,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22305,
											"end": 22309,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22298,
											"end": 22303,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22294,
											"end": 22310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22259,
											"end": 22324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 22259,
											"end": 22324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22259,
											"end": 22324,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 22259,
											"end": 22324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22349,
											"end": 22378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 22371,
											"end": 22377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22349,
											"end": 22378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 22349,
											"end": 22378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22349,
											"end": 22378,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 22349,
											"end": 22378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22344,
											"end": 22347,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22340,
											"end": 22379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22333,
											"end": 22379,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22333,
											"end": 22379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22102,
											"end": 22385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22012,
											"end": 22385,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22012,
											"end": 22385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22012,
											"end": 22385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22012,
											"end": 22385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22012,
											"end": 22385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22391,
											"end": 23031,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 22391,
											"end": 23031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22586,
											"end": 22590,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22624,
											"end": 22627,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 22613,
											"end": 22622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22609,
											"end": 22628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22601,
											"end": 22628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22601,
											"end": 22628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22638,
											"end": 22709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 22706,
											"end": 22707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22695,
											"end": 22704,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22691,
											"end": 22708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22682,
											"end": 22688,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 22638,
											"end": 22709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 22638,
											"end": 22709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22638,
											"end": 22709,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 22638,
											"end": 22709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22719,
											"end": 22791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 22787,
											"end": 22789,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22776,
											"end": 22785,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22772,
											"end": 22790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22763,
											"end": 22769,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22719,
											"end": 22791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 22719,
											"end": 22791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22719,
											"end": 22791,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 22719,
											"end": 22791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22801,
											"end": 22873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 22869,
											"end": 22871,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22858,
											"end": 22867,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22854,
											"end": 22872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22845,
											"end": 22851,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22801,
											"end": 22873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 22801,
											"end": 22873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22801,
											"end": 22873,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 22801,
											"end": 22873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22920,
											"end": 22929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22914,
											"end": 22918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22910,
											"end": 22930,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22905,
											"end": 22907,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 22894,
											"end": 22903,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22890,
											"end": 22908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22883,
											"end": 22931,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22948,
											"end": 23024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 23019,
											"end": 23023,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23010,
											"end": 23016,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22948,
											"end": 23024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 22948,
											"end": 23024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22948,
											"end": 23024,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 22948,
											"end": 23024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22940,
											"end": 23024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22940,
											"end": 23024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22391,
											"end": 23031,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 22391,
											"end": 23031,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 22391,
											"end": 23031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22391,
											"end": 23031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22391,
											"end": 23031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22391,
											"end": 23031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22391,
											"end": 23031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22391,
											"end": 23031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23037,
											"end": 23178,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 23037,
											"end": 23178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23093,
											"end": 23098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23124,
											"end": 23130,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23118,
											"end": 23131,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 23109,
											"end": 23131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23109,
											"end": 23131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23140,
											"end": 23172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 23166,
											"end": 23171,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23140,
											"end": 23172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 23140,
											"end": 23172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23140,
											"end": 23172,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 23140,
											"end": 23172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23037,
											"end": 23178,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23037,
											"end": 23178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23037,
											"end": 23178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23037,
											"end": 23178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23037,
											"end": 23178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23184,
											"end": 23533,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 23184,
											"end": 23533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23253,
											"end": 23259,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23302,
											"end": 23304,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23290,
											"end": 23299,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23281,
											"end": 23288,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23277,
											"end": 23300,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23273,
											"end": 23305,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 23270,
											"end": 23389,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23270,
											"end": 23389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 23270,
											"end": 23389,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23308,
											"end": 23387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 23308,
											"end": 23387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 23308,
											"end": 23387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23308,
											"end": 23387,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 23308,
											"end": 23387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23270,
											"end": 23389,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 23270,
											"end": 23389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23428,
											"end": 23429,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23453,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 23508,
											"end": 23515,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23499,
											"end": 23505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23488,
											"end": 23497,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23484,
											"end": 23506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23453,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 23453,
											"end": 23516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23453,
											"end": 23516,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 23453,
											"end": 23516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23443,
											"end": 23516,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23443,
											"end": 23516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23399,
											"end": 23526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23184,
											"end": 23533,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23184,
											"end": 23533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23184,
											"end": 23533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23184,
											"end": 23533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23184,
											"end": 23533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"fury/contracts/contracts/token/ERC721/ERC721.sol",
								"fury/contracts/contracts/token/ERC721/IERC721.sol",
								"fury/contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"fury/contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"fury/contracts/contracts/utils/Context.sol",
								"fury/contracts/contracts/utils/Strings.sol",
								"fury/contracts/contracts/utils/introspection/ERC165.sol",
								"fury/contracts/contracts/utils/introspection/IERC165.sol",
								"fury/contracts/contracts/utils/math/Math.sol",
								"fury/contracts/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fury/contracts/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fury/contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x4e589a85d892438e78bb334324f424a06b82e58805ce96af144530510b2ae1ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be724115a51ccc1667c0e47b1283a2d649b6e3dcb19980c39f755b212796e4d9\",\"dweb:/ipfs/QmWzizq9jvo9DvFmw5UbM24gCLKxGtFbSRNZuE9qWpgxvH\"]},\"fury/contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb691b9ba9e5a08ee4d4201f9125892420ce6f0e595c3f4014790c71f64475872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5757a17d5de817abac51de72a4b2528272e6d784eb0f534f25ec4cfa87525c7\",\"dweb:/ipfs/QmS5GFinq87NPYruFH5yQo5A2aDagvNRjhi7DCtQPhAZR3\"]},\"fury/contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xf7ff3613d8bad1bc3e25a435ccdf9273bc23308f3c3e71152f8b4bf75cc632e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0661b4e567d7e848581c7dd77e60dec2ce800b5b491f5dc3e18a6d1dc8dce0\",\"dweb:/ipfs/QmZjAczySSrqtmKK2JRM7VARie7wMiBY1sUbt4DKkLfFnd\"]},\"fury/contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x4efae37327cb35cfe276e9d7900c4159b5992bc255030b1ec7525a7297cfb686\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a39e1bcd1adc74b9e085938e9d245c00fbbd08a313311fc806d6b8c2cb4b438\",\"dweb:/ipfs/QmR5TwUm1dkYZ5uBRW8w6gaduYZaNdRFWiSjTARy1WMhdC\"]},\"fury/contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]},\"fury/contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x6c5e9761ed1ed57b402469c657969c39af9572bc691ecb660f949e251809606d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://695b013d6f54e050b800f78ccd1c647f9a055322b920af1fb6c5a7b917df02f1\",\"dweb:/ipfs/QmPeEaiGk8ptbvrSSCGipVJWW2K6zUS4XLoq8R2o24GXxD\"]},\"fury/contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x080b124383ec4cae37ea3e96c3b3910d20a99b05c72f6f272898ec839b72f9dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b363ade0054534f553ead520d60c46e28329133f26dab03551484b35c61c99a5\",\"dweb:/ipfs/QmfNPDd23KYGtWUWX2AcRytXjoUu6xuc91hpQLnHCE9SUz\"]},\"fury/contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]},\"fury/contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]},\"fury/contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b\",\"dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 21,
								"contract": "fury/contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 23,
								"contract": "fury/contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "fury/contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 31,
								"contract": "fury/contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 35,
								"contract": "fury/contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 41,
								"contract": "fury/contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"fury/contracts/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fury/contracts/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fury/contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb691b9ba9e5a08ee4d4201f9125892420ce6f0e595c3f4014790c71f64475872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5757a17d5de817abac51de72a4b2528272e6d784eb0f534f25ec4cfa87525c7\",\"dweb:/ipfs/QmS5GFinq87NPYruFH5yQo5A2aDagvNRjhi7DCtQPhAZR3\"]},\"fury/contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"fury/contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fury/contracts/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fury/contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xf7ff3613d8bad1bc3e25a435ccdf9273bc23308f3c3e71152f8b4bf75cc632e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0661b4e567d7e848581c7dd77e60dec2ce800b5b491f5dc3e18a6d1dc8dce0\",\"dweb:/ipfs/QmZjAczySSrqtmKK2JRM7VARie7wMiBY1sUbt4DKkLfFnd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"fury/contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fury/contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fury/contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb691b9ba9e5a08ee4d4201f9125892420ce6f0e595c3f4014790c71f64475872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5757a17d5de817abac51de72a4b2528272e6d784eb0f534f25ec4cfa87525c7\",\"dweb:/ipfs/QmS5GFinq87NPYruFH5yQo5A2aDagvNRjhi7DCtQPhAZR3\"]},\"fury/contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x4efae37327cb35cfe276e9d7900c4159b5992bc255030b1ec7525a7297cfb686\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a39e1bcd1adc74b9e085938e9d245c00fbbd08a313311fc806d6b8c2cb4b438\",\"dweb:/ipfs/QmR5TwUm1dkYZ5uBRW8w6gaduYZaNdRFWiSjTARy1WMhdC\"]},\"fury/contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"fury/contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fury/contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fury/contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"fury/contracts/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"fury/contracts/contracts/utils/Strings.sol\":221:2818  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"fury/contracts/contracts/utils/Strings.sol\":221:2818  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f28479a0359f20133cbd376fb26a58b555144e6630c4f6c1a30f64b60012678b64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f28479a0359f20133cbd376fb26a58b555144e6630c4f6c1a30f64b60012678b64736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE DUP5 PUSH26 0xA0359F20133CBD376FB26A58B555144E6630C4F6C1A30F64B600 SLT PUSH8 0x8B64736F6C634300 ADDMOD OR STOP CALLER ",
							"sourceMap": "221:2597:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f28479a0359f20133cbd376fb26a58b555144e6630c4f6c1a30f64b60012678b64736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE DUP5 PUSH26 0xA0359F20133CBD376FB26A58B555144E6630C4F6C1A30F64B600 SLT PUSH8 0x8B64736F6C634300 ADDMOD OR STOP CALLER ",
							"sourceMap": "221:2597:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 221,
									"end": 2818,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f28479a0359f20133cbd376fb26a58b555144e6630c4f6c1a30f64b60012678b64736f6c63430008170033",
									".code": [
										{
											"begin": 221,
											"end": 2818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 221,
											"end": 2818,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 221,
											"end": 2818,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 221,
											"end": 2818,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 221,
											"end": 2818,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 2818,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 221,
											"end": 2818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 2818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 221,
											"end": 2818,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"fury/contracts/contracts/token/ERC721/ERC721.sol",
								"fury/contracts/contracts/token/ERC721/IERC721.sol",
								"fury/contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"fury/contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"fury/contracts/contracts/utils/Context.sol",
								"fury/contracts/contracts/utils/Strings.sol",
								"fury/contracts/contracts/utils/introspection/ERC165.sol",
								"fury/contracts/contracts/utils/introspection/IERC165.sol",
								"fury/contracts/contracts/utils/math/Math.sol",
								"fury/contracts/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fury/contracts/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fury/contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x6c5e9761ed1ed57b402469c657969c39af9572bc691ecb660f949e251809606d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://695b013d6f54e050b800f78ccd1c647f9a055322b920af1fb6c5a7b917df02f1\",\"dweb:/ipfs/QmPeEaiGk8ptbvrSSCGipVJWW2K6zUS4XLoq8R2o24GXxD\"]},\"fury/contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]},\"fury/contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b\",\"dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"fury/contracts/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fury/contracts/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fury/contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x080b124383ec4cae37ea3e96c3b3910d20a99b05c72f6f272898ec839b72f9dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b363ade0054534f553ead520d60c46e28329133f26dab03551484b35c61c99a5\",\"dweb:/ipfs/QmfNPDd23KYGtWUWX2AcRytXjoUu6xuc91hpQLnHCE9SUz\"]},\"fury/contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"fury/contracts/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fury/contracts/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fury/contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"fury/contracts/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"fury/contracts/contracts/utils/math/Math.sol\":203:14806  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"fury/contracts/contracts/utils/math/Math.sol\":203:14806  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bfed0117aac89a75f928ba3ce539a6df40841822bc49add78d91e6fe9498902964736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bfed0117aac89a75f928ba3ce539a6df40841822bc49add78d91e6fe9498902964736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xED ADD OR 0xAA 0xC8 SWAP11 PUSH22 0xF928BA3CE539A6DF40841822BC49ADD78D91E6FE9498 SWAP1 0x29 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "203:14603:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bfed0117aac89a75f928ba3ce539a6df40841822bc49add78d91e6fe9498902964736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xED ADD OR 0xAA 0xC8 SWAP11 PUSH22 0xF928BA3CE539A6DF40841822BC49ADD78D91E6FE9498 SWAP1 0x29 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "203:14603:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bfed0117aac89a75f928ba3ce539a6df40841822bc49add78d91e6fe9498902964736f6c63430008170033",
									".code": [
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"fury/contracts/contracts/token/ERC721/ERC721.sol",
								"fury/contracts/contracts/token/ERC721/IERC721.sol",
								"fury/contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"fury/contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"fury/contracts/contracts/utils/Context.sol",
								"fury/contracts/contracts/utils/Strings.sol",
								"fury/contracts/contracts/utils/introspection/ERC165.sol",
								"fury/contracts/contracts/utils/introspection/IERC165.sol",
								"fury/contracts/contracts/utils/math/Math.sol",
								"fury/contracts/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fury/contracts/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fury/contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"fury/contracts/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"fury/contracts/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"fury/contracts/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122035f49918bb4520b1e40b39ced11ebd584e94ad617367def541e454363458138764736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122035f49918bb4520b1e40b39ced11ebd584e94ad617367def541e454363458138764736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD DELEGATECALL SWAP10 XOR 0xBB GASLIMIT KECCAK256 0xB1 0xE4 SIGNEXTEND CODECOPY 0xCE 0xD1 0x1E 0xBD PC 0x4E SWAP5 0xAD PUSH2 0x7367 0xDE CREATE2 COINBASE 0xE4 SLOAD CALLDATASIZE CALLVALUE PC SGT DUP8 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "216:1047:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122035f49918bb4520b1e40b39ced11ebd584e94ad617367def541e454363458138764736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD DELEGATECALL SWAP10 XOR 0xBB GASLIMIT KECCAK256 0xB1 0xE4 SIGNEXTEND CODECOPY 0xCE 0xD1 0x1E 0xBD PC 0x4E SWAP5 0xAD PUSH2 0x7367 0xDE CREATE2 COINBASE 0xE4 SLOAD CALLDATASIZE CALLVALUE PC SGT DUP8 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "216:1047:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122035f49918bb4520b1e40b39ced11ebd584e94ad617367def541e454363458138764736f6c63430008170033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"fury/contracts/contracts/token/ERC721/ERC721.sol",
								"fury/contracts/contracts/token/ERC721/IERC721.sol",
								"fury/contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"fury/contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"fury/contracts/contracts/utils/Context.sol",
								"fury/contracts/contracts/utils/Strings.sol",
								"fury/contracts/contracts/utils/introspection/ERC165.sol",
								"fury/contracts/contracts/utils/introspection/IERC165.sol",
								"fury/contracts/contracts/utils/math/Math.sol",
								"fury/contracts/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fury/contracts/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fury/contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b\",\"dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"fury/contracts/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "fury/contracts/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1087
						],
						"ERC165": [
							1351
						],
						"ERC721": [
							904
						],
						"IERC165": [
							1363
						],
						"IERC721": [
							1020
						],
						"IERC721Metadata": [
							1065
						],
						"IERC721Receiver": [
							1038
						],
						"Math": [
							2387
						],
						"SignedMath": [
							2492
						],
						"Strings": [
							1328
						]
					},
					"id": 905,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "fury/contracts/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 905,
							"sourceUnit": 1021,
							"src": "133:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "fury/contracts/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 905,
							"sourceUnit": 1039,
							"src": "157:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "fury/contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 905,
							"sourceUnit": 1066,
							"src": "189:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "fury/contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 905,
							"sourceUnit": 1088,
							"src": "232:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "fury/contracts/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 905,
							"sourceUnit": 1329,
							"src": "266:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "fury/contracts/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 905,
							"sourceUnit": 1352,
							"src": "300:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"614:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1087,
										"src": "614:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nameLocations": [
											"623:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1351,
										"src": "623:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "623:6:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC721",
										"nameLocations": [
											"631:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1020,
										"src": "631:7:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "631:7:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IERC721Metadata",
										"nameLocations": [
											"640:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1065,
										"src": "640:15:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "640:15:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "348:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 904,
							"linearizedBaseContracts": [
								904,
								1065,
								1020,
								1351,
								1363,
								1087
							],
							"name": "ERC721",
							"nameLocation": "604:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 19,
									"libraryName": {
										"id": 17,
										"name": "Strings",
										"nameLocations": [
											"668:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1328,
										"src": "668:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "662:26:0",
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "680:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "727:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 904,
									"src": "712:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 20,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "712:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "774:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 904,
									"src": "759:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 22,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "759:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "870:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 904,
									"src": "834:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 26,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 24,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "834:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "853:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "964:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 904,
									"src": "928:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 30,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 28,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "936:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "928:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 29,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "947:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1065:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 904,
									"src": "1029:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 34,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 32,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1037:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1029:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 33,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1048:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 41,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1188:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 904,
									"src": "1135:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 40,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 36,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1143:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1135:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 39,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 37,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1162:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1154:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 38,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1173:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1382:57:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 49,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1392:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 50,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1400:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1392:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1392:13:0"
											},
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1415:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1415:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1415:17:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1213:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 58,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1352:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1338:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 43,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1338:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1373:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1359:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 45,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1359:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:44:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1382:0:0"
									},
									"scope": 904,
									"src": "1326:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1350,
										1362
									],
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1614:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1643:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 71,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "1663:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1020_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1020_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 70,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1658:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1658:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1020",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1672:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1658:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1643:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 75,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1699:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 77,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1065,
																			"src": "1719:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1065_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1065_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 76,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1714:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1714:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1065",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1736:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1714:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1699:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1643:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 84,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1787:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 82,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1763:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$904_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1769:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1350,
															"src": "1763:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1763:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1643:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 68,
												"id": 87,
												"nodeType": "Return",
												"src": "1624:175:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1445:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1515:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 65,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 63,
												"name": "ERC165",
												"nameLocations": [
													"1582:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1351,
												"src": "1582:6:0"
											},
											{
												"id": 64,
												"name": "IERC165",
												"nameLocations": [
													"1590:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1363,
												"src": "1590:7:0"
											}
										],
										"src": "1573:25:0"
									},
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1540:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1533:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 60,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1533:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1532:20:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1608:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1608:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1607:6:0"
									},
									"scope": 904,
									"src": "1506:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										945
									],
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1937:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "1955:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1972:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1964:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 99,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1964:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1964:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1955:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1976:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1947:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1947:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1947:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 107,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "2037:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 109,
													"indexExpression": {
														"id": 108,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2047:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2037:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 96,
												"id": 110,
												"nodeType": "Return",
												"src": "2030:23:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "1812:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1874:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1892:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1884:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1883:15:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1928:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:9:0"
									},
									"scope": 904,
									"src": "1865:195:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										953
									],
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "2189:138:0",
										"statements": [
											{
												"assignments": [
													121
												],
												"declarations": [
													{
														"constant": false,
														"id": 121,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2207:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "2199:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 120,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2199:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 125,
												"initialValue": {
													"arguments": [
														{
															"id": 123,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "2224:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 122,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "2215:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2215:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2199:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2250:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2267:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2259:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 128,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2259:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2259:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2250:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2271:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2242:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2242:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "2242:56:0"
											},
											{
												"expression": {
													"id": 136,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 121,
													"src": "2315:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 137,
												"nodeType": "Return",
												"src": "2308:12:0"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "2066:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2126:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2142:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2134:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:17:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:9:0"
									},
									"scope": 904,
									"src": "2117:210:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1050
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "2449:29:0",
										"statements": [
											{
												"expression": {
													"id": 145,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 21,
													"src": "2466:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 144,
												"id": 146,
												"nodeType": "Return",
												"src": "2459:12:0"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "2333:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2398:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2402:2:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "2434:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2434:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2433:15:0"
									},
									"scope": 904,
									"src": "2389:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1056
									],
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2604:31:0",
										"statements": [
											{
												"expression": {
													"id": 154,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "2621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 153,
												"id": 155,
												"nodeType": "Return",
												"src": "2614:14:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "2484:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2551:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2557:2:0"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2589:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 151,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2589:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2588:15:0"
									},
									"scope": 904,
									"src": "2542:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1064
									],
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2780:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 166,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2805:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 165,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "2790:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2790:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "2790:23:0"
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2838:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "2824:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 169,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2824:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 171,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2848:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2824:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 176,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "2881:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2875:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 174,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2875:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2875:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2890:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2875:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2899:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2875:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2959:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2875:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 185,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "2927:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 186,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 160,
																				"src": "2936:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2944:8:0",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1146,
																			"src": "2936:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2936:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 183,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2910:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2914:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2910:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2910:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2903:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 181,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "2903:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2903:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 164,
												"id": 193,
												"nodeType": "Return",
												"src": "2868:93:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "2641:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2710:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2727:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2719:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:17:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2765:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2764:15:0"
									},
									"scope": 904,
									"src": "2701:267:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "3276:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3293:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 200,
												"id": 202,
												"nodeType": "Return",
												"src": "3286:9:0"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2974:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3219:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3227:2:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "3261:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3261:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3260:15:0"
									},
									"scope": 904,
									"src": "3210:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										993
									],
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "3420:329:0",
										"statements": [
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3438:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "3430:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 212,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3430:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 217,
												"initialValue": {
													"arguments": [
														{
															"id": 215,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3446:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3446:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3430:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "3480:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 220,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "3486:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3480:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3493:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3472:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "3472:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 226,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "3561:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3561:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 228,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "3577:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3561:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 231,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "3603:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 232,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1077,
																			"src": "3610:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3610:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 230,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "3586:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3586:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3561:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3637:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3540:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "3540:170:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 240,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "3730:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 241,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3734:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 239,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "3721:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3721:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "3721:21:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "3308:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3368:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3384:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "3376:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3396:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "3388:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3375:29:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3420:0:0"
									},
									"scope": 904,
									"src": "3359:390:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1009
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "3886:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 254,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3911:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 253,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "3896:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "3896:23:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 257,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "3937:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 259,
													"indexExpression": {
														"id": 258,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3953:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3937:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 252,
												"id": 260,
												"nodeType": "Return",
												"src": "3930:31:0"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "3755:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3819:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3839:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3831:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3830:17:0"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3877:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3876:9:0"
									},
									"scope": 904,
									"src": "3810:158:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1001
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "4110:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 271,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "4139:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4139:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4153:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4163:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 270,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "4120:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4120:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "4120:52:0"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3974:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4044:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4070:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4062:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4085:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4080:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4080:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4061:33:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4110:0:0"
									},
									"scope": 904,
									"src": "4035:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1019
									],
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "4339:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 288,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "4356:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 290,
														"indexExpression": {
															"id": 289,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4375:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4356:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 292,
													"indexExpression": {
														"id": 291,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "4382:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4356:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 287,
												"id": 293,
												"nodeType": "Return",
												"src": "4349:42:0"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "4185:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4254:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4279:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4271:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4294:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4286:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4270:33:0"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4333:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4333:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4332:6:0"
									},
									"scope": 904,
									"src": "4245:153:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										985
									],
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "4540:207:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 307,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "4629:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4629:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 309,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "4643:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 306,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "4610:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4610:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4653:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4602:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4602:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "4602:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 315,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "4722:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "4728:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 317,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "4732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 314,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "4712:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4712:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "4712:28:0"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "4404:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4469:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4490:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4482:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4504:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4496:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4508:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4481:43:0"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4540:0:0"
									},
									"scope": 904,
									"src": "4460:287:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										975
									],
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "4897:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 332,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "4924:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 333,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "4930:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 334,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "4934:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4943:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 331,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															339,
															368
														],
														"referencedDeclaration": 368,
														"src": "4907:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4907:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "4907:39:0"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "4753:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4822:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4847:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4839:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4861:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4853:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4873:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4865:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4838:43:0"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4897:0:0"
									},
									"scope": 904,
									"src": "4813:140:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										965
									],
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "5122:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 353,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "5159:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5159:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 355,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "5173:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 352,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "5140:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5140:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5183:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5132:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5132:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "5132:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5255:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5261:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 364,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5274:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 360,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "5241:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5241:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "5241:38:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "4959:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5028:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5053:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "5045:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5067:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "5059:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5079:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "5071:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5101:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "5088:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5088:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:62:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5122:0:0"
									},
									"scope": 904,
									"src": "5019:267:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "6249:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 381,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "6269:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 382,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "6275:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "6279:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 380,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "6259:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6259:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "6259:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 388,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "6328:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 389,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "6334:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 390,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "6338:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 391,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 387,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "6305:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6305:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6354:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6297:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6297:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "6297:110:0"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "5292:850:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6156:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6178:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "6170:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6170:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6192:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "6184:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6204:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "6196:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6226:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "6213:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6213:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6169:62:0"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6249:0:0"
									},
									"scope": 904,
									"src": "6147:267:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "6598:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 405,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "6615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 407,
													"indexExpression": {
														"id": 406,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "6623:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6615:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 404,
												"id": 408,
												"nodeType": "Return",
												"src": "6608:23:0"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "6420:98:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "6532:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6549:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6541:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6540:17:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6589:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6589:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6588:9:0"
									},
									"scope": 904,
									"src": "6523:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "7012:55:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 419,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "7038:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 418,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7029:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7029:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7058:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7050:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 421,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7050:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7050:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7029:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 417,
												"id": 426,
												"nodeType": "Return",
												"src": "7022:38:0"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6644:292:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "6950:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6966:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "6958:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6957:17:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "7006:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7006:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7005:6:0"
									},
									"scope": 904,
									"src": "6941:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "7324:155:0",
										"statements": [
											{
												"assignments": [
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 439,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7342:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "7334:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 438,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7334:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"arguments": [
														{
															"id": 441,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "7358:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 440,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "7350:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7350:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7334:32:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 444,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "7384:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 445,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "7395:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7384:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 448,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "7421:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 449,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "7428:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 447,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "7404:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7404:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7384:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 453,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "7452:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 452,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "7440:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7440:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 455,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "7464:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7440:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7384:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 458,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7383:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 437,
												"id": 459,
												"nodeType": "Return",
												"src": "7376:96:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "7073:147:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7234:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7261:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "7253:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7278:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "7270:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7252:34:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "7318:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7318:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7317:6:0"
									},
									"scope": 904,
									"src": "7225:254:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7874:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "7894:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "7898:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7907:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 469,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															476,
															505
														],
														"referencedDeclaration": 505,
														"src": "7884:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7884:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "7884:26:0"
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "7485:319:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "7818:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7836:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7828:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7848:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7840:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7827:29:0"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7874:0:0"
									},
									"scope": 904,
									"src": "7809:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "8222:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 487,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "8238:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "8242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 486,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "8232:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8232:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "8232:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8312:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8304:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 493,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8304:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8304:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 497,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "8316:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 498,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "8320:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 499,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "8329:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 492,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "8281:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8281:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8348:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8260:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8260:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "8260:150:0"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "7923:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8147:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8165:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "8157:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8177:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "8169:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8199:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "8186:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8186:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8156:48:0"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8222:0:0"
									},
									"scope": 904,
									"src": "8138:279:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "8800:859:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 514,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "8818:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8832:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8824:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 515,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8824:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8824:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8818:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8836:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8810:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8810:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8889:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 525,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "8898:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 524,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "8890:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8890:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8908:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8881:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "8881:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8979:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8971:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 532,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8971:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8971:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "8983:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "8987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8996:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 531,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "8950:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8950:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8950:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9093:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 543,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "9102:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 542,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "9094:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9094:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9112:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9085:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "9085:58:0"
											},
											{
												"id": 555,
												"nodeType": "UncheckedBlock",
												"src": "9154:360:0",
												"statements": [
													{
														"expression": {
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 549,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "9485:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 551,
																"indexExpression": {
																	"id": 550,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "9495:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9485:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9502:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9485:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 554,
														"nodeType": "ExpressionStatement",
														"src": "9485:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 556,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "9524:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 558,
														"indexExpression": {
															"id": 557,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "9532:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9524:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "9543:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9524:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "9524:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9578:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9570:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 563,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9570:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9570:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "9582:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "9586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "9561:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9561:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "9556:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9633:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9625:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 572,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9625:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9625:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "9637:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "9641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9650:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 571,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "9605:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9605:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "9605:47:0"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "8423:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8748:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8762:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "8754:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8774:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "8766:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8753:29:0"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:0"
									},
									"scope": 904,
									"src": "8739:920:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "10034:638:0",
										"statements": [
											{
												"assignments": [
													589
												],
												"declarations": [
													{
														"constant": false,
														"id": 589,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10052:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "10044:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 588,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10044:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 593,
												"initialValue": {
													"arguments": [
														{
															"id": 591,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10068:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "10060:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10060:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10044:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 595,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10108:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10123:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10115:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 596,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10115:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10115:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 600,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10127:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10136:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 594,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "10087:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10087:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "10087:51:0"
											},
											{
												"expression": {
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 604,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "10240:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 606,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "10256:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 605,
															"name": "ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "10248:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10248:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10240:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "10240:24:0"
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10302:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 610,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "10309:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 612,
														"indexExpression": {
															"id": 611,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10325:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10309:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "10302:31:0"
											},
											{
												"expression": {
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 615,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "10497:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 617,
														"indexExpression": {
															"id": 616,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10507:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10497:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10517:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10497:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "10497:21:0"
											},
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10529:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 621,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "10536:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 623,
														"indexExpression": {
															"id": 622,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10536:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "10529:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10577:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10592:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10584:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 628,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10584:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10584:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10596:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "10568:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10568:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "EmitStatement",
												"src": "10563:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 636,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10635:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10650:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10642:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10642:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10642:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10654:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10663:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 635,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "10615:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10615:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "10615:50:0"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "9665:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9994:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10008:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "10000:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9999:17:0"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10034:0:0"
									},
									"scope": 904,
									"src": "9985:687:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "11075:1040:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 658,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 653,
																		"src": "11101:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 657,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 139,
																	"src": "11093:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11093:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 660,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "11113:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11093:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11119:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11085:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "11085:74:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "11177:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11191:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11183:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 667,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11183:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11183:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11177:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11195:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 665,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11169:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11169:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "11169:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 676,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "11266:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 677,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "11272:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "11276:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11285:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 675,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "11245:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11245:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "11245:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 684,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 653,
																		"src": "11395:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 683,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 139,
																	"src": "11387:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11387:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 686,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "11407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11387:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11413:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11379:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11379:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "11379:74:0"
											},
											{
												"expression": {
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11515:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 691,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "11522:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 693,
														"indexExpression": {
															"id": 692,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "11538:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11522:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "11515:31:0"
											},
											{
												"expression": {
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 696,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "11710:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 698,
														"indexExpression": {
															"id": 697,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "11720:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11710:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11729:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11710:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "11710:20:0"
											},
											{
												"id": 708,
												"nodeType": "UncheckedBlock",
												"src": "11741:241:0",
												"statements": [
													{
														"expression": {
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 702,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "11953:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 704,
																"indexExpression": {
																	"id": 703,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "11963:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11953:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11970:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11953:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 707,
														"nodeType": "ExpressionStatement",
														"src": "11953:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 709,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "11992:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 711,
														"indexExpression": {
															"id": 710,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "12000:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11992:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 712,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "12011:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11992:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "11992:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 716,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "12038:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 717,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "12044:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "12048:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 715,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "12029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12029:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "EmitStatement",
												"src": "12024:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "12087:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "12093:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "12097:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12106:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 721,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "12067:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12067:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "12067:41:0"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "10678:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11005:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11023:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "11015:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11037:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "11029:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11049:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "11041:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11014:43:0"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11075:0:0"
									},
									"scope": 904,
									"src": "10996:1119:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "12291:100:0",
										"statements": [
											{
												"expression": {
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 737,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "12301:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 739,
														"indexExpression": {
															"id": 738,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "12317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12301:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 740,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "12328:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12301:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "12301:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 745,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "12362:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 744,
																"name": "ownerOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "12354:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12354:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "12372:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "12376:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 743,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "12345:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12345:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "EmitStatement",
												"src": "12340:44:0"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "12121:101:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12236:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12253:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "12245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12265:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "12257:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12244:29:0"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12291:0:0"
									},
									"scope": 904,
									"src": "12227:164:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "12620:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 763,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "12638:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 764,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "12647:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12638:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12657:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12630:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12630:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "12630:55:0"
											},
											{
												"expression": {
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 769,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "12695:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 772,
															"indexExpression": {
																"id": 770,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "12714:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12695:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 773,
														"indexExpression": {
															"id": 771,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "12721:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12695:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 774,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "12733:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12695:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "12695:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 778,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "12771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "12778:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "12788:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 777,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "12756:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12756:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "EmitStatement",
												"src": "12751:46:0"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "12397:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12536:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12563:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "12555:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "12570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12593:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "12588:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12588:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12554:48:0"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12620:0:0"
									},
									"scope": 904,
									"src": "12527:277:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "12951:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 792,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "12977:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 791,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "12969:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12969:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12987:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12961:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12961:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "12961:53:0"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "12810:73:0",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "12897:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12920:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "12912:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12911:17:0"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12951:0:0"
									},
									"scope": 904,
									"src": "12888:133:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "13728:679:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 812,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "13742:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13745:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13742:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13750:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13742:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13759:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13742:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "14365:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14386:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 811,
															"id": 858,
															"nodeType": "Return",
															"src": "14379:11:0"
														}
													]
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "13738:663:0",
												"trueBody": {
													"id": 856,
													"nodeType": "Block",
													"src": "13762:597:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 836,
																		"nodeType": "Block",
																		"src": "13876:91:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 834,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 830,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 828,
																						"src": "13901:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 831,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1038,
																								"src": "13911:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1038_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 832,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "13927:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1037,
																							"src": "13911:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 833,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "13944:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13911:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13901:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 811,
																				"id": 835,
																				"nodeType": "Return",
																				"src": "13894:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 837,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 829,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 828,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "13868:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 837,
																				"src": "13861:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 827,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13861:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13860:15:0"
																	},
																	"src": "13852:115:0"
																},
																{
																	"block": {
																		"id": 853,
																		"nodeType": "Block",
																		"src": "13996:353:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 844,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 841,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 839,
																							"src": "14018:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 842,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14025:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14018:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 843,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14035:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14018:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 851,
																					"nodeType": "Block",
																					"src": "14145:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14231:86:0",
																								"nodeType": "YulBlock",
																								"src": "14231:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14268:2:0",
																															"nodeType": "YulLiteral",
																															"src": "14268:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14272:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "14272:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14264:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "14264:3:0"
																													},
																													"nativeSrc": "14264:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "14264:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14287:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "14287:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14281:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "14281:5:0"
																													},
																													"nativeSrc": "14281:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "14281:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14257:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "14257:6:0"
																											},
																											"nativeSrc": "14257:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "14257:38:0"
																										},
																										"nativeSrc": "14257:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "14257:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 839,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14272:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 839,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14287:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 850,
																							"nodeType": "InlineAssembly",
																							"src": "14222:95:0"
																						}
																					]
																				},
																				"id": 852,
																				"nodeType": "IfStatement",
																				"src": "14014:321:0",
																				"trueBody": {
																					"id": 849,
																					"nodeType": "Block",
																					"src": "14038:101:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 846,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14067:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 845,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14060:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 847,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14060:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 848,
																							"nodeType": "ExpressionStatement",
																							"src": "14060:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 854,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 840,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 839,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "13988:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 854,
																				"src": "13975:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 838,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "13975:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13974:21:0"
																	},
																	"src": "13968:381:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 821,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1077,
																			"src": "13817:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13817:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 823,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "13831:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 824,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "13837:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 825,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "13846:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 818,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 803,
																				"src": "13796:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 817,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1038,
																			"src": "13780:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1038_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13780:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1038",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13800:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1037,
																	"src": "13780:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13780:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 855,
															"nodeType": "TryStatement",
															"src": "13776:573:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "13027:541:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "13582:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13622:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "13614:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13644:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "13636:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "13656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13694:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "13681:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 806,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13681:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13604:100:0"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "13722:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 809,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13722:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13721:6:0"
									},
									"scope": 904,
									"src": "13573:834:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "15237:2:0",
										"statements": []
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "14413:705:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15132:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15161:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "15153:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15175:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "15167:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "15187:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "15179:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "15209:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "15201:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15152:67:0"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15237:0:0"
									},
									"scope": 904,
									"src": "15123:116:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "16058:2:0",
										"statements": []
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "15245:695:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15954:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15982:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "15974:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15996:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "15988:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16008:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "16000:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16030:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "16022:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15973:67:0"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16058:0:0"
									},
									"scope": 904,
									"src": "15945:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "16609:45:0",
										"statements": [
											{
												"expression": {
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 896,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "16619:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 898,
														"indexExpression": {
															"id": 897,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "16629:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16619:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 899,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "16641:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16619:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "16619:28:0"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "16066:409:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "16542:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16575:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "16567:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16592:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "16584:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16566:33:0"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16609:0:0"
									},
									"scope": 904,
									"src": "16533:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 905,
							"src": "595:16061:0",
							"usedErrors": [],
							"usedEvents": [
								919,
								928,
								937
							]
						}
					],
					"src": "107:16550:0"
				},
				"id": 0
			},
			"fury/contracts/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "fury/contracts/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1363
						],
						"IERC721": [
							1020
						]
					},
					"id": 1021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 906,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "fury/contracts/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 907,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 1364,
							"src": "134:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 909,
										"name": "IERC165",
										"nameLocations": [
											"272:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1363,
										"src": "272:7:1"
									},
									"id": 910,
									"nodeType": "InheritanceSpecifier",
									"src": "272:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 908,
								"nodeType": "StructuredDocumentation",
								"src": "183:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1020,
							"linearizedBaseContracts": [
								1020,
								1363
							],
							"name": "IERC721",
							"nameLocation": "261:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "286:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 919,
									"name": "Transfer",
									"nameLocation": "385:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "410:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "394:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "432:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "416:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "452:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "436:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:67:1"
									},
									"src": "379:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "467:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 928,
									"name": "Approval",
									"nameLocation": "572:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "597:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "581:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "620:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "604:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "646:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "630:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:74:1"
									},
									"src": "566:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "661:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 937,
									"name": "ApprovalForAll",
									"nameLocation": "789:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "820:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "804:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "843:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "827:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "858:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "853:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 934,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "853:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:64:1"
									},
									"src": "783:85:1"
								},
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "874:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "964:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "982:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "974:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:1"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:17:1"
									},
									"scope": 1020,
									"src": "955:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "1035:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1180:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1196:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1188:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:17:1"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1236:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1228:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:15:1"
									},
									"scope": 1020,
									"src": "1171:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "1249:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 965,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1819:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1844:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1836:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1858:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1850:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1870:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1862:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1879:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 961,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1879:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:64:1"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1908:0:1"
									},
									"scope": 1020,
									"src": "1810:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "1915:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2616:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2641:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2633:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2655:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2647:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2667:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2659:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2659:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:43:1"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2684:0:1"
									},
									"scope": 1020,
									"src": "2607:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "2691:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3437:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3458:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3450:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3450:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3472:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3464:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3484:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3476:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3476:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:43:1"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3501:0:1"
									},
									"scope": 1020,
									"src": "3428:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "3508:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3974:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3990:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "3982:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4002:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "3994:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3981:29:1"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4019:0:1"
									},
									"scope": 1020,
									"src": "3965:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "4026:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4349:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4375:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4367:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4367:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4390:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4385:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4385:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4366:33:1"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4408:0:1"
									},
									"scope": 1020,
									"src": "4340:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "4415:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4568:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4588:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4580:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4579:17:1"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4628:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4620:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4620:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4619:18:1"
									},
									"scope": 1020,
									"src": "4559:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "4644:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4796:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4821:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "4813:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4836:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "4828:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4828:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:33:1"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "4869:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4869:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4868:6:1"
									},
									"scope": 1020,
									"src": "4787:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1021,
							"src": "251:4626:1",
							"usedErrors": [],
							"usedEvents": [
								919,
								928,
								937
							]
						}
					],
					"src": "108:4770:1"
				},
				"id": 1
			},
			"fury/contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "fury/contracts/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1038
						]
					},
					"id": 1039,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1022,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1023,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1038,
							"linearizedBaseContracts": [
								1038
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "327:493:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "834:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "868:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "860:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "886:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "916:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "908:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "948:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "933:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "933:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:108:2"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "977:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "977:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:8:2"
									},
									"scope": 1038,
									"src": "825:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1039,
							"src": "295:692:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:872:2"
				},
				"id": 2
			},
			"fury/contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "fury/contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1363
						],
						"IERC721": [
							1020
						],
						"IERC721Metadata": [
							1065
						]
					},
					"id": 1066,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1040,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"absolutePath": "fury/contracts/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 1021,
							"src": "138:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1043,
										"name": "IERC721",
										"nameLocations": [
											"327:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1020,
										"src": "327:7:3"
									},
									"id": 1044,
									"nodeType": "InheritanceSpecifier",
									"src": "327:7:3"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1042,
								"nodeType": "StructuredDocumentation",
								"src": "164:133:3",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1065,
							"linearizedBaseContracts": [
								1065,
								1020,
								1363
							],
							"name": "IERC721Metadata",
							"nameLocation": "308:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "341:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "413:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:2:3"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "443:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1047,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "443:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:15:3"
									},
									"scope": 1065,
									"src": "404:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "464:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "538:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "544:2:3"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "570:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1053,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "570:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "569:15:3"
									},
									"scope": 1065,
									"src": "529:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "591:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "695:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "712:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "704:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:17:3"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "744:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "744:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:15:3"
									},
									"scope": 1065,
									"src": "686:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1066,
							"src": "298:463:3",
							"usedErrors": [],
							"usedEvents": [
								919,
								928,
								937
							]
						}
					],
					"src": "112:650:3"
				},
				"id": 3
			},
			"fury/contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "fury/contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1087
						]
					},
					"id": 1088,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1067,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "86:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1068,
								"nodeType": "StructuredDocumentation",
								"src": "112:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1087,
							"linearizedBaseContracts": [
								1087
							],
							"name": "Context",
							"nameLocation": "627:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "703:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1073,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "720:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "724:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "720:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1072,
												"id": 1075,
												"nodeType": "Return",
												"src": "713:17:4"
											}
										]
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "650:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:2:4"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "694:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:9:4"
									},
									"scope": 1087,
									"src": "641:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "810:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1082,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "827:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "831:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "827:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1081,
												"id": 1084,
												"nodeType": "Return",
												"src": "820:15:4"
											}
										]
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "752:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "760:2:4"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "794:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "794:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:16:4"
									},
									"scope": 1087,
									"src": "743:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1088,
							"src": "609:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:759:4"
				},
				"id": 4
			},
			"fury/contracts/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "fury/contracts/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2387
						],
						"SignedMath": [
							2492
						],
						"Strings": [
							1328
						]
					},
					"id": 1329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1089,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "fury/contracts/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 2388,
							"src": "127:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "fury/contracts/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1091,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 2493,
							"src": "153:31:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1092,
								"nodeType": "StructuredDocumentation",
								"src": "186:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1328,
							"linearizedBaseContracts": [
								1328
							],
							"name": "Strings",
							"nameLocation": "229:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1095,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "268:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "243:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1093,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "243:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1094,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "279:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1098,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "326:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "303:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1096,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "303:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1097,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "344:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "519:625:5",
										"statements": [
											{
												"id": 1144,
												"nodeType": "UncheckedBlock",
												"src": "529:609:5",
												"statements": [
													{
														"assignments": [
															1107
														],
														"declarations": [
															{
																"constant": false,
																"id": 1107,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "561:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 1144,
																"src": "553:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1106,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "553:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1114,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1110,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "581:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1108,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2387,
																		"src": "570:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2387_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "575:5:5",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2224,
																	"src": "570:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "570:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "590:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "570:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "553:38:5"
													},
													{
														"assignments": [
															1116
														],
														"declarations": [
															{
																"constant": false,
																"id": 1116,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "619:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 1144,
																"src": "605:20:5",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1115,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "605:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1121,
														"initialValue": {
															"arguments": [
																{
																	"id": 1119,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "639:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "628:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1117,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "632:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "628:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "605:41:5"
													},
													{
														"assignments": [
															1123
														],
														"declarations": [
															{
																"constant": false,
																"id": 1123,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "668:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 1144,
																"src": "660:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1122,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "660:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1124,
														"nodeType": "VariableDeclarationStatement",
														"src": "660:11:5"
													},
													{
														"AST": {
															"nativeSrc": "741:67:5",
															"nodeType": "YulBlock",
															"src": "741:67:5",
															"statements": [
																{
																	"nativeSrc": "759:35:5",
																	"nodeType": "YulAssignment",
																	"src": "759:35:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "770:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "782:2:5",
																						"nodeType": "YulLiteral",
																						"src": "782:2:5",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "786:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "786:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "778:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "778:3:5"
																				},
																				"nativeSrc": "778:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "778:15:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "766:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:5"
																		},
																		"nativeSrc": "766:28:5",
																		"nodeType": "YulFunctionCall",
																		"src": "766:28:5"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "759:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "759:3:5"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1116,
																"isOffset": false,
																"isSlot": false,
																"src": "770:6:5",
																"valueSize": 1
															},
															{
																"declaration": 1107,
																"isOffset": false,
																"isSlot": false,
																"src": "786:6:5",
																"valueSize": 1
															},
															{
																"declaration": 1123,
																"isOffset": false,
																"isSlot": false,
																"src": "759:3:5",
																"valueSize": 1
															}
														],
														"id": 1125,
														"nodeType": "InlineAssembly",
														"src": "732:76:5"
													},
													{
														"body": {
															"id": 1140,
															"nodeType": "Block",
															"src": "834:267:5",
															"statements": [
																{
																	"expression": {
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "852:5:5",
																		"subExpression": {
																			"id": 1127,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1123,
																			"src": "852:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1129,
																	"nodeType": "ExpressionStatement",
																	"src": "852:5:5"
																},
																{
																	"AST": {
																		"nativeSrc": "935:84:5",
																		"nodeType": "YulBlock",
																		"src": "935:84:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "965:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "965:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "979:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "979:5:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "986:2:5",
																											"nodeType": "YulLiteral",
																											"src": "986:2:5",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "975:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "975:3:5"
																									},
																									"nativeSrc": "975:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "975:14:5"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "991:8:5",
																									"nodeType": "YulIdentifier",
																									"src": "991:8:5"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "970:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "970:4:5"
																							},
																							"nativeSrc": "970:30:5",
																							"nodeType": "YulFunctionCall",
																							"src": "970:30:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "957:7:5",
																						"nodeType": "YulIdentifier",
																						"src": "957:7:5"
																					},
																					"nativeSrc": "957:44:5",
																					"nodeType": "YulFunctionCall",
																					"src": "957:44:5"
																				},
																				"nativeSrc": "957:44:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "957:44:5"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1095,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "991:8:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1123,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "965:3:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1101,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "979:5:5",
																			"valueSize": 1
																		}
																	],
																	"id": 1130,
																	"nodeType": "InlineAssembly",
																	"src": "926:93:5"
																},
																{
																	"expression": {
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1131,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "1036:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1036:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1134,
																	"nodeType": "ExpressionStatement",
																	"src": "1036:11:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1135,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "1069:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1078:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1069:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1139,
																	"nodeType": "IfStatement",
																	"src": "1065:21:5",
																	"trueBody": {
																		"id": 1138,
																		"nodeType": "Break",
																		"src": "1081:5:5"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "828:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1141,
														"nodeType": "WhileStatement",
														"src": "821:280:5"
													},
													{
														"expression": {
															"id": 1142,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "1121:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1105,
														"id": 1143,
														"nodeType": "Return",
														"src": "1114:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "353:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "457:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "474:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "466:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:15:5"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "504:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1103,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:15:5"
									},
									"scope": 1328,
									"src": "448:696:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "1314:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1158,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "1355:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1363:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1355:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1373:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1355:20:5",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1367:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1167,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "1401:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1165,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2492,
																					"src": "1386:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2492_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1397:3:5",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2491,
																				"src": "1386:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1386:21:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1164,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1146,
																			1174
																		],
																		"referencedDeclaration": 1146,
																		"src": "1377:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1377:31:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1156,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1338:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1342:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1338:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1338:71:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1331:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1154,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1331:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1331:79:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1153,
												"id": 1172,
												"nodeType": "Return",
												"src": "1324:86:5"
											}
										]
									},
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "1150:89:5",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1253:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1269:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1262:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1148,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1262:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:14:5"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1299:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1151,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1299:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:15:5"
									},
									"scope": 1328,
									"src": "1244:173:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "1596:100:5",
										"statements": [
											{
												"id": 1192,
												"nodeType": "UncheckedBlock",
												"src": "1606:84:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1183,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "1649:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1186,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1177,
																				"src": "1668:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1184,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2387,
																				"src": "1656:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2387_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1661:6:5",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2347,
																			"src": "1656:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1656:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1677:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1656:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1182,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1194,
																	1270,
																	1290
																],
																"referencedDeclaration": 1270,
																"src": "1637:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1637:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1181,
														"id": 1191,
														"nodeType": "Return",
														"src": "1630:49:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "1423:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1531:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1543:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:15:5"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1581:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1179,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1581:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1580:15:5"
									},
									"scope": 1328,
									"src": "1522:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "1909:347:5",
										"statements": [
											{
												"assignments": [
													1205
												],
												"declarations": [
													{
														"constant": false,
														"id": 1205,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1932:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1269,
														"src": "1919:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1204,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1919:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1214,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1951:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1209,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "1955:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1951:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1964:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1951:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1941:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1206,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1945:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1941:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1919:47:5"
											},
											{
												"expression": {
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1215,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "1976:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1217,
														"indexExpression": {
															"hexValue": "30",
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1983:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1976:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1988:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1976:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "1976:15:5"
											},
											{
												"expression": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1221,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "2001:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1223,
														"indexExpression": {
															"hexValue": "31",
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2008:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2001:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2013:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2001:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "2001:15:5"
											},
											{
												"body": {
													"id": 1255,
													"nodeType": "Block",
													"src": "2071:83:5",
													"statements": [
														{
															"expression": {
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1241,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1205,
																		"src": "2085:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1243,
																	"indexExpression": {
																		"id": 1242,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1228,
																		"src": "2092:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2085:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1244,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "2097:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1248,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1245,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "2106:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2114:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2106:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2097:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2085:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1250,
															"nodeType": "ExpressionStatement",
															"src": "2085:33:5"
														},
														{
															"expression": {
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1251,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "2132:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2132:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1254,
															"nodeType": "ExpressionStatement",
															"src": "2132:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1235,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2059:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2063:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2059:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"initializationExpression": {
													"assignments": [
														1228
													],
													"declarations": [
														{
															"constant": false,
															"id": 1228,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2039:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1256,
															"src": "2031:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1227,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2031:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1234,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2043:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1230,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "2047:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2043:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2056:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2043:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2031:26:5"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2066:3:5",
														"subExpression": {
															"id": 1238,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "2068:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1240,
													"nodeType": "ExpressionStatement",
													"src": "2066:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2026:128:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1258,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "2171:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2180:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2171:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2183:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2163:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "2163:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1266,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "2242:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2235:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1264,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2235:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1203,
												"id": 1268,
												"nodeType": "Return",
												"src": "2228:21:5"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "1702:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1828:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1848:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "1840:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1863:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "1855:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1839:31:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "1894:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1894:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:15:5"
									},
									"scope": 1328,
									"src": "1819:437:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "2481:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1283,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1273,
																			"src": "2526:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2518:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1281,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2518:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2518:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2510:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2510:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2510:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1286,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "2534:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1278,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1194,
															1270,
															1290
														],
														"referencedDeclaration": 1270,
														"src": "2498:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2498:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1288,
												"nodeType": "Return",
												"src": "2491:59:5"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "2262:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2417:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2437:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "2429:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:14:5"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "2466:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1275,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2466:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2465:15:5"
									},
									"scope": 1328,
									"src": "2408:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "2712:104:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1302,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "2735:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2729:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1300,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2729:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2738:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2729:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1307,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "2754:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2748:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1305,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2748:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2748:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2757:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2748:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2729:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1314,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "2783:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2777:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1312,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2777:5:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2777:8:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1311,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "2767:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2767:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1320,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "2806:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2800:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1318,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2800:5:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2800:8:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1317,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "2790:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2790:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "2767:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2729:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1325,
												"nodeType": "Return",
												"src": "2722:87:5"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "2563:66:5",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2643:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2663:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2649:15:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1292,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2649:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2680:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2666:15:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2666:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2648:34:5"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2706:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2706:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:6:5"
									},
									"scope": 1328,
									"src": "2634:182:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1329,
							"src": "221:2597:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2718:5"
				},
				"id": 5
			},
			"fury/contracts/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "fury/contracts/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1351
						],
						"IERC165": [
							1363
						]
					},
					"id": 1352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:6"
						},
						{
							"absolutePath": "fury/contracts/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1352,
							"sourceUnit": 1364,
							"src": "125:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1333,
										"name": "IERC165",
										"nameLocations": [
											"657:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1363,
										"src": "657:7:6"
									},
									"id": 1334,
									"nodeType": "InheritanceSpecifier",
									"src": "657:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1332,
								"nodeType": "StructuredDocumentation",
								"src": "150:478:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1351,
							"linearizedBaseContracts": [
								1351,
								1363
							],
							"name": "ERC165",
							"nameLocation": "647:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1362
									],
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "814:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1342,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "831:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1344,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "851:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1363_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1363_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1343,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "846:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "846:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1363",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "860:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "846:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "831:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1341,
												"id": 1348,
												"nodeType": "Return",
												"src": "824:47:6"
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "671:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "741:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "766:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "759:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1336,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "759:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:20:6"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "808:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "808:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:6:6"
									},
									"scope": 1351,
									"src": "732:146:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1352,
							"src": "629:251:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:782:6"
				},
				"id": 6
			},
			"fury/contracts/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "fury/contracts/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1363
						]
					},
					"id": 1364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1353,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1354,
								"nodeType": "StructuredDocumentation",
								"src": "126:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1363,
							"linearizedBaseContracts": [
								1363
							],
							"name": "IERC165",
							"nameLocation": "416:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "430:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "784:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "809:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "802:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "802:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:20:7"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "845:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:6:7"
									},
									"scope": 1363,
									"src": "775:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1364,
							"src": "406:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:754:7"
				},
				"id": 7
			},
			"fury/contracts/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "fury/contracts/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2387
						]
					},
					"id": 2388,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1365,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1366,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2387,
							"linearizedBaseContracts": [
								2387
							],
							"name": "Math",
							"nameLocation": "211:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1370,
									"members": [
										{
											"id": 1367,
											"name": "Down",
											"nameLocation": "246:4:8",
											"nodeType": "EnumValue",
											"src": "246:4:8"
										},
										{
											"id": 1368,
											"name": "Up",
											"nameLocation": "288:2:8",
											"nodeType": "EnumValue",
											"src": "288:2:8"
										},
										{
											"id": 1369,
											"name": "Zero",
											"nameLocation": "319:4:8",
											"nodeType": "EnumValue",
											"src": "319:4:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "227:8:8",
									"nodeType": "EnumDefinition",
									"src": "222:122:8"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "562:140:8",
										"statements": [
											{
												"id": 1400,
												"nodeType": "UncheckedBlock",
												"src": "572:124:8",
												"statements": [
													{
														"assignments": [
															1383
														],
														"declarations": [
															{
																"constant": false,
																"id": 1383,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "604:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1400,
																"src": "596:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1382,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "596:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1387,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1384,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "608:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1385,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "612:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "608:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "596:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1388,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1383,
																"src": "631:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1389,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "635:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "631:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1395,
														"nodeType": "IfStatement",
														"src": "627:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "646:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "653:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1393,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "645:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1381,
															"id": 1394,
															"nodeType": "Return",
															"src": "638:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "677:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1397,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "683:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1398,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "676:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1381,
														"id": 1399,
														"nodeType": "Return",
														"src": "669:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "350:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "495:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "502:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "513:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:22:8"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "547:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "547:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "553:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:15:8"
									},
									"scope": 2387,
									"src": "486:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "923:113:8",
										"statements": [
											{
												"id": 1428,
												"nodeType": "UncheckedBlock",
												"src": "933:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1414,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "961:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1415,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "965:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "961:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1421,
														"nodeType": "IfStatement",
														"src": "957:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "976:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "983:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1419,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "975:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1413,
															"id": 1420,
															"nodeType": "Return",
															"src": "968:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1007:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1423,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "1013:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1424,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "1017:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1013:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1426,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1006:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1413,
														"id": 1427,
														"nodeType": "Return",
														"src": "999:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "708:134:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "856:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "871:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "863:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "882:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "874:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:22:8"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "908:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "914:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "907:15:8"
									},
									"scope": 2387,
									"src": "847:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "1260:417:8",
										"statements": [
											{
												"id": 1470,
												"nodeType": "UncheckedBlock",
												"src": "1270:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1442,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "1528:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1533:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1528:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1449,
														"nodeType": "IfStatement",
														"src": "1524:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1544:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1550:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1447,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1543:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1441,
															"id": 1448,
															"nodeType": "Return",
															"src": "1536:16:8"
														}
													},
													{
														"assignments": [
															1451
														],
														"declarations": [
															{
																"constant": false,
																"id": 1451,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1574:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1470,
																"src": "1566:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1450,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1566:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1455,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1452,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "1578:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1453,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "1582:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1578:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1566:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1456,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "1601:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1457,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1433,
																	"src": "1605:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1459,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "1610:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1465,
														"nodeType": "IfStatement",
														"src": "1597:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1621:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1628:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1463,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1620:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1441,
															"id": 1464,
															"nodeType": "Return",
															"src": "1613:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1652:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1467,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "1658:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1468,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1651:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1441,
														"id": 1469,
														"nodeType": "Return",
														"src": "1644:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "1042:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1193:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1208:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "1200:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1219:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "1211:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:22:8"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "1245:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1245:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "1251:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1244:15:8"
									},
									"scope": 2387,
									"src": "1184:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "1902:114:8",
										"statements": [
											{
												"id": 1498,
												"nodeType": "UncheckedBlock",
												"src": "1912:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1484,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "1940:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1945:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1940:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1491,
														"nodeType": "IfStatement",
														"src": "1936:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1956:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1963:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1489,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1955:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1483,
															"id": 1490,
															"nodeType": "Return",
															"src": "1948:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1987:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1493,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "1993:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1494,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "1997:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1993:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1496,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1986:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1483,
														"id": 1497,
														"nodeType": "Return",
														"src": "1979:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "1683:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v5.0._"
									},
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1835:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1850:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1842:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1861:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1853:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1841:22:8"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1887:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1887:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1893:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:15:8"
									},
									"scope": 2387,
									"src": "1826:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "2251:114:8",
										"statements": [
											{
												"id": 1526,
												"nodeType": "UncheckedBlock",
												"src": "2261:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1512,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "2289:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2294:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2289:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1519,
														"nodeType": "IfStatement",
														"src": "2285:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2305:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2312:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1517,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2304:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1511,
															"id": 1518,
															"nodeType": "Return",
															"src": "2297:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2336:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1521,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1503,
																		"src": "2342:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1522,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "2346:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2342:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1524,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2335:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1511,
														"id": 1525,
														"nodeType": "Return",
														"src": "2328:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "2022:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v5.0._"
									},
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2184:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2199:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2191:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2210:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2202:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:22:8"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2236:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2236:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2242:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2235:15:8"
									},
									"scope": 2387,
									"src": "2175:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "2502:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1538,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "2519:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1539,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "2523:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2519:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1542,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "2531:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2519:13:8",
													"trueExpression": {
														"id": 1541,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "2527:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1537,
												"id": 1544,
												"nodeType": "Return",
												"src": "2512:20:8"
											}
										]
									},
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "2371:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2444:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2456:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2448:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2467:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2459:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:22:8"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2493:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2493:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:9:8"
									},
									"scope": 2387,
									"src": "2435:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "2677:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1556,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "2694:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1557,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "2698:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2694:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1560,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "2706:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2694:13:8",
													"trueExpression": {
														"id": 1559,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "2702:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1555,
												"id": 1562,
												"nodeType": "Return",
												"src": "2687:20:8"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "2545:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2619:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2631:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2623:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2642:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2634:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2622:22:8"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2668:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:9:8"
									},
									"scope": 2387,
									"src": "2610:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "2898:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1574,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "2953:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1575,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1569,
																	"src": "2957:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1577,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2952:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1578,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "2963:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1579,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1569,
																		"src": "2967:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2963:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1581,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2962:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2972:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2962:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2952:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1573,
												"id": 1585,
												"nodeType": "Return",
												"src": "2945:28:8"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "2720:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2836:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2852:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "2844:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2863:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "2855:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:22:8"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "2889:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2889:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2888:9:8"
									},
									"scope": 2387,
									"src": "2827:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "3250:123:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1597,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "3338:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3343:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3338:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1601,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "3352:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3356:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3352:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1604,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3351:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1605,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "3361:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3351:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3365:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3351:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3338:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3347:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1596,
												"id": 1610,
												"nodeType": "Return",
												"src": "3331:35:8"
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "2986:188:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3188:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3204:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3196:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3215:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3207:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3207:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:22:8"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3241:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3241:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3240:9:8"
									},
									"scope": 2387,
									"src": "3179:194:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "3787:4115:8",
										"statements": [
											{
												"id": 1733,
												"nodeType": "UncheckedBlock",
												"src": "3797:4099:8",
												"statements": [
													{
														"assignments": [
															1625
														],
														"declarations": [
															{
																"constant": false,
																"id": 1625,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4126:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1733,
																"src": "4118:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1624,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4118:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1626,
														"nodeType": "VariableDeclarationStatement",
														"src": "4118:13:8"
													},
													{
														"assignments": [
															1628
														],
														"declarations": [
															{
																"constant": false,
																"id": 1628,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4198:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1733,
																"src": "4190:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1627,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4190:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1629,
														"nodeType": "VariableDeclarationStatement",
														"src": "4190:13:8"
													},
													{
														"AST": {
															"nativeSrc": "4270:157:8",
															"nodeType": "YulBlock",
															"src": "4270:157:8",
															"statements": [
																{
																	"nativeSrc": "4288:30:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4288:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4305:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4305:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4308:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4308:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4315:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4315:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4311:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4311:3:8"
																				},
																				"nativeSrc": "4311:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4311:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4298:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4298:6:8"
																		},
																		"nativeSrc": "4298:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4298:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4292:2:8",
																			"nodeType": "YulTypedName",
																			"src": "4292:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4335:18:8",
																	"nodeType": "YulAssignment",
																	"src": "4335:18:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4348:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4348:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4351:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4351:1:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4344:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4344:3:8"
																		},
																		"nativeSrc": "4344:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4344:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4335:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4335:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "4370:43:8",
																	"nodeType": "YulAssignment",
																	"src": "4370:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4387:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4387:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4391:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4391:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4383:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4383:3:8"
																				},
																				"nativeSrc": "4383:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4383:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4402:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4402:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4406:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4406:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4399:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4399:2:8"
																				},
																				"nativeSrc": "4399:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4399:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4379:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4379:3:8"
																		},
																		"nativeSrc": "4379:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4379:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4370:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4370:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1625,
																"isOffset": false,
																"isSlot": false,
																"src": "4335:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1625,
																"isOffset": false,
																"isSlot": false,
																"src": "4391:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1625,
																"isOffset": false,
																"isSlot": false,
																"src": "4406:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1628,
																"isOffset": false,
																"isSlot": false,
																"src": "4370:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1615,
																"isOffset": false,
																"isSlot": false,
																"src": "4305:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1615,
																"isOffset": false,
																"isSlot": false,
																"src": "4348:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1617,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1617,
																"isOffset": false,
																"isSlot": false,
																"src": "4351:1:8",
																"valueSize": 1
															}
														],
														"id": 1630,
														"nodeType": "InlineAssembly",
														"src": "4261:166:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1631,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "4508:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4517:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4508:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1639,
														"nodeType": "IfStatement",
														"src": "4504:368:8",
														"trueBody": {
															"id": 1638,
															"nodeType": "Block",
															"src": "4520:352:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1634,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1625,
																			"src": "4838:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1635,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1619,
																			"src": "4846:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4838:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1623,
																	"id": 1637,
																	"nodeType": "Return",
																	"src": "4831:26:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1641,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "4982:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1642,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "4996:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4982:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1640,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4974:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4974:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1646,
														"nodeType": "ExpressionStatement",
														"src": "4974:53:8"
													},
													{
														"assignments": [
															1648
														],
														"declarations": [
															{
																"constant": false,
																"id": 1648,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5291:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1733,
																"src": "5283:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1647,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5283:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1649,
														"nodeType": "VariableDeclarationStatement",
														"src": "5283:17:8"
													},
													{
														"AST": {
															"nativeSrc": "5323:291:8",
															"nodeType": "YulBlock",
															"src": "5323:291:8",
															"statements": [
																{
																	"nativeSrc": "5392:38:8",
																	"nodeType": "YulAssignment",
																	"src": "5392:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5412:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5412:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5415:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5415:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5418:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "5418:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5405:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5405:6:8"
																		},
																		"nativeSrc": "5405:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5405:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5392:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "5392:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "5512:41:8",
																	"nodeType": "YulAssignment",
																	"src": "5512:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5525:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5525:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5535:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5535:9:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5546:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5546:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5532:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "5532:2:8"
																				},
																				"nativeSrc": "5532:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5532:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5521:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5521:3:8"
																		},
																		"nativeSrc": "5521:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5521:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5512:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5512:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "5570:30:8",
																	"nodeType": "YulAssignment",
																	"src": "5570:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5583:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5583:5:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5590:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5590:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5579:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5579:3:8"
																		},
																		"nativeSrc": "5579:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5579:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5570:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5570:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1619,
																"isOffset": false,
																"isSlot": false,
																"src": "5418:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1625,
																"isOffset": false,
																"isSlot": false,
																"src": "5546:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1625,
																"isOffset": false,
																"isSlot": false,
																"src": "5570:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1625,
																"isOffset": false,
																"isSlot": false,
																"src": "5583:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1628,
																"isOffset": false,
																"isSlot": false,
																"src": "5512:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1628,
																"isOffset": false,
																"isSlot": false,
																"src": "5525:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1648,
																"isOffset": false,
																"isSlot": false,
																"src": "5392:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1648,
																"isOffset": false,
																"isSlot": false,
																"src": "5535:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1648,
																"isOffset": false,
																"isSlot": false,
																"src": "5590:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1615,
																"isOffset": false,
																"isSlot": false,
																"src": "5412:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1617,
																"isOffset": false,
																"isSlot": false,
																"src": "5415:1:8",
																"valueSize": 1
															}
														],
														"id": 1650,
														"nodeType": "InlineAssembly",
														"src": "5314:300:8"
													},
													{
														"assignments": [
															1652
														],
														"declarations": [
															{
																"constant": false,
																"id": 1652,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5929:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1733,
																"src": "5921:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1651,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5921:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1660,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1653,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "5936:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "5951:12:8",
																			"subExpression": {
																				"id": 1654,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1619,
																				"src": "5952:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5966:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5951:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1658,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5950:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5936:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5921:47:8"
													},
													{
														"AST": {
															"nativeSrc": "5991:362:8",
															"nodeType": "YulBlock",
															"src": "5991:362:8",
															"statements": [
																{
																	"nativeSrc": "6056:37:8",
																	"nodeType": "YulAssignment",
																	"src": "6056:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6075:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "6075:11:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6088:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6088:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6071:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6071:3:8"
																		},
																		"nativeSrc": "6071:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6071:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6056:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "6056:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "6160:25:8",
																	"nodeType": "YulAssignment",
																	"src": "6160:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6173:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6173:5:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6180:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6180:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6169:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:8"
																		},
																		"nativeSrc": "6169:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6169:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6160:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "6160:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "6300:39:8",
																	"nodeType": "YulAssignment",
																	"src": "6300:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6320:1:8",
																								"nodeType": "YulLiteral",
																								"src": "6320:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6323:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "6323:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6316:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6316:3:8"
																						},
																						"nativeSrc": "6316:12:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6316:12:8"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6330:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "6330:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6312:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6312:3:8"
																				},
																				"nativeSrc": "6312:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6312:23:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6337:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6337:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6308:3:8"
																		},
																		"nativeSrc": "6308:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6308:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6300:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "6300:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1619,
																"isOffset": false,
																"isSlot": false,
																"src": "6056:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1619,
																"isOffset": false,
																"isSlot": false,
																"src": "6075:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1625,
																"isOffset": false,
																"isSlot": false,
																"src": "6160:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1625,
																"isOffset": false,
																"isSlot": false,
																"src": "6173:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1652,
																"isOffset": false,
																"isSlot": false,
																"src": "6088:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1652,
																"isOffset": false,
																"isSlot": false,
																"src": "6180:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1652,
																"isOffset": false,
																"isSlot": false,
																"src": "6300:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1652,
																"isOffset": false,
																"isSlot": false,
																"src": "6323:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1652,
																"isOffset": false,
																"isSlot": false,
																"src": "6330:4:8",
																"valueSize": 1
															}
														],
														"id": 1661,
														"nodeType": "InlineAssembly",
														"src": "5982:371:8"
													},
													{
														"expression": {
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1662,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "6419:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1663,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1628,
																	"src": "6428:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1664,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1652,
																	"src": "6436:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6428:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6419:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1667,
														"nodeType": "ExpressionStatement",
														"src": "6419:21:8"
													},
													{
														"assignments": [
															1669
														],
														"declarations": [
															{
																"constant": false,
																"id": 1669,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6766:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1733,
																"src": "6758:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1668,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6758:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1676,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6777:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1671,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1619,
																			"src": "6781:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6777:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1673,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6776:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6796:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6776:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6758:39:8"
													},
													{
														"expression": {
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1677,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "7014:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7025:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1679,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "7029:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1680,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "7043:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7029:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7025:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7014:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1684,
														"nodeType": "ExpressionStatement",
														"src": "7014:36:8"
													},
													{
														"expression": {
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1685,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "7083:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7094:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1687,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "7098:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1688,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "7112:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7098:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7094:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7083:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1692,
														"nodeType": "ExpressionStatement",
														"src": "7083:36:8"
													},
													{
														"expression": {
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1693,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "7153:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7164:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1695,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "7168:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1696,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "7182:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7168:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7164:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7153:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1700,
														"nodeType": "ExpressionStatement",
														"src": "7153:36:8"
													},
													{
														"expression": {
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1701,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "7223:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1703,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "7238:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1704,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "7252:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7238:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7234:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7223:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1708,
														"nodeType": "ExpressionStatement",
														"src": "7223:36:8"
													},
													{
														"expression": {
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1709,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "7293:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7304:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1711,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "7308:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1712,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "7322:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7308:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7304:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7293:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1716,
														"nodeType": "ExpressionStatement",
														"src": "7293:36:8"
													},
													{
														"expression": {
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1717,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "7364:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7375:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1719,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "7379:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1720,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "7393:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7379:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7375:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7364:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1724,
														"nodeType": "ExpressionStatement",
														"src": "7364:36:8"
													},
													{
														"expression": {
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1725,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "7834:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1726,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "7843:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1727,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "7851:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7843:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7834:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1730,
														"nodeType": "ExpressionStatement",
														"src": "7834:24:8"
													},
													{
														"expression": {
															"id": 1731,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "7879:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1623,
														"id": 1732,
														"nodeType": "Return",
														"src": "7872:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "3379:305:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3698:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3713:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "3705:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3705:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3724:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "3716:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3716:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3735:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "3727:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3727:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3704:43:8"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3779:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "3771:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3770:16:8"
									},
									"scope": 2387,
									"src": "3689:4213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "8144:189:8",
										"statements": [
											{
												"assignments": [
													1751
												],
												"declarations": [
													{
														"constant": false,
														"id": 1751,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8162:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1778,
														"src": "8154:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1750,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8154:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1757,
												"initialValue": {
													"arguments": [
														{
															"id": 1753,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "8178:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1754,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "8181:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1755,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "8184:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1752,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1735,
															1779
														],
														"referencedDeclaration": 1735,
														"src": "8171:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8171:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8154:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1370",
															"typeString": "enum Math.Rounding"
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1758,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "8210:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1370",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1759,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "8222:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1370_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8231:2:8",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1368,
															"src": "8222:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1370",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8210:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1763,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "8244:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1764,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "8247:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1765,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "8250:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1762,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8237:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8237:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8265:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8237:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8210:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1775,
												"nodeType": "IfStatement",
												"src": "8206:98:8",
												"trueBody": {
													"id": 1774,
													"nodeType": "Block",
													"src": "8268:36:8",
													"statements": [
														{
															"expression": {
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1770,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "8282:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8292:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8282:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1773,
															"nodeType": "ExpressionStatement",
															"src": "8282:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1776,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1751,
													"src": "8320:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1749,
												"id": 1777,
												"nodeType": "Return",
												"src": "8313:13:8"
											}
										]
									},
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "7908:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8043:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8058:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "8050:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8050:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8069:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "8061:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8061:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8080:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "8072:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8072:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8102:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "8093:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1370",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1744,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1743,
														"name": "Rounding",
														"nameLocations": [
															"8093:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1370,
														"src": "8093:8:8"
													},
													"referencedDeclaration": 1370,
													"src": "8093:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1370",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8049:62:8"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "8135:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8134:9:8"
									},
									"scope": 2387,
									"src": "8034:299:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "8609:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1787,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "8623:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8628:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8623:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1793,
												"nodeType": "IfStatement",
												"src": "8619:45:8",
												"trueBody": {
													"id": 1792,
													"nodeType": "Block",
													"src": "8631:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8652:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1786,
															"id": 1791,
															"nodeType": "Return",
															"src": "8645:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1795
												],
												"declarations": [
													{
														"constant": false,
														"id": 1795,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9351:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "9343:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9343:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1804,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9360:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1798,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1782,
																			"src": "9371:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1797,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2059,
																			2095
																		],
																		"referencedDeclaration": 2059,
																		"src": "9366:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9366:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9377:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9366:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1802,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9365:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9360:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9343:36:8"
											},
											{
												"id": 1889,
												"nodeType": "UncheckedBlock",
												"src": "9780:408:8",
												"statements": [
													{
														"expression": {
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1805,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "9804:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1806,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1795,
																				"src": "9814:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1807,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1782,
																					"src": "9823:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1808,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1795,
																					"src": "9827:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9823:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9814:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1811,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9813:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9838:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9813:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9804:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1815,
														"nodeType": "ExpressionStatement",
														"src": "9804:35:8"
													},
													{
														"expression": {
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1816,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "9853:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1817,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1795,
																				"src": "9863:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1818,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1782,
																					"src": "9872:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1819,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1795,
																					"src": "9876:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9872:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9863:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1822,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9862:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9887:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9862:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9853:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1826,
														"nodeType": "ExpressionStatement",
														"src": "9853:35:8"
													},
													{
														"expression": {
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1827,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "9902:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1828,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1795,
																				"src": "9912:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1829,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1782,
																					"src": "9921:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1830,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1795,
																					"src": "9925:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9921:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9912:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1833,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9911:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9936:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9911:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9902:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1837,
														"nodeType": "ExpressionStatement",
														"src": "9902:35:8"
													},
													{
														"expression": {
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1838,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "9951:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1839,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1795,
																				"src": "9961:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1840,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1782,
																					"src": "9970:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1841,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1795,
																					"src": "9974:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9970:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9961:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1844,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9960:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9985:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9960:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9951:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1848,
														"nodeType": "ExpressionStatement",
														"src": "9951:35:8"
													},
													{
														"expression": {
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1849,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "10000:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1850,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1795,
																				"src": "10010:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1851,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1782,
																					"src": "10019:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1852,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1795,
																					"src": "10023:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10019:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10010:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1855,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10009:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10034:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10009:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10000:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1859,
														"nodeType": "ExpressionStatement",
														"src": "10000:35:8"
													},
													{
														"expression": {
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1860,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "10049:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1861,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1795,
																				"src": "10059:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1862,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1782,
																					"src": "10068:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1863,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1795,
																					"src": "10072:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10068:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10059:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1866,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10058:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10083:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10058:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10049:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1870,
														"nodeType": "ExpressionStatement",
														"src": "10049:35:8"
													},
													{
														"expression": {
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1871,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "10098:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1872,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1795,
																				"src": "10108:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1873,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1782,
																					"src": "10117:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1874,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1795,
																					"src": "10121:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10117:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10108:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1877,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10107:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10132:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10107:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10098:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1881,
														"nodeType": "ExpressionStatement",
														"src": "10098:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1883,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "10158:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1884,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1782,
																		"src": "10166:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1885,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "10170:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10166:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1882,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "10154:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10154:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1786,
														"id": 1888,
														"nodeType": "Return",
														"src": "10147:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "8339:208:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8561:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8574:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "8566:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8566:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8565:11:8"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "8600:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8600:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8599:9:8"
									},
									"scope": 2387,
									"src": "8552:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "10370:161:8",
										"statements": [
											{
												"id": 1925,
												"nodeType": "UncheckedBlock",
												"src": "10380:145:8",
												"statements": [
													{
														"assignments": [
															1903
														],
														"declarations": [
															{
																"constant": false,
																"id": 1903,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10412:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1925,
																"src": "10404:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1902,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10404:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1907,
														"initialValue": {
															"arguments": [
																{
																	"id": 1905,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "10426:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1904,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1891,
																	1927
																],
																"referencedDeclaration": 1891,
																"src": "10421:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10421:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10404:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1908,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1903,
																"src": "10449:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1370",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1912,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1909,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1897,
																					"src": "10459:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1370",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1910,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1370,
																						"src": "10471:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1370_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1911,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "10480:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1368,
																					"src": "10471:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1370",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "10459:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1915,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1913,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1903,
																						"src": "10486:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1914,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1903,
																						"src": "10495:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10486:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1916,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1894,
																					"src": "10504:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10486:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10459:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10512:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10459:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10508:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1922,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10458:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10449:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1901,
														"id": 1924,
														"nodeType": "Return",
														"src": "10442:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "10200:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10303:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10316:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "10308:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10308:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10328:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "10319:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1370",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1896,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1895,
														"name": "Rounding",
														"nameLocations": [
															"10319:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1370,
														"src": "10319:8:8"
													},
													"referencedDeclaration": 1370,
													"src": "10319:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1370",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10307:30:8"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "10361:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10361:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10360:9:8"
									},
									"scope": 2387,
									"src": "10294:237:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "10716:922:8",
										"statements": [
											{
												"assignments": [
													1936
												],
												"declarations": [
													{
														"constant": false,
														"id": 1936,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10734:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2058,
														"src": "10726:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1935,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10726:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1938,
												"initialValue": {
													"hexValue": "30",
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10743:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10726:18:8"
											},
											{
												"id": 2055,
												"nodeType": "UncheckedBlock",
												"src": "10754:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1939,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "10782:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10791:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10782:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10797:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10782:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1953,
														"nodeType": "IfStatement",
														"src": "10778:99:8",
														"trueBody": {
															"id": 1952,
															"nodeType": "Block",
															"src": "10800:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1944,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "10818:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10828:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10818:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1947,
																	"nodeType": "ExpressionStatement",
																	"src": "10818:13:8"
																},
																{
																	"expression": {
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1948,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1936,
																			"src": "10849:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10859:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10849:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1951,
																	"nodeType": "ExpressionStatement",
																	"src": "10849:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1954,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "10894:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10903:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10894:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10908:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10894:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1968,
														"nodeType": "IfStatement",
														"src": "10890:96:8",
														"trueBody": {
															"id": 1967,
															"nodeType": "Block",
															"src": "10911:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1959,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "10929:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10939:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10929:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1962,
																	"nodeType": "ExpressionStatement",
																	"src": "10929:12:8"
																},
																{
																	"expression": {
																		"id": 1965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1963,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1936,
																			"src": "10959:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10969:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10959:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1966,
																	"nodeType": "ExpressionStatement",
																	"src": "10959:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1969,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "11003:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11012:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11003:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11017:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11003:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1983,
														"nodeType": "IfStatement",
														"src": "10999:96:8",
														"trueBody": {
															"id": 1982,
															"nodeType": "Block",
															"src": "11020:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1974,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "11038:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11048:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11038:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1977,
																	"nodeType": "ExpressionStatement",
																	"src": "11038:12:8"
																},
																{
																	"expression": {
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1978,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1936,
																			"src": "11068:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11078:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11068:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1981,
																	"nodeType": "ExpressionStatement",
																	"src": "11068:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1984,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "11112:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11121:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11112:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11126:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11112:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1998,
														"nodeType": "IfStatement",
														"src": "11108:96:8",
														"trueBody": {
															"id": 1997,
															"nodeType": "Block",
															"src": "11129:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1989,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "11147:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11157:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11147:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1992,
																	"nodeType": "ExpressionStatement",
																	"src": "11147:12:8"
																},
																{
																	"expression": {
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1993,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1936,
																			"src": "11177:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11187:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11177:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1996,
																	"nodeType": "ExpressionStatement",
																	"src": "11177:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1999,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "11221:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11230:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11221:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11234:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11221:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2013,
														"nodeType": "IfStatement",
														"src": "11217:93:8",
														"trueBody": {
															"id": 2012,
															"nodeType": "Block",
															"src": "11237:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2004,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "11255:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11265:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11255:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2007,
																	"nodeType": "ExpressionStatement",
																	"src": "11255:11:8"
																},
																{
																	"expression": {
																		"id": 2010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2008,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1936,
																			"src": "11284:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11294:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11284:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2011,
																	"nodeType": "ExpressionStatement",
																	"src": "11284:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2014,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "11327:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11336:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11327:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11340:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11327:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2028,
														"nodeType": "IfStatement",
														"src": "11323:93:8",
														"trueBody": {
															"id": 2027,
															"nodeType": "Block",
															"src": "11343:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2019,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "11361:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11371:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11361:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2022,
																	"nodeType": "ExpressionStatement",
																	"src": "11361:11:8"
																},
																{
																	"expression": {
																		"id": 2025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2023,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1936,
																			"src": "11390:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11400:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11390:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2026,
																	"nodeType": "ExpressionStatement",
																	"src": "11390:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2029,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "11433:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11442:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11433:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11446:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11433:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2043,
														"nodeType": "IfStatement",
														"src": "11429:93:8",
														"trueBody": {
															"id": 2042,
															"nodeType": "Block",
															"src": "11449:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 2036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2034,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "11467:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11477:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11467:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2037,
																	"nodeType": "ExpressionStatement",
																	"src": "11467:11:8"
																},
																{
																	"expression": {
																		"id": 2040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2038,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1936,
																			"src": "11496:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11506:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11496:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2041,
																	"nodeType": "ExpressionStatement",
																	"src": "11496:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2044,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "11539:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11548:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11539:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11552:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11539:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2054,
														"nodeType": "IfStatement",
														"src": "11535:64:8",
														"trueBody": {
															"id": 2053,
															"nodeType": "Block",
															"src": "11555:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2049,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1936,
																			"src": "11573:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11583:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11573:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2052,
																	"nodeType": "ExpressionStatement",
																	"src": "11573:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2056,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1936,
													"src": "11625:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1934,
												"id": 2057,
												"nodeType": "Return",
												"src": "11618:13:8"
											}
										]
									},
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "10537:113:8",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10664:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10677:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "10669:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10669:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10668:15:8"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "10707:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10707:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10706:9:8"
									},
									"scope": 2387,
									"src": "10655:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2094,
										"nodeType": "Block",
										"src": "11871:165:8",
										"statements": [
											{
												"id": 2093,
												"nodeType": "UncheckedBlock",
												"src": "11881:149:8",
												"statements": [
													{
														"assignments": [
															2071
														],
														"declarations": [
															{
																"constant": false,
																"id": 2071,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11913:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2093,
																"src": "11905:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2070,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11905:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2075,
														"initialValue": {
															"arguments": [
																{
																	"id": 2073,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "11927:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2072,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2059,
																	2095
																],
																"referencedDeclaration": 2059,
																"src": "11922:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11922:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11905:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2076,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "11954:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1370",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2077,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2065,
																					"src": "11964:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1370",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2078,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1370,
																						"src": "11976:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1370_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2079,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11985:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1368,
																					"src": "11976:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1370",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11964:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2083,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2081,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11991:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2082,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2071,
																						"src": "11996:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11991:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2084,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2062,
																					"src": "12005:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11991:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11964:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12017:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11964:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12013:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2090,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11963:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11954:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2069,
														"id": 2092,
														"nodeType": "Return",
														"src": "11947:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2060,
										"nodeType": "StructuredDocumentation",
										"src": "11644:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11800:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11813:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "11805:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11805:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11829:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "11820:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1370",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2064,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2063,
														"name": "Rounding",
														"nameLocations": [
															"11820:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1370,
														"src": "11820:8:8"
													},
													"referencedDeclaration": 1370,
													"src": "11820:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1370",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11804:34:8"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "11862:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11862:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11861:9:8"
									},
									"scope": 2387,
									"src": "11791:245:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2223,
										"nodeType": "Block",
										"src": "12223:854:8",
										"statements": [
											{
												"assignments": [
													2104
												],
												"declarations": [
													{
														"constant": false,
														"id": 2104,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12241:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2223,
														"src": "12233:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12233:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2106,
												"initialValue": {
													"hexValue": "30",
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12250:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12233:18:8"
											},
											{
												"id": 2220,
												"nodeType": "UncheckedBlock",
												"src": "12261:787:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2107,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "12289:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12298:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12304:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12298:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12289:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2123,
														"nodeType": "IfStatement",
														"src": "12285:103:8",
														"trueBody": {
															"id": 2122,
															"nodeType": "Block",
															"src": "12308:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2112,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2098,
																			"src": "12326:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12335:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12341:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12335:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12326:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2117,
																	"nodeType": "ExpressionStatement",
																	"src": "12326:17:8"
																},
																{
																	"expression": {
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2118,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "12361:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12371:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12361:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2121,
																	"nodeType": "ExpressionStatement",
																	"src": "12361:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2124,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "12405:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12414:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12420:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12414:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12405:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2140,
														"nodeType": "IfStatement",
														"src": "12401:103:8",
														"trueBody": {
															"id": 2139,
															"nodeType": "Block",
															"src": "12424:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2129,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2098,
																			"src": "12442:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12451:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2131,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12457:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12451:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12442:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2134,
																	"nodeType": "ExpressionStatement",
																	"src": "12442:17:8"
																},
																{
																	"expression": {
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2135,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "12477:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12487:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12477:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2138,
																	"nodeType": "ExpressionStatement",
																	"src": "12477:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2141,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "12521:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12530:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12536:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12530:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12521:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2157,
														"nodeType": "IfStatement",
														"src": "12517:103:8",
														"trueBody": {
															"id": 2156,
															"nodeType": "Block",
															"src": "12540:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2146,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2098,
																			"src": "12558:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12567:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12573:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12567:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12558:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2151,
																	"nodeType": "ExpressionStatement",
																	"src": "12558:17:8"
																},
																{
																	"expression": {
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2152,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "12593:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12603:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12593:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2155,
																	"nodeType": "ExpressionStatement",
																	"src": "12593:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2158,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "12637:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12646:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12652:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12646:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12637:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2174,
														"nodeType": "IfStatement",
														"src": "12633:100:8",
														"trueBody": {
															"id": 2173,
															"nodeType": "Block",
															"src": "12655:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2163,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2098,
																			"src": "12673:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12682:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12688:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12682:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12673:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2168,
																	"nodeType": "ExpressionStatement",
																	"src": "12673:16:8"
																},
																{
																	"expression": {
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2169,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "12707:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12717:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12707:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2172,
																	"nodeType": "ExpressionStatement",
																	"src": "12707:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2175,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "12750:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12759:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12765:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12759:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12750:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2191,
														"nodeType": "IfStatement",
														"src": "12746:100:8",
														"trueBody": {
															"id": 2190,
															"nodeType": "Block",
															"src": "12768:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2180,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2098,
																			"src": "12786:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12795:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12801:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12795:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12786:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2185,
																	"nodeType": "ExpressionStatement",
																	"src": "12786:16:8"
																},
																{
																	"expression": {
																		"id": 2188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2186,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "12820:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12830:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12820:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2189,
																	"nodeType": "ExpressionStatement",
																	"src": "12820:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2192,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "12863:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12872:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12878:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12872:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12863:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2208,
														"nodeType": "IfStatement",
														"src": "12859:100:8",
														"trueBody": {
															"id": 2207,
															"nodeType": "Block",
															"src": "12881:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2197,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2098,
																			"src": "12899:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12908:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12914:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12908:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12899:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2202,
																	"nodeType": "ExpressionStatement",
																	"src": "12899:16:8"
																},
																{
																	"expression": {
																		"id": 2205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2203,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "12933:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12943:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12933:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2206,
																	"nodeType": "ExpressionStatement",
																	"src": "12933:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2209,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "12976:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12985:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12991:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12985:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "12976:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2219,
														"nodeType": "IfStatement",
														"src": "12972:66:8",
														"trueBody": {
															"id": 2218,
															"nodeType": "Block",
															"src": "12994:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2214,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "13012:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13022:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13012:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2217,
																	"nodeType": "ExpressionStatement",
																	"src": "13012:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2221,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2104,
													"src": "13064:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2102,
												"id": 2222,
												"nodeType": "Return",
												"src": "13057:13:8"
											}
										]
									},
									"documentation": {
										"id": 2096,
										"nodeType": "StructuredDocumentation",
										"src": "12042:114:8",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12170:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12184:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "12176:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12176:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12175:15:8"
									},
									"returnParameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "12214:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12214:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12213:9:8"
									},
									"scope": 2387,
									"src": "12161:916:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2259,
										"nodeType": "Block",
										"src": "13312:167:8",
										"statements": [
											{
												"id": 2258,
												"nodeType": "UncheckedBlock",
												"src": "13322:151:8",
												"statements": [
													{
														"assignments": [
															2236
														],
														"declarations": [
															{
																"constant": false,
																"id": 2236,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13354:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2258,
																"src": "13346:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2235,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13346:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2240,
														"initialValue": {
															"arguments": [
																{
																	"id": 2238,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2227,
																	"src": "13369:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2237,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2224,
																	2260
																],
																"referencedDeclaration": 2224,
																"src": "13363:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13363:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13346:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2241,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2236,
																"src": "13396:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1370",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2242,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2230,
																					"src": "13406:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1370",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2243,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1370,
																						"src": "13418:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1370_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2244,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "13427:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1368,
																					"src": "13418:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1370",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "13406:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2246,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13433:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2247,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2236,
																						"src": "13439:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13433:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2249,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2227,
																					"src": "13448:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13433:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13406:47:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13460:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13406:55:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13456:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13405:57:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13396:66:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2234,
														"id": 2257,
														"nodeType": "Return",
														"src": "13389:73:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "13083:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13240:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "13246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13270:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "13261:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1370",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2229,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2228,
														"name": "Rounding",
														"nameLocations": [
															"13261:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1370,
														"src": "13261:8:8"
													},
													"referencedDeclaration": 1370,
													"src": "13261:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1370",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13245:34:8"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "13303:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13303:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13302:9:8"
									},
									"scope": 2387,
									"src": "13231:248:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2346,
										"nodeType": "Block",
										"src": "13793:600:8",
										"statements": [
											{
												"assignments": [
													2269
												],
												"declarations": [
													{
														"constant": false,
														"id": 2269,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13811:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2346,
														"src": "13803:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13803:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2271,
												"initialValue": {
													"hexValue": "30",
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13820:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13803:18:8"
											},
											{
												"id": 2343,
												"nodeType": "UncheckedBlock",
												"src": "13831:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "13859:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13868:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13859:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13874:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13859:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2286,
														"nodeType": "IfStatement",
														"src": "13855:98:8",
														"trueBody": {
															"id": 2285,
															"nodeType": "Block",
															"src": "13877:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2277,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "13895:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13905:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13895:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2280,
																	"nodeType": "ExpressionStatement",
																	"src": "13895:13:8"
																},
																{
																	"expression": {
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2281,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "13926:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13936:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13926:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2284,
																	"nodeType": "ExpressionStatement",
																	"src": "13926:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2287,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "13970:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13979:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "13970:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13984:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13970:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2301,
														"nodeType": "IfStatement",
														"src": "13966:95:8",
														"trueBody": {
															"id": 2300,
															"nodeType": "Block",
															"src": "13987:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2292,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "14005:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14015:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14005:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2295,
																	"nodeType": "ExpressionStatement",
																	"src": "14005:12:8"
																},
																{
																	"expression": {
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2296,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "14035:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14045:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14035:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2299,
																	"nodeType": "ExpressionStatement",
																	"src": "14035:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2302,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "14078:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14087:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14078:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14092:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14078:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2316,
														"nodeType": "IfStatement",
														"src": "14074:95:8",
														"trueBody": {
															"id": 2315,
															"nodeType": "Block",
															"src": "14095:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2307,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "14113:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14123:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14113:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2310,
																	"nodeType": "ExpressionStatement",
																	"src": "14113:12:8"
																},
																{
																	"expression": {
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2311,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "14143:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14153:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14143:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2314,
																	"nodeType": "ExpressionStatement",
																	"src": "14143:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2317,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "14186:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14195:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14186:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14200:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14186:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2331,
														"nodeType": "IfStatement",
														"src": "14182:95:8",
														"trueBody": {
															"id": 2330,
															"nodeType": "Block",
															"src": "14203:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2322,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "14221:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14231:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14221:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2325,
																	"nodeType": "ExpressionStatement",
																	"src": "14221:12:8"
																},
																{
																	"expression": {
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2326,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "14251:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14261:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14251:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2329,
																	"nodeType": "ExpressionStatement",
																	"src": "14251:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2332,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "14294:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14303:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14294:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14307:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14294:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2342,
														"nodeType": "IfStatement",
														"src": "14290:64:8",
														"trueBody": {
															"id": 2341,
															"nodeType": "Block",
															"src": "14310:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2337,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "14328:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14338:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14328:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2340,
																	"nodeType": "ExpressionStatement",
																	"src": "14328:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2344,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2269,
													"src": "14380:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2267,
												"id": 2345,
												"nodeType": "Return",
												"src": "14373:13:8"
											}
										]
									},
									"documentation": {
										"id": 2261,
										"nodeType": "StructuredDocumentation",
										"src": "13485:240:8",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13739:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13754:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "13746:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13746:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13745:15:8"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "13784:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13784:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13783:9:8"
									},
									"scope": 2387,
									"src": "13730:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2385,
										"nodeType": "Block",
										"src": "14630:174:8",
										"statements": [
											{
												"id": 2384,
												"nodeType": "UncheckedBlock",
												"src": "14640:158:8",
												"statements": [
													{
														"assignments": [
															2359
														],
														"declarations": [
															{
																"constant": false,
																"id": 2359,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14672:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2384,
																"src": "14664:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2358,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14664:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2363,
														"initialValue": {
															"arguments": [
																{
																	"id": 2361,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "14688:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2360,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2347,
																	2386
																],
																"referencedDeclaration": 2347,
																"src": "14681:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14681:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14664:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2364,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2359,
																"src": "14715:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1370",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2365,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2353,
																					"src": "14725:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1370",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2366,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1370,
																						"src": "14737:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1370_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "14746:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1368,
																					"src": "14737:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1370",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "14725:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2374,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2369,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14752:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2372,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2370,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2359,
																									"src": "14758:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2371,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14768:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14758:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2373,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14757:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14752:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2375,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "14773:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14752:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14725:53:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14785:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14725:61:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14781:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2381,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14724:63:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14715:72:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2357,
														"id": 2383,
														"nodeType": "Return",
														"src": "14708:79:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2348,
										"nodeType": "StructuredDocumentation",
										"src": "14399:144:8",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14557:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14572:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "14564:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14564:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14588:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "14579:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1370",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2352,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2351,
														"name": "Rounding",
														"nameLocations": [
															"14579:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1370,
														"src": "14579:8:8"
													},
													"referencedDeclaration": 1370,
													"src": "14579:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1370",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14563:34:8"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "14621:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14621:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14620:9:8"
									},
									"scope": 2387,
									"src": "14548:256:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2388,
							"src": "203:14603:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:14704:8"
				},
				"id": 8
			},
			"fury/contracts/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "fury/contracts/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2492
						]
					},
					"id": 2493,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2389,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2390,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:9",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2492,
							"linearizedBaseContracts": [
								2492
							],
							"name": "SignedMath",
							"nameLocation": "224:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "376:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2400,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2393,
															"src": "393:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2401,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2395,
															"src": "397:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2404,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2395,
														"src": "405:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:9",
													"trueExpression": {
														"id": 2403,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2393,
														"src": "401:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2399,
												"id": 2406,
												"nodeType": "Return",
												"src": "386:20:9"
											}
										]
									},
									"documentation": {
										"id": 2391,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:9",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "325:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2392,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "335:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2394,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:9"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "368:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2397,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:9"
									},
									"scope": 2492,
									"src": "312:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2425,
										"nodeType": "Block",
										"src": "555:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2418,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2411,
															"src": "572:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2419,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2413,
															"src": "576:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2422,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "584:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:9",
													"trueExpression": {
														"id": 2421,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "580:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2417,
												"id": 2424,
												"nodeType": "Return",
												"src": "565:20:9"
											}
										]
									},
									"documentation": {
										"id": 2409,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:9",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "504:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2410,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "514:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2412,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:9"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "547:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2415,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:9"
									},
									"scope": 2492,
									"src": "491:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2469,
										"nodeType": "Block",
										"src": "797:162:9",
										"statements": [
											{
												"assignments": [
													2437
												],
												"declarations": [
													{
														"constant": false,
														"id": 2437,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2469,
														"src": "859:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2436,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2450,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2438,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2429,
																	"src": "871:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2439,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2431,
																	"src": "875:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2441,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2442,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2429,
																				"src": "882:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2443,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2431,
																				"src": "886:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2445,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2448,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2451,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "911:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2456,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2437,
																						"src": "931:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2455,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2454,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2452,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2461,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2429,
																				"src": "945:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2462,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2431,
																				"src": "949:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2464,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2466,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2435,
												"id": 2468,
												"nodeType": "Return",
												"src": "904:48:9"
											}
										]
									},
									"documentation": {
										"id": 2427,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:9",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "746:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2428,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "756:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2430,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:9"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "789:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2433,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:9"
									},
									"scope": 2492,
									"src": "729:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2490,
										"nodeType": "Block",
										"src": "1103:158:9",
										"statements": [
											{
												"id": 2489,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2480,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "1228:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:9",
																		"subExpression": {
																			"id": 2484,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "1242:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:9",
																	"trueExpression": {
																		"id": 2483,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2473,
																		"src": "1237:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2478,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2477,
														"id": 2488,
														"nodeType": "Return",
														"src": "1213:31:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2471,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:9",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "1061:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2472,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:9"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "1094:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:9"
									},
									"scope": 2492,
									"src": "1048:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2493,
							"src": "216:1047:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:9"
				},
				"id": 9
			}
		}
	}
}